var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.726,1,1.261]],["body/components/AppComponent.html",[0,0.686,1,1.381,2,1.045,3,0.225,4,0.196,5,0.713,6,0.713,7,0.713,8,0.196,9,1.084,10,0.837,11,1.945,12,2.783,13,0.456,14,1.937,15,1.498,16,1.786,17,0.934,18,2.047,19,1.33,20,1.381,21,2.278,22,3.569,23,1.545,24,2.783,25,1.525,26,2.183,27,2.183,28,2.183,29,0.225,30,0.602,31,1.498,32,1.945,33,2.783,34,4.396,35,2.783,36,2.783,37,4.06,38,2.34,39,0.751,40,3.227,41,2.255,42,2.183,43,1.333,44,1.25,45,2.183,46,1.325,47,0.995,48,0.043,49,1.709,50,1.325,51,2.183,52,1.921,53,1.325,54,0.456,55,0.946,56,0.515,57,0.326,58,0.634,59,2.183,60,3.227,61,2.183,62,2.183,63,0.837,64,1.396,65,0.946,66,1.737,67,2.278,68,1.325,69,1.945,70,2.183,71,1.325,72,3.569,73,1.368,74,1.325,75,2.497,76,1.325,77,1.786,78,2.183,79,0.388,80,1.921,81,2.183,82,2.641,83,2.183,84,2.183,85,2.255,86,1.786,87,2.683,88,1.786,89,2.837,90,1.709,91,2.255,92,1.921,93,1.786,94,2.175,95,1.786,96,2.792,97,3.472,98,3.472,99,3.472,100,3.472,101,2.278,102,4.972,103,2.183,104,0.673,105,1.786,106,2.183,107,2.183,108,4.972,109,1.786,110,1.786,111,1.786,112,2.183,113,1.786,114,1.786,115,1.786,116,1.786,117,1.786,118,1.786,119,1.325,120,0.851,121,0.326,122,1.084,123,3.569,124,0.926,125,1.325,126,0.713,127,1.325,128,1.325,129,0.808,130,1.325,131,0.713,132,0.713,133,0.926,134,1.325,135,0.225,136,0.366,137,2.183,138,1.084,139,1.325,140,1.325,141,1.325,142,1.325,143,1.325,144,0.713,145,1.325,146,1.325,147,3.84,148,1.325,149,1.325,150,2.255,151,3.84,152,1.325,153,1.325,154,1.325,155,1.325,156,1.325,157,1.325,158,1.325,159,2.183,160,1.325,161,1.325,162,1.325,163,1.325,164,1.325,165,1.325,166,1.325,167,1.325,168,1.325,169,3.569,170,1.325,171,3.569,172,1.325,173,1.325,174,1.325,175,1.325,176,1.325,177,1.325,178,1.325,179,1.325,180,1.325,181,1.325,182,1.325,183,1.325,184,1.325,185,3.227,186,2.183,187,2.183,188,2.183,189,2.183,190,2.183,191,2.183,192,2.183,193,2.183,194,2.183,195,2.183,196,3.227,197,3.227,198,2.641,199,2.183,200,3.227,201,2.183,202,2.183,203,0.713,204,1.175,205,1.175,206,0.409,207,1.737,208,0.713,209,0.713,210,0.713,211,0.713,212,0.567,213,0.713,214,0.713,215,0.567,216,0.713,217,0.713,218,0.567,219,0.508,220,0.508,221,0.713,222,0.508,223,0.634,224,0.713,225,0.016,226,0.016]],["title/components/CircularSpinnerComponent.html",[0,0.726,20,1.261]],["body/components/CircularSpinnerComponent.html",[0,0.964,1,0.965,2,1.582,3,0.383,4,0.333,5,1.213,6,1.213,7,1.213,8,0.333,13,0.775,14,2.255,15,1.213,17,1.414,18,1.5,19,2.014,20,1.844,21,3.202,23,1.079,25,2.309,29,0.383,44,1.454,48,0.043,55,0.665,56,0.644,63,1.5,64,1.919,65,1.252,73,1.267,75,1.213,79,0.381,90,1.079,94,1.374,120,0.834,121,0.555,131,1.213,132,2.106,133,2.734,135,0.383,136,0.622,198,2.705,203,1.213,204,1.778,205,1.778,206,0.695,207,2.319,208,1.213,209,1.213,210,2.836,211,1.213,212,1.844,213,1.213,214,1.213,215,0.965,216,1.213,217,1.213,218,2.312,219,0.864,220,0.864,221,1.213,222,0.864,223,1.079,224,1.213,225,0.024,226,0.024,227,2.385,228,0.496,229,1.845,230,3.304,231,3.733,232,2.705,233,3.912,234,3.304,235,1.582,236,3.206,237,3.202,238,2.705,239,2.385,240,3.202,241,3.202,242,3.202,243,1.778,244,3.912,245,3.912,246,0.964,247,1.845,248,5.081,249,2.254,250,2.254,251,1.845,252,2.254,253,1.845,254,2.705,255,2.254,256,2.385,257,2.254,258,2.254,259,2.254,260,1.374,261,1.845,262,2.254,263,3.755,264,2.254,265,2.254,266,2.254,267,2.254,268,1.845,269,1.267,270,2.254,271,1.845,272,2.254,273,2.254,274,3.304,275,2.705,276,2.254,277,2.254,278,2.254,279,2.254,280,2.254,281,0.965,282,3.304,283,2.254,284,3.304,285,2.254,286,2.254,287,2.254,288,2.254]],["title/interfaces/Column.html",[289,1.014,290,1.796]],["body/interfaces/Column.html",[3,0.579,4,0.503,8,0.503,29,0.579,30,1.213,48,0.043,55,0.904,56,0.744,57,1.342,73,2.176,79,0.301,96,2.766,97,4.207,98,4.207,99,4.207,100,4.207,104,1.585,105,2.788,111,3.982,135,0.579,225,0.032,226,0.032,228,0.432,246,1.435,289,1.172,290,2.679,291,1.834,292,2.788,293,4.207,294,3.597,295,4.865,296,4.865]],["title/pipes/DynamicPipe.html",[104,0.909,297,2.06]],["body/pipes/DynamicPipe.html",[3,0.535,4,0.465,8,0.465,10,1.207,13,1.082,17,1.786,18,1.6,39,1.082,44,0.869,47,1.443,48,0.043,54,1.082,55,0.847,56,0.676,57,1.153,58,1.998,65,1.313,79,0.368,104,1.766,120,0.609,121,0.775,135,0.535,136,0.869,144,2.683,225,0.03,226,0.03,228,0.529,269,1.207,297,3.725,298,1.918,299,2.576,300,4.173,301,4.681,302,4.985,303,1.918,304,2.916,305,5.187,306,5.187,307,3.147,308,2.916,309,3.415,310,3.415,311,3.415,312,4.173,313,5.438,314,2.916,315,2.576,316,2.576,317,2.576,318,2.576,319,2.543,320,3.147,321,3.147,322,3.147,323,2.576,324,3.147,325,3.147,326,3.147]],["title/injectables/DynamicTableService.html",[327,1.796,328,2.06]],["body/injectables/DynamicTableService.html",[3,0.519,4,0.451,8,0.451,16,2.501,29,0.519,30,1.129,31,2.845,32,3.224,39,1.407,43,2.209,44,1.49,47,1.262,48,0.043,49,1.959,54,1.407,55,0.695,56,0.625,57,1.008,64,1.694,65,1.214,66,2.652,67,3.776,69,3.59,73,1.769,79,0.485,120,0.792,121,0.753,126,1.645,135,0.519,136,0.844,225,0.029,226,0.029,228,0.696,246,1.137,327,2.494,328,2.86,329,3.056,330,4.49,331,2.501,332,4.613,333,4.613,334,4.927,335,4.927,336,4.092,337,4.092,338,4.092,339,4.092,340,3.056,341,4.092,342,3.056,343,4.092,344,3.056,345,3.056,346,4.092,347,4.092,348,3.056,349,3.056,350,3.056,351,3.056]],["title/components/IconsComponent.html",[0,0.726,212,1.261]],["body/components/IconsComponent.html",[0,1.201,1,1.129,2,1.771,3,0.448,4,0.39,5,1.991,6,1.42,7,1.42,8,0.631,13,0.907,14,2.335,15,1.42,17,1.583,18,1.419,19,1.608,20,1.129,23,1.263,29,0.448,31,1.42,43,1.263,44,1.179,47,0.814,48,0.043,49,1.263,54,1.272,55,0.915,56,0.587,57,0.911,58,1.263,79,0.431,120,0.716,121,0.65,135,0.448,136,0.728,144,1.991,203,1.42,204,1.991,205,2.794,206,0.814,207,2.492,208,1.42,209,1.42,210,1.42,211,1.42,212,2.222,213,1.42,214,1.42,215,1.129,216,1.42,217,1.42,218,1.129,219,1.012,220,1.012,221,1.42,222,1.012,223,1.263,224,1.42,225,0.027,226,0.027,227,2.604,228,0.587,235,1.771,243,1.991,246,1.201,260,2.255,315,3.028,316,3.028,318,2.159,352,2.159,353,3.533,354,3.702,355,4.877,356,4.877,357,3.028,358,3.7,359,3.7,360,3.028,361,3.7,362,3.7,363,2.638,364,3.408,365,3.79,366,3.991,367,2.638,368,3.7,369,4.631,370,2.638,371,1.991,372,2.638,373,2.638,374,2.638,375,2.638,376,2.638,377,2.638]],["title/pipes/IdToValuePipe.html",[104,0.909,378,2.06]],["body/pipes/IdToValuePipe.html",[3,0.572,4,0.497,8,0.497,10,1.292,13,1.158,39,1.158,44,0.93,47,1.492,48,0.043,54,1.158,55,0.822,56,0.427,57,0.83,58,2.089,65,1.425,79,0.385,80,2.348,96,2.853,104,1.578,120,0.652,121,0.83,135,0.572,136,0.93,144,2.348,225,0.031,226,0.031,228,0.553,246,1.38,269,1.855,298,2.053,303,2.053,304,3.049,308,3.049,311,3.57,314,3.049,378,3.049,379,3.57,380,3.57,381,2.757,382,4.362,383,4.362,384,5.301,385,3.368,386,4.362,387,3.368,388,3.368,389,3.368,390,3.368,391,3.368,392,3.368,393,3.368,394,3.368,395,3.368]],["title/directives/MobilePaginationDirective.html",[206,0.909,220,1.13]],["body/directives/MobilePaginationDirective.html",[3,0.215,4,0.187,8,0.187,10,0.806,13,0.435,14,0.9,17,0.9,18,1.44,29,0.458,30,0.58,31,3.043,32,0.885,39,0.723,43,0.606,44,1.452,47,1.41,48,0.043,49,2.354,54,1.197,55,0.592,56,0.623,57,0.98,63,1.885,64,1.292,65,0.925,66,0.681,73,1.034,75,1.131,79,0.468,85,0.885,90,1.667,92,1.131,104,0.39,120,0.522,121,0.312,126,0.681,135,0.215,136,0.349,206,0.648,219,0.486,220,0.806,225,0.015,226,0.015,228,0.671,235,1.007,236,0.885,239,1.281,269,1.034,281,1.782,293,1.036,319,3.183,364,2.781,365,2.206,366,2.569,371,2.021,396,4.333,397,4.333,398,1.036,399,2.696,400,2.696,401,2.102,402,2.696,403,2.696,404,2.696,405,2.696,406,3.139,407,2.102,408,3.139,409,2.102,410,3.139,411,3.139,412,2.102,413,2.696,414,3.139,415,3.139,416,2.102,417,2.696,418,2.696,419,2.696,420,2.696,421,2.696,422,2.102,423,2.696,424,1.266,425,3.139,426,2.102,427,2.102,428,1.266,429,1.266,430,1.266,431,1.266,432,1.266,433,3.139,434,1.266,435,1.266,436,2.102,437,3.756,438,1.266,439,1.266,440,1.266,441,2.102,442,1.266,443,3.899,444,1.266,445,1.266,446,2.102,447,3.139,448,1.266,449,1.266,450,1.266,451,1.266,452,1.266,453,2.102,454,1.266,455,1.266,456,1.266,457,1.266,458,1.266,459,2.102,460,2.102,461,1.266,462,1.266,463,1.266,464,1.266,465,1.266,466,1.266,467,1.266,468,1.266,469,1.266,470,1.266,471,1.266,472,1.266,473,1.266,474,1.266,475,1.266,476,1.266,477,1.266,478,2.102,479,1.266,480,1.266,481,1.266,482,1.266,483,1.266,484,1.266,485,1.266,486,3.139,487,2.102,488,1.266,489,1.266,490,1.266,491,4.573,492,3.743,493,2.696,494,1.266,495,3.139,496,1.266,497,1.266,498,1.266,499,1.266,500,1.266,501,1.266,502,2.102,503,1.266,504,2.102,505,1.266,506,1.266,507,2.102,508,2.696,509,1.266,510,2.102,511,1.266,512,2.102,513,3.979,514,1.036,515,1.266,516,1.266,517,3.139,518,2.102,519,3.756,520,1.036,521,1.266,522,2.102,523,1.266,524,1.266,525,2.696,526,2.696,527,1.266,528,2.696,529,1.721,530,1.266,531,2.102,532,1.036,533,1.266,534,1.036,535,1.266,536,1.266,537,1.266,538,2.102,539,2.102,540,1.266,541,2.102,542,2.102,543,1.266,544,2.102,545,1.266,546,1.266,547,2.102,548,1.266,549,1.266,550,1.266,551,1.266,552,1.266,553,1.266,554,1.266,555,1.266,556,1.266,557,2.696,558,2.102,559,1.266,560,1.266,561,2.102,562,2.102,563,2.102,564,2.102,565,1.266,566,1.266,567,1.266,568,1.266,569,2.102,570,2.696,571,1.266,572,2.102,573,1.266,574,3.482,575,1.266,576,1.266,577,1.266,578,0.885,579,1.266,580,1.266,581,1.266,582,1.266,583,2.102,584,1.266,585,1.266]],["title/components/ScrollIndicatorComponent.html",[0,0.726,215,1.261]],["body/components/ScrollIndicatorComponent.html",[0,0.872,1,0.816,2,1.396,3,0.324,4,0.282,5,1.026,6,1.026,7,1.026,8,0.282,10,1.118,11,2.473,13,0.656,14,2.163,15,1.026,17,1.248,18,1.638,19,1.777,20,0.816,23,0.913,25,2.037,29,0.324,30,0.805,39,1.003,41,2.473,43,1.396,44,1.486,47,1.445,48,0.043,49,2.372,54,0.656,55,0.673,56,0.571,57,0.47,63,1.118,64,1.217,65,0.977,69,2.985,73,1.52,75,2.522,79,0.483,120,0.767,121,0.47,126,1.026,131,1.026,135,0.324,136,0.526,138,1.56,203,1.026,204,1.569,205,1.569,206,0.588,207,2.133,208,1.026,209,1.026,210,1.026,211,1.026,212,1.696,213,1.026,214,1.026,215,1.696,216,2.806,217,1.026,218,0.816,219,0.731,220,0.731,221,1.026,222,0.731,223,0.913,224,1.026,225,0.021,226,0.021,227,1.162,228,0.688,232,2.386,235,1.396,243,1.569,256,1.777,268,1.56,281,1.515,353,1.332,371,2.133,529,1.56,534,2.386,578,2.037,586,4.442,587,4.442,588,1.56,589,2.915,590,3.539,591,3.539,592,3.539,593,2.915,594,3.539,595,3.539,596,3.964,597,4.953,598,3.964,599,3.964,600,3.964,601,3.244,602,3.539,603,3.539,604,2.915,605,3.539,606,3.539,607,1.907,608,2.915,609,2.386,610,1.907,611,1.907,612,2.915,613,2.915,614,1.907,615,1.907,616,2.915,617,1.907,618,2.915,619,2.915,620,1.907,621,1.907,622,1.907,623,1.907,624,1.907,625,1.907,626,1.907,627,1.907,628,2.915,629,1.907,630,1.907,631,3.964,632,1.907,633,3.539,634,3.964,635,2.915,636,2.915,637,2.915,638,2.915]],["title/components/SpinnerComponent.html",[0,0.726,218,1.261]],["body/components/SpinnerComponent.html",[0,0.906,1,0.868,2,1.463,3,0.345,4,0.3,5,1.092,6,1.092,7,1.092,8,0.3,14,2.108,15,1.092,18,1.172,20,0.868,23,0.972,29,0.345,39,1.051,44,1.391,47,0.626,48,0.044,55,0.625,56,0.696,58,0.972,63,1.683,64,1.961,65,1.214,73,1.172,75,1.645,79,0.461,120,0.393,121,0.5,132,2.764,135,0.519,136,1.015,203,1.092,204,1.645,205,1.645,206,0.626,207,2.202,208,1.092,209,1.092,210,1.092,211,1.092,212,0.868,213,1.092,214,1.092,215,0.868,216,1.092,217,1.092,218,1.751,219,0.778,220,0.778,221,1.092,222,0.778,223,0.972,224,1.092,225,0.022,226,0.022,227,2.241,228,0.651,231,3.883,235,1.463,236,3.443,237,3.593,238,3.009,239,2.812,240,3.593,241,3.593,242,3.593,243,1.645,246,1.33,247,2.501,251,2.501,253,2.501,254,2.501,256,1.863,260,1.863,261,2.501,263,2.501,269,0.778,271,1.661,319,1.237,371,2.713,639,1.418,640,3.677,641,3.056,642,2.501,643,3.056,644,3.056,645,3.056,646,3.677,647,2.029,648,2.029,649,2.029,650,2.029,651,2.029,652,2.029,653,2.029,654,2.029,655,2.029,656,2.029,657,3.056,658,3.056,659,3.056,660,1.418,661,1.661,662,2.501,663,1.661,664,1.661,665,2.029,666,2.029,667,2.029,668,3.056,669,1.661,670,1.661,671,3.056,672,2.029]],["title/directives/StickyDirective.html",[206,0.909,222,1.13]],["body/directives/StickyDirective.html",[3,0.372,4,0.323,8,0.323,10,1.24,11,2.687,13,0.752,14,1.383,17,1.383,18,1.24,29,0.372,30,0.892,31,2.969,39,1.112,41,2.968,43,1.548,44,1.465,47,1.397,48,0.043,49,2.35,54,1.461,55,0.722,56,0.639,57,1.046,63,1.24,64,1.112,65,1.349,77,3.147,79,0.474,120,0.626,121,0.539,131,1.177,135,0.372,136,0.604,206,0.997,219,0.839,222,1.24,223,2.034,225,0.023,226,0.023,228,0.681,235,1.548,243,1.74,246,1.359,269,0.839,281,1.383,317,1.79,319,1.333,353,1.529,364,3.792,371,2.286,443,4.48,514,1.79,532,2.646,578,2.968,664,3.147,670,1.79,673,1.79,674,3.845,675,4.247,676,3.845,677,3.845,678,4.531,679,4.247,680,2.188,681,4.743,682,3.845,683,3.845,684,3.233,685,3.233,686,2.646,687,2.188,688,2.188,689,2.188,690,2.188,691,2.188,692,3.233,693,2.188,694,2.188,695,3.233,696,2.188,697,2.188,698,2.188,699,2.188,700,2.188,701,2.188,702,2.188,703,2.188,704,2.188,705,2.188,706,2.188,707,3.845,708,2.188,709,2.188,710,2.188,711,2.188,712,4.247,713,2.188,714,2.188,715,2.188,716,2.188,717,2.188,718,2.188]],["title/interfaces/TableAction.html",[289,1.014,719,1.586]],["body/interfaces/TableAction.html",[3,0.671,4,0.583,8,0.583,29,0.671,30,1.331,48,0.042,52,2.126,55,0.921,56,0.66,79,0.349,87,3.789,89,3.885,96,2.126,120,0.765,129,3.388,135,0.819,150,2.761,225,0.035,226,0.035,228,0.501,246,1.411,289,1.659,291,2.126,719,2.596,720,2.761,721,3.233]],["title/interfaces/TableActionReturn.html",[52,1.586,289,1.014]],["body/interfaces/TableActionReturn.html",[3,0.668,4,0.58,8,0.58,29,0.668,30,1.327,48,0.042,52,2.587,55,0.668,56,0.658,57,1.333,79,0.347,87,2.746,89,3.879,96,2.912,120,0.761,129,3.383,135,0.817,150,3.782,225,0.035,226,0.035,228,0.498,246,1.368,289,1.653,291,2.115,719,2.115,720,2.746,721,3.216]],["title/interfaces/Tableoptions.html",[38,1.796,289,1.014]],["body/interfaces/Tableoptions.html",[3,0.57,4,0.495,8,0.495,29,0.57,30,1.201,38,2.651,48,0.043,56,0.717,57,1.425,73,2.169,79,0.296,85,3.57,95,4.181,109,4.181,110,4.181,113,4.181,114,4.181,115,4.181,116,4.181,117,4.181,118,3.951,120,0.842,135,0.57,225,0.031,226,0.031,228,0.425,246,1.394,289,1.153,290,3.114,291,1.805,719,2.75,722,2.744,723,4.828,724,3.353,725,3.353]],["title/pipes/TruncatePipe.html",[104,0.909,726,2.06]],["body/pipes/TruncatePipe.html",[3,0.551,4,0.479,8,0.479,10,1.244,13,1.115,39,1.115,44,0.895,47,1.615,48,0.043,54,1.115,55,0.807,56,0.411,57,0.799,58,2.038,63,2.131,64,1.115,65,1.398,79,0.376,104,1.555,120,0.628,121,0.799,135,0.551,136,0.895,144,2.715,225,0.031,226,0.031,228,0.54,246,1.243,269,1.632,281,1.821,298,1.977,303,1.977,304,2.974,308,2.974,309,3.483,310,3.483,314,2.974,686,2.654,726,2.974,727,2.654,728,5.376,729,4.256,730,5.044,731,4.751,732,5.238,733,3.243,734,4.256,735,4.256,736,4.256,737,4.256,738,3.243,739,3.243,740,3.243,741,3.243]],["title/changelog.html",[742,2.026,743,2.026,744,2.026]],["body/changelog.html",[48,0.041,225,0.037,226,0.037,360,3.684,744,3.684,745,3.684,746,4.501,747,4.501,748,4.501,749,4.501,750,4.501,751,4.501,752,4.501]],["title/coverage.html",[753,3.268]],["body/coverage.html",[0,1.293,1,1.276,8,0.441,9,2.441,20,1.276,23,1.428,38,1.818,48,0.042,52,1.605,56,0.378,66,1.605,79,0.519,80,1.605,104,1.405,124,2.813,132,2.452,133,2.084,206,1.241,212,1.276,215,1.276,218,1.276,220,1.144,222,1.144,225,0.029,226,0.029,228,0.74,229,2.441,256,3.105,281,2.431,289,1.678,290,1.818,292,2.441,297,2.084,299,2.441,327,1.818,328,2.084,330,2.441,331,2.441,352,2.441,354,2.084,378,2.084,379,2.441,380,2.441,381,2.441,396,2.441,397,2.441,398,2.441,586,2.441,587,2.441,588,2.441,639,2.813,660,2.084,673,2.441,719,1.605,720,2.813,722,2.441,726,2.084,727,2.441,745,2.441,753,2.441,754,2.983,755,2.983,756,2.983,757,2.983,758,2.441,759,4.878,760,2.441,761,4.878,762,2.983,763,2.983,764,2.983,765,2.983,766,2.441,767,2.983,768,2.983,769,4.557,770,4.025,771,3.295,772,2.983,773,2.983,774,2.441,775,4.557,776,2.983,777,2.983]],["title/dependencies.html",[778,1.73,779,2.895]],["body/dependencies.html",[48,0.043,79,0.363,121,1.014,122,3.368,126,2.215,131,2.215,225,0.035,226,0.035,779,3.368,780,4.115,781,4.823,782,4.115,783,4.115,784,4.115,785,4.115,786,4.943,787,4.943,788,4.115,789,4.115,790,4.115,791,4.115,792,4.115]],["title/miscellaneous/enumerations.html",[793,1.509,794,2.895]],["body/miscellaneous/enumerations.html",[29,0.69,48,0.042,65,1.431,79,0.358,80,2.184,82,3.322,86,3.322,90,1.943,91,2.836,92,2.184,94,2.474,129,2.988,225,0.035,226,0.035,228,0.515,269,1.556,609,3.322,642,3.322,793,2.474,794,3.322,795,4.059,796,4.059,797,4.059,798,4.059,799,4.059,800,3.322,801,4.059,802,2.836,803,4.059,804,4.059,805,3.322,806,4.059,807,4.059,808,4.059,809,4.059]],["title/index.html",[29,0.421,742,2.026,743,2.026]],["body/index.html",[0,1.22,4,0.522,10,1.356,48,0.032,55,0.601,66,1.903,225,0.032,226,0.032,275,4.052,357,4.052,520,2.895,601,2.895,778,2.472,781,2.895,802,2.472,810,3.537,811,4.501,812,3.537,813,4.951,814,2.895,815,3.537,816,4.501,817,5.382,818,5.59,819,3.537,820,3.537,821,3.537,822,3.537,823,3.537,824,3.537,825,3.537,826,3.537,827,3.537,828,3.537,829,4.951,830,3.537,831,5.212,832,3.537,833,3.537,834,3.537,835,3.537,836,4.501,837,4.501,838,5.212,839,3.537,840,4.501,841,4.501,842,3.537,843,5.502,844,3.537,845,3.537,846,3.537,847,4.501,848,3.537,849,3.537,850,2.895,851,3.537,852,3.537,853,3.537,854,4.951,855,3.537,856,3.537,857,3.537,858,2.472,859,3.537]],["title/modules.html",[860,3.268]],["body/modules.html",[48,0.038,225,0.038,226,0.038,860,3.811]],["title/overview.html",[858,2.791]],["body/overview.html",[2,2.162,48,0.037,90,2.162,92,2.43,94,2.752,101,3.695,219,1.731,225,0.037,226,0.037,291,2.43,298,2.752,327,2.752,858,3.155,861,4.515]],["title/properties.html",[30,0.976,778,1.73]],["body/properties.html",[30,1.273,48,0.04,225,0.038,226,0.038,814,3.776,862,4.613]],["title/miscellaneous/variables.html",[793,1.509,863,2.895]],["body/miscellaneous/variables.html",[29,0.476,48,0.044,56,0.559,63,1.075,64,1.635,65,1.171,79,0.44,80,1.508,88,2.294,90,1.342,91,1.959,92,1.508,93,3.158,124,1.959,132,1.508,225,0.028,226,0.028,228,0.559,231,1.959,239,1.708,246,0.69,260,2.689,281,1.199,294,2.294,303,2.689,323,2.294,354,2.696,492,3.158,639,1.959,660,2.696,661,2.294,662,3.158,663,2.294,669,3.611,758,2.294,760,3.158,766,2.294,771,3.158,774,3.158,793,1.708,800,2.294,802,2.696,805,2.294,850,2.294,863,2.294,864,2.803,865,2.803,866,2.803,867,2.803,868,2.803,869,2.803,870,2.803,871,2.803,872,2.803,873,2.803,874,4.412,875,2.803,876,2.803,877,2.803,878,4.412,879,2.803,880,2.803,881,2.803,882,2.803,883,2.803,884,2.803,885,4.753,886,3.858,887,3.858,888,3.858,889,2.803,890,2.803,891,2.803,892,4.412,893,2.803,894,2.803,895,3.858,896,3.858,897,2.803,898,3.858,899,3.858,900,3.858]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":862,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["00:00:59",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["01.01.2023",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["01.01.2024",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["01.02.2023",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["03.02.2023",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["037bfc",{"_index":247,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["04.02.2023",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":686,"title":{},"body":{"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["100",{"_index":256,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["100ms",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["128",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["132",{"_index":288,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["134",{"_index":286,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["140",{"_index":276,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["150ms",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":609,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["160",{"_index":261,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["17.2.0",{"_index":781,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["174",{"_index":287,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["18px",{"_index":576,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["2",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":734,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["2000",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["3/3",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["306",{"_index":283,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["32",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["40",{"_index":285,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["5",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":254,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["550px",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":861,"title":{},"body":{"overview.html":{}}}],["6/26",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6px",{"_index":579,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["7.8.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8/9",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":564,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["9",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["919191",{"_index":580,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["_data",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["_iseditable",{"_index":332,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["_scrollcontainer",{"_index":674,"title":{},"body":{"directives/StickyDirective.html":{}}}],["_textfilter",{"_index":333,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["absolute",{"_index":533,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["abstract",{"_index":640,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["action",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["actioncontainer",{"_index":538,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["actions",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"interfaces/Tableoptions.html":{}}}],["actual_component",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["add",{"_index":850,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":399,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["alert",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":275,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["angular/material/paginator",{"_index":461,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["angular/platform",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["animate(\".35s",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":273,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["app.component.html",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcustomlength",{"_index":417,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["application",{"_index":823,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["arguments",{"_index":302,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["artifacts",{"_index":832,"title":{},"body":{"index.html":{}}}],["asc",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["ascending",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["automatically",{"_index":824,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":636,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["behaviorsubject",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{}}}],["behaviorsubject(false",{"_index":343,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["belongs",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["berlin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["beschreibung",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["bezeichnung",{"_index":390,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["block",{"_index":502,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["boolean",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/Tableoptions.html":{}}}],["box",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["browser",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["bubble",{"_index":544,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubble__active",{"_index":487,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubblebutton",{"_index":557,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubblecontainerref",{"_index":402,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["build",{"_index":831,"title":{},"body":{"index.html":{}}}],["buildbuttons",{"_index":406,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["button",{"_index":556,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["button.mat",{"_index":525,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["buttonsref",{"_index":403,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["capabilities",{"_index":852,"title":{},"body":{"index.html":{}}}],["case",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["cell",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["change",{"_index":601,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"index.html":{}}}],["change(value",{"_index":626,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["changeactivebuttonstyles",{"_index":407,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changeactivebuttonstyles(previousindex",{"_index":436,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changelog",{"_index":744,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":449,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changes?.['appcustomlength']?.firstchange",{"_index":465,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["charlimit",{"_index":735,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["check",{"_index":802,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkall",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["checkbox",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["checked",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["checklist",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["checkscrollablecontent",{"_index":596,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["choice",{"_index":846,"title":{},"body":{"index.html":{}}}],["circular",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["circularspinnercomponent",{"_index":20,"title":{"components/CircularSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["class",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["classes",{"_index":359,"title":{},"body":{"components/IconsComponent.html":{}}}],["cli",{"_index":813,"title":{},"body":{"index.html":{}}}],["click",{"_index":567,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["code",{"_index":827,"title":{},"body":{"index.html":{}}}],["color",{"_index":236,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{}}}],["column",{"_index":290,"title":{"interfaces/Column.html":{}},"body":{"interfaces/Column.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["column.model",{"_index":725,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["columnfilter",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["columnnames",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["columns",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["command",{"_index":847,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["console.log('check",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('default",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('delete",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('destroy",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('edit",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('kat",{"_index":387,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["console.log('refresh",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('show",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('update",{"_index":630,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["const",{"_index":319,"title":{},"body":{"pipes/DynamicPipe.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["constructor(@host",{"_index":464,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["constructor(document",{"_index":680,"title":{},"body":{"directives/StickyDirective.html":{}}}],["constructor(element",{"_index":363,"title":{},"body":{"components/IconsComponent.html":{}}}],["constructor(matpag",{"_index":424,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["constructor(private",{"_index":318,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{}}}],["container",{"_index":545,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["count",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":753,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createbubbledivref",{"_index":408,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createbutton",{"_index":409,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createbutton(i",{"_index":441,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createdotselement",{"_index":410,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["creates",{"_index":315,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{}}}],["cssstyledeclaration",{"_index":717,"title":{},"body":{"directives/StickyDirective.html":{}}}],["curr",{"_index":478,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["currentactive",{"_index":482,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dasharray",{"_index":284,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["dashoffset",{"_index":282,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["dashstyle",{"_index":245,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["data",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["datepipe",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["datetime",{"_index":295,"title":{},"body":{"interfaces/Column.html":{}}}],["datum/zeit",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["dd.mm.yyyy",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["decorators",{"_index":616,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["defines",{"_index":798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["depended",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":779,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desc",{"_index":723,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["descending",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"components/SpinnerComponent.html":{},"pipes/TruncatePipe.html":{}}}],["destroy",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["details",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":820,"title":{},"body":{"index.html":{}}}],["development",{"_index":815,"title":{},"body":{"index.html":{}}}],["die",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["dies",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["dieser",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":206,"title":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"coverage.html":{}}}],["directives",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":830,"title":{},"body":{"index.html":{}}}],["directory",{"_index":835,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":293,"title":{},"body":{"interfaces/Column.html":{},"directives/MobilePaginationDirective.html":{}}}],["display",{"_index":491,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dist",{"_index":834,"title":{},"body":{"index.html":{}}}],["distance",{"_index":602,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["div.mat",{"_index":540,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["document",{"_index":681,"title":{},"body":{"directives/StickyDirective.html":{}}}],["documentation",{"_index":745,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["dot",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dots",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotsel",{"_index":570,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotsendref",{"_index":404,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotsstartref",{"_index":405,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotstext",{"_index":572,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dresden",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dynamicpipe",{"_index":297,"title":{"pipes/DynamicPipe.html":{}},"body":{"pipes/DynamicPipe.html":{},"coverage.html":{}}}],["dynamictableservice",{"_index":328,"title":{"injectables/DynamicTableService.html":{}},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["e.pageindex",{"_index":475,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["e.previouspageindex",{"_index":474,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["e2e",{"_index":844,"title":{},"body":{"index.html":{}}}],["ease",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["elementref",{"_index":364,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["ellipsis",{"_index":732,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enabled",{"_index":237,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["encapsulation",{"_index":361,"title":{},"body":{"components/IconsComponent.html":{}}}],["end",{"_index":843,"title":{},"body":{"index.html":{}}}],["enddots",{"_index":495,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endingindex",{"_index":511,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endingsigns",{"_index":737,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enumeration",{"_index":797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":794,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["event.action",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["event.row",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitter",{"_index":433,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["example",{"_index":360,"title":{},"body":{"components/IconsComponent.html":{},"changelog.html":{}}}],["exclude",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["exclude.ts",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["execute",{"_index":840,"title":{},"body":{"index.html":{}}}],["export",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["extends",{"_index":230,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["eye",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["files",{"_index":826,"title":{},"body":{"index.html":{}}}],["filter",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":849,"title":{},"body":{"index.html":{}}}],["firstbutton",{"_index":496,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["flex",{"_index":504,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["font",{"_index":575,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["function",{"_index":308,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["further",{"_index":853,"title":{},"body":{"index.html":{}}}],["generate",{"_index":829,"title":{},"body":{"index.html":{}}}],["generated",{"_index":812,"title":{},"body":{"index.html":{}}}],["getdashstyle",{"_index":266,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["getscrollcontainer",{"_index":697,"title":{},"body":{"directives/StickyDirective.html":{}}}],["getstrokewidth",{"_index":264,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["getsvgstyle",{"_index":655,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["getting",{"_index":742,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["go",{"_index":856,"title":{},"body":{"index.html":{}}}],["hamburg",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["header",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["height",{"_index":669,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":854,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["hidden",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["hide",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["hidedefaultarrows",{"_index":418,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["horizontal",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":458,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["hostlistener",{"_index":625,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener(\"window:resize",{"_index":629,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener('window:resize",{"_index":617,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener('window:scroll",{"_index":619,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlisteners",{"_index":604,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["howmanydisplayedel",{"_index":521,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["htmlelement",{"_index":443,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["http://localhost:4200",{"_index":822,"title":{},"body":{"index.html":{}}}],["icon",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["iconname",{"_index":369,"title":{},"body":{"components/IconsComponent.html":{}}}],["icons",{"_index":354,"title":{},"body":{"components/IconsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["icons.ts",{"_index":355,"title":{},"body":{"components/IconsComponent.html":{}}}],["icons/icons.component",{"_index":268,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["icons[iconname",{"_index":375,"title":{},"body":{"components/IconsComponent.html":{}}}],["iconscomponent",{"_index":212,"title":{"components/IconsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["id",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/IdToValuePipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["identifier",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["idtovalue",{"_index":383,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["idtovaluepipe",{"_index":378,"title":{"pipes/IdToValuePipe.html":{}},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["ignore",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":644,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["implemented",{"_index":658,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["include",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":589,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["indicator.component.html",{"_index":593,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.sass",{"_index":592,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":588,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["indicator.component.ts:18",{"_index":611,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:19",{"_index":610,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:20",{"_index":608,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:28",{"_index":623,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:29",{"_index":622,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:31",{"_index":612,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:35",{"_index":613,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:39",{"_index":607,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":615,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:53",{"_index":614,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":621,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:72",{"_index":620,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator/scroll",{"_index":587,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["individual",{"_index":301,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["infinite",{"_index":279,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["inherited",{"_index":248,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["inject",{"_index":317,"title":{},"body":{"pipes/DynamicPipe.html":{},"directives/StickyDirective.html":{}}}],["inject(document",{"_index":704,"title":{},"body":{"directives/StickyDirective.html":{}}}],["inject(platform_id",{"_index":705,"title":{},"body":{"directives/StickyDirective.html":{}}}],["injectable",{"_index":327,"title":{"injectables/DynamicTableService.html":{}},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":329,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["injector",{"_index":313,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injector.create",{"_index":320,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injector.get(requiredpipe",{"_index":325,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injects",{"_index":300,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["innerhtml",{"_index":356,"title":{},"body":{"components/IconsComponent.html":{}}}],["input",{"_index":371,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["inputs",{"_index":235,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["instance",{"_index":316,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{}}}],["instanceof",{"_index":709,"title":{},"body":{"directives/StickyDirective.html":{}}}],["interface",{"_index":289,"title":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{}},"body":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":291,"title":{},"body":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"overview.html":{}}}],["iseditable",{"_index":334,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["isscrollatbottom",{"_index":594,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["isscrollindicatorshown",{"_index":595,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["isspinnervisible",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["ist",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["isvisible",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":388,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.bezeichnung",{"_index":393,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.hasownproperty('bezeichnung",{"_index":392,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.hasownproperty('item",{"_index":394,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.id",{"_index":391,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.item",{"_index":395,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["itemsperpage",{"_index":516,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["json",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["json.parse(this.styles",{"_index":672,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["karma",{"_index":842,"title":{},"body":{"index.html":{}}}],["kat",{"_index":384,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["kat.find((item",{"_index":389,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["keyframes",{"_index":280,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["keyof",{"_index":716,"title":{},"body":{"directives/StickyDirective.html":{}}}],["köln",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["label",{"_index":523,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["lastbutton",{"_index":498,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["left",{"_index":534,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{}}}],["legend",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["letters",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":730,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit=20",{"_index":738,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["linear",{"_index":278,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["list",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":294,"title":{},"body":{"interfaces/Column.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{}}}],["local",{"_index":296,"title":{},"body":{"interfaces/Column.html":{}}}],["makesticky",{"_index":675,"title":{},"body":{"directives/StickyDirective.html":{}}}],["map",{"_index":462,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["map((e",{"_index":473,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["margin",{"_index":562,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["markus",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["martin",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":518,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matching",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil",{"_index":548,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matpag",{"_index":427,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matpaginator",{"_index":425,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["mdc",{"_index":519,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["memberof",{"_index":377,"title":{},"body":{"components/IconsComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["method",{"_index":657,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["minimum",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":793,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilepaginationdirective",{"_index":220,"title":{"directives/MobilePaginationDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["modules",{"_index":860,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":855,"title":{},"body":{"index.html":{}}}],["münchen",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["name(iconname",{"_index":373,"title":{},"body":{"components/IconsComponent.html":{}}}],["nativeel",{"_index":695,"title":{},"body":{"directives/StickyDirective.html":{}}}],["nativeel.style[property.tostring",{"_index":718,"title":{},"body":{"directives/StickyDirective.html":{}}}],["nativeelement",{"_index":514,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["nativeelement.queryselector",{"_index":517,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["navigate",{"_index":821,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":526,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["need",{"_index":848,"title":{},"body":{"index.html":{}}}],["neededbuttons",{"_index":547,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["new",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"coverage.html":{},"index.html":{}}}],["newindex",{"_index":437,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["next",{"_index":529,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{}}}],["nextbuttondefault",{"_index":528,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ng",{"_index":818,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":411,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngif",{"_index":590,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["ngonchanges",{"_index":412,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngonchanges(changes",{"_index":446,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngondestroy",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["ngstyle",{"_index":591,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxdynamictable",{"_index":810,"title":{},"body":{"index.html":{}}}],["ngxdynamictablecomponent",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["none",{"_index":492,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"miscellaneous/variables.html":{}}}],["normalizesize",{"_index":660,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalizesize(this.size",{"_index":668,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["null",{"_index":376,"title":{},"body":{"components/IconsComponent.html":{}}}],["number",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["nxt",{"_index":486,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["nxtmobilepagination",{"_index":401,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["nxtmobilepagination]'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["object",{"_index":664,"title":{},"body":{"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["observable",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/ScrollIndicatorComponent.html":{}}}],["onchanges",{"_index":400,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["onresize",{"_index":598,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["opacity",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["options",{"_index":642,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ort",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":857,"title":{},"body":{"index.html":{}}}],["output",{"_index":459,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["outputs",{"_index":422,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["overflow",{"_index":665,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["overview",{"_index":858,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":778,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":577,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["page",{"_index":520,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{}}}],["pageindexchangeemitter",{"_index":423,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts",{"_index":398,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["pagination.directive.ts:10",{"_index":434,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:11",{"_index":431,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:12",{"_index":432,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:123",{"_index":440,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:13",{"_index":430,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:14",{"_index":428,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:141",{"_index":435,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:15",{"_index":429,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:167",{"_index":450,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:17",{"_index":456,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:175",{"_index":442,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:18",{"_index":457,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:19",{"_index":455,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:194",{"_index":444,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:20",{"_index":426,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:212",{"_index":454,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:24",{"_index":448,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:32",{"_index":445,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:37",{"_index":451,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:50",{"_index":438,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:97",{"_index":452,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination/mobile",{"_index":397,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["paginator",{"_index":513,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["param",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["parameter",{"_index":729,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["parent",{"_index":321,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["parsefloat(size.tostring()).tostring",{"_index":661,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":104,"title":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["pipe.transform(value",{"_index":326,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["pipeargs",{"_index":306,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["pipes",{"_index":298,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":314,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["placeholder",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["platform",{"_index":845,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":700,"title":{},"body":{"directives/StickyDirective.html":{}}}],["platformid",{"_index":682,"title":{},"body":{"directives/StickyDirective.html":{}}}],["position",{"_index":532,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["prefetch",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["previous",{"_index":527,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previousbutton",{"_index":524,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previousindex",{"_index":439,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previouslyactive",{"_index":480,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previouspageindex",{"_index":582,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["private",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["process",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["processed",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":811,"title":{},"body":{"index.html":{}}}],["projects/.../app.config.ts",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../icons.ts",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ngx",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../spinner.ts",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tableaction.enum.ts",{"_index":795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/demo/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["projects/demo/src/app/app.component.ts:31",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:32",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:34",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:35",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:37",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:43",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:49",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:55",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:80",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.config.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":228,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":692,"title":{},"body":{"directives/StickyDirective.html":{}}}],["properties",{"_index":30,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"properties.html":{}}}],["property",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"directives/StickyDirective.html":{}}}],["provide",{"_index":324,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["provideanimations",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":349,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["providerouter(routes",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":323,"title":{},"body":{"pipes/DynamicPipe.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":597,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["qrcode",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["range",{"_index":522,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["readable",{"_index":386,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{}}}],["reference",{"_index":859,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":800,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":825,"title":{},"body":{"index.html":{}}}],["removebuttons",{"_index":413,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderbuttons",{"_index":414,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderbuttonsnumber",{"_index":419,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderelements",{"_index":493,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderer",{"_index":365,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["renderer2",{"_index":366,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["representing",{"_index":641,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["required",{"_index":312,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["requiredpipe",{"_index":305,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["results",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":269,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["returntableaction",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["returntableaction(event",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":251,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["right",{"_index":563,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{}}}],["root'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["rows",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["rowsanimation",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":817,"title":{},"body":{"index.html":{}}}],["running",{"_index":836,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":828,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["scrollablecontent",{"_index":603,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["scrollcontainer",{"_index":678,"title":{},"body":{"directives/StickyDirective.html":{}}}],["scrollcontainer(value",{"_index":702,"title":{},"body":{"directives/StickyDirective.html":{}}}],["scrollindicatorcomponent",{"_index":215,"title":{"components/ScrollIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["scrolltobottom",{"_index":599,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["scrolltotop",{"_index":600,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["search",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondary",{"_index":253,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["secondarycolor",{"_index":238,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["self",{"_index":460,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["sequence",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serve",{"_index":819,"title":{},"body":{"index.html":{}}}],["server",{"_index":816,"title":{},"body":{"index.html":{}}}],["set",{"_index":353,"title":{},"body":{"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["setchange(value",{"_index":624,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["setdata",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["sethtmlelement",{"_index":676,"title":{},"body":{"directives/StickyDirective.html":{}}}],["sethtmlelement(prop",{"_index":690,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setiseditable",{"_index":336,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["setiseditable(iseditable",{"_index":339,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["setname(iconname",{"_index":370,"title":{},"body":{"components/IconsComponent.html":{}}}],["setscrollcontainer(value",{"_index":698,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setstylepropertytoelement",{"_index":677,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setstylepropertytoelement(nativeel",{"_index":693,"title":{},"body":{"directives/StickyDirective.html":{}}}],["settextfilter",{"_index":337,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["settextfilter(textfilter",{"_index":341,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["settimeout",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["settings",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["share",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["showcheckbox",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["showcount",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["showfirstbutton",{"_index":420,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["showlastbutton",{"_index":421,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["showpaginator",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["simplechanges",{"_index":447,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["size",{"_index":239,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["size.tostring",{"_index":662,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["size}px",{"_index":663,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["sliced",{"_index":310,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/TruncatePipe.html":{}}}],["smooth",{"_index":637,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["sort",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortable",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["sortcolumn",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["sortstart",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["speed",{"_index":240,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["spinner'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner.component",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["spinner.component.html",{"_index":234,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.sass",{"_index":233,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":229,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:17",{"_index":265,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.ts:21",{"_index":267,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner/circular",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"coverage.html":{}}}],["spinner/spinner.ts",{"_index":639,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinner/spinner.ts:17",{"_index":647,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:22",{"_index":649,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:27",{"_index":648,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:32",{"_index":650,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:37",{"_index":651,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:42",{"_index":652,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:47",{"_index":653,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:52",{"_index":654,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:58",{"_index":656,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner2",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinnercomponent",{"_index":218,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["spinnercomponent:17",{"_index":249,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:22",{"_index":252,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:27",{"_index":250,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:32",{"_index":255,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:37",{"_index":257,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:42",{"_index":258,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:47",{"_index":259,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:52",{"_index":262,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinners",{"_index":274,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["src/**/*.spec.ts",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["src/**/*.ts",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["src/app/file",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["src/test.ts",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["startat",{"_index":731,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startat=0",{"_index":739,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startdots",{"_index":508,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["started",{"_index":743,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["startingchar",{"_index":736,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startingindex",{"_index":510,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startwith",{"_index":463,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startwith([0",{"_index":476,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["statements",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["sticky",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["stickydirective",{"_index":222,"title":{"directives/StickyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"coverage.html":{}}}],["stickyelement",{"_index":683,"title":{},"body":{"directives/StickyDirective.html":{}}}],["still",{"_index":241,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["stored",{"_index":833,"title":{},"body":{"index.html":{}}}],["string",{"_index":246,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":263,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["strokewidth",{"_index":244,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["style",{"_index":260,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["styledefaultpagination",{"_index":415,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["styles",{"_index":227,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":232,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["subclass",{"_index":659,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["subclasses",{"_index":643,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["subject",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(([prev",{"_index":477,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["svgstyle",{"_index":646,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["switch",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["switchpage",{"_index":416,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["switchpage(i",{"_index":453,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tabelle",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"pipes/IdToValuePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["table'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["table.component",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["table.component.ts",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.service.ts",{"_index":331,"title":{},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["table.service.ts:10",{"_index":348,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:12",{"_index":344,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:13",{"_index":338,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:17",{"_index":342,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:20",{"_index":340,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:9",{"_index":345,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table/src/lib/components/circular",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/components/icons/icons.component.ts",{"_index":352,"title":{},"body":{"components/IconsComponent.html":{},"coverage.html":{}}}],["table/src/lib/components/icons/icons.component.ts:25",{"_index":368,"title":{},"body":{"components/IconsComponent.html":{}}}],["table/src/lib/components/icons/icons.component.ts:27",{"_index":367,"title":{},"body":{"components/IconsComponent.html":{}}}],["table/src/lib/components/icons/icons.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/components/scroll",{"_index":586,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["table/src/lib/directives/mobile",{"_index":396,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts",{"_index":673,"title":{},"body":{"directives/StickyDirective.html":{},"coverage.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:11",{"_index":685,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:14",{"_index":699,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:17",{"_index":696,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:19",{"_index":687,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:20",{"_index":684,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:28",{"_index":689,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:32",{"_index":691,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:45",{"_index":688,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:54",{"_index":694,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/models/column.model.ts",{"_index":292,"title":{},"body":{"interfaces/Column.html":{},"coverage.html":{}}}],["table/src/lib/models/tableaction.enum",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableaction.enum.ts",{"_index":796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table/src/lib/models/tableaction.model",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableaction.model.ts",{"_index":720,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"coverage.html":{}}}],["table/src/lib/models/tableoptions.model",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableoptions.model.ts",{"_index":722,"title":{},"body":{"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["table/src/lib/ngx",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/pipes/dynamic/dynamic.pipe.ts",{"_index":299,"title":{},"body":{"pipes/DynamicPipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/dynamic/dynamic.pipe.ts:22",{"_index":307,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["table/src/lib/pipes/id",{"_index":379,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/truncate/truncate.pipe.ts",{"_index":727,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/truncate/truncate.pipe.ts:17",{"_index":733,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["table/src/lib/services/dynamic",{"_index":330,"title":{},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["tableaction",{"_index":719,"title":{"interfaces/TableAction.html":{}},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["tableaction.enum",{"_index":721,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["tableaction.model",{"_index":724,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["tableactionenum",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"miscellaneous/enumerations.html":{}}}],["tableactionenum.check",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.checkall",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.delete",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.edit",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.refresh",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.show",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionreturn",{"_index":52,"title":{"interfaces/TableActionReturn.html":{}},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"coverage.html":{}}}],["tableoptions",{"_index":38,"title":{"interfaces/Tableoptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":358,"title":{},"body":{"components/IconsComponent.html":{}}}],["tank",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["target",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["test",{"_index":839,"title":{},"body":{"index.html":{}}}],["testing",{"_index":851,"title":{},"body":{"index.html":{}}}],["tests",{"_index":838,"title":{},"body":{"index.html":{}}}],["text",{"_index":558,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["textfilter",{"_index":335,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["thats",{"_index":309,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/TruncatePipe.html":{}}}],["thickness",{"_index":242,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["this._data.asobservable",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this._data.next",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this._iseditable.asobservable",{"_index":346,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._iseditable.next(iseditable",{"_index":351,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._scrollcontainer",{"_index":701,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this._textfilter.asobservable",{"_index":347,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._textfilter.next(textfilter",{"_index":350,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this.appcustomlength",{"_index":549,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.bubblecontainerref",{"_index":541,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buildbuttons",{"_index":471,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref",{"_index":552,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref.foreach((button",{"_index":489,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref.length",{"_index":512,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[0",{"_index":497,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[newindex",{"_index":483,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[previousindex",{"_index":481,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[this.buttonsref.length",{"_index":499,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.changeactivebuttonstyles(prev",{"_index":479,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.checkscrollablecontent",{"_index":628,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.color",{"_index":271,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.createbubbledivref",{"_index":470,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.createbutton(0",{"_index":553,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.createdotselement",{"_index":554,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.destroy$.next(true",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.document.getelementbyid(value",{"_index":708,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.dotsstartref",{"_index":507,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.elementref.nativeelement",{"_index":515,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.elementref.nativeelement.queryselector",{"_index":539,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.hidedefaultarrows",{"_index":535,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.injector",{"_index":322,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["this.isscrollatbottom",{"_index":638,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.isscrollindicatorshown",{"_index":634,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.isvisible",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.makesticky",{"_index":706,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.matpag.page",{"_index":472,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag.pageindex",{"_index":583,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag.pagesize",{"_index":550,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag['_emitpageevent'](previouspageindex",{"_index":584,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.pageindexchangeemitter.emit(i",{"_index":585,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.removebuttons",{"_index":466,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderbuttons",{"_index":468,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderbuttonsnumber",{"_index":494,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(bubblebutton",{"_index":560,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(currentactive",{"_index":488,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(this.bubblecontainerref",{"_index":543,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(bubblebutton",{"_index":565,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(dotsel",{"_index":581,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(this.bubblecontainerref",{"_index":569,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createelement('div",{"_index":542,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createelement('span",{"_index":571,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createtext",{"_index":573,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createtext(string(i",{"_index":559,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.insertbefore",{"_index":546,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.listen(bubblebutton",{"_index":566,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.removechild(this.bubblecontainerref",{"_index":555,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.removeclass(previouslyactive",{"_index":485,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setproperty(this.element.nativeelement,'innerhtml",{"_index":374,"title":{},"body":{"components/IconsComponent.html":{}}}],["this.renderer.setstyle",{"_index":506,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(bubblebutton",{"_index":561,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(button",{"_index":490,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(dotsel",{"_index":574,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(firstbutton",{"_index":509,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(howmanydisplayedel",{"_index":531,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(itemsperpage",{"_index":530,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(lastbutton",{"_index":503,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(nextbuttondefault",{"_index":537,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(previousbutton",{"_index":536,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(this.dotsendref",{"_index":501,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":551,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.scrollablecontent.offsetheight",{"_index":633,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scroll",{"_index":635,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scrollheight",{"_index":631,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scrolltop",{"_index":632,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.setdata",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sethtmlelement('_scrollcontainer",{"_index":703,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.setstylepropertytoelement(nativeelement",{"_index":712,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.showfirstbutton",{"_index":505,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.showlastbutton",{"_index":500,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.speed}s",{"_index":277,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.stickyelement.nativeelement",{"_index":711,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.still",{"_index":272,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.styledefaultpagination",{"_index":469,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.styles",{"_index":671,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.switchpage(0",{"_index":467,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.switchpage(i",{"_index":568,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.thickness",{"_index":270,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.top}px",{"_index":714,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.zindex.tostring",{"_index":715,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this['_scrollcontainer",{"_index":707,"title":{},"body":{"directives/StickyDirective.html":{}}}],["thomas",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["tim",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["timer(1000ms",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["tom",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":578,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["transform",{"_index":303,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":304,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformed",{"_index":311,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{}}}],["transforms",{"_index":382,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["transition('void",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["triangle",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('rowsanimation",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["truncate",{"_index":728,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":726,"title":{"pipes/TruncatePipe.html":{}},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["try",{"_index":484,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tslib",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":670,"title":{},"body":{"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["undefined",{"_index":618,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["unit",{"_index":837,"title":{},"body":{"index.html":{}}}],["use",{"_index":357,"title":{},"body":{"components/IconsComponent.html":{},"index.html":{}}}],["used",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":740,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.nativeelement",{"_index":710,"title":{},"body":{"directives/StickyDirective.html":{}}}],["value.pipe.ts",{"_index":381,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["value.pipe.ts:15",{"_index":385,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["value.subscribe",{"_index":627,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["value.substr(startat",{"_index":741,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value/id",{"_index":380,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["var",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["variable",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":863,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":814,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":841,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":372,"title":{},"body":{"components/IconsComponent.html":{}}}],["viewencapsulation.emulated",{"_index":362,"title":{},"body":{"components/IconsComponent.html":{}}}],["visible",{"_index":666,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["webkit",{"_index":713,"title":{},"body":{"directives/StickyDirective.html":{}}}],["width",{"_index":667,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["window:resize",{"_index":605,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["window:scroll",{"_index":606,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["work",{"_index":645,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["zindex",{"_index":679,"title":{},"body":{"directives/StickyDirective.html":{}}}],["zone.js",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/demo/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                CircularSpinnerComponent\n                            CommonModule\n                            DatePipe\n                                NgxDynamicTableComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.sass\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _data\n                            \n                            \n                                data$\n                            \n                            \n                                destroy$\n                            \n                            \n                                isSpinnerVisible\n                            \n                            \n                                isVisible\n                            \n                            \n                                tableoptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnTableAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/app.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnTableAction\n                        \n                    \n                \n            \n            \n                \nreturnTableAction(event: TableActionReturn)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            TableActionReturn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The target to process\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                The processed target number\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSpinnerVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    The isVisible property belongs to the data of the dynamic-table.\nIt is used to show or hide the table, depended on the data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableoptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tableoptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    actions: [\n      { name: 'delete', icon: 'trash', action: 1 },\n      { name: 'edit', icon: 'edit', action: 2 },\n      { name: 'show', icon: 'eye', action: 4 }\n    ],\n    columns: [\n      { id: '1', name: 'id', header: 'ID', cell: 'id', hidden: true, sortable: true },\n      { id: '2', name: 'name', header: 'Name', cell: 'name', hidden: false, sortable: true },\n      { id: '3', name: 'date', header: 'Datum/Zeit', cell: 'date', pipe: { name: DatePipe, args: 'dd.MM.YYYY HH:mm:ss'}, hidden: false, sortable: true },\n      { id: '4', name: 'ort', header: 'Ort', cell: 'ort', hidden: false, sortable: true },\n    ],\n    columnFilter: ['date', 'ort'],\n    columnNames: ['checkbox', 'count', 'name', 'date', 'ort', 'actions'],\n    showCheckbox: true,\n    showCount: true,\n    showPaginator: true,\n    sortColumn: 'date',\n    sortStart: 'asc'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NgxDynamicTableComponent } from '../../../ngx-dynamic-table/src/lib/ngx-dynamic-table.component';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Tableoptions } from '../../../ngx-dynamic-table/src/lib/models/tableoptions.model';\nimport { TableActionReturn } from '../../../ngx-dynamic-table/src/lib/models/tableaction.model';\nimport { TableActionEnum } from '../../../ngx-dynamic-table/src/lib/models/tableaction.enum';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { CircularSpinnerComponent } from '../../../ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CircularSpinnerComponent,\n    CommonModule,\n    DatePipe,\n    NgxDynamicTableComponent,\n    RouterOutlet\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.sass'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * The isVisible property belongs to the data of the dynamic-table.\n   * It is used to show or hide the table, depended on the data.\n   * \n   * @type {boolean}\n   */\n  isVisible: boolean = false\n  isSpinnerVisible: boolean = true;\n\n  private readonly _data = new BehaviorSubject([])\n  data$: Observable = this._data.asObservable()\n\n  destroy$: Subject = new Subject()\n\n  constructor() {\n    this.setData()\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.isVisible = true\n    },2000)\n  }\n\n  ngOnDestroy(): void {\n    console.log('destroy')\n    this.destroy$.next(true)\n    this.destroy$.unsubscribe()\n  }\n\n  tableoptions: Tableoptions = {\n    actions: [\n      { name: 'delete', icon: 'trash', action: 1 },\n      { name: 'edit', icon: 'edit', action: 2 },\n      { name: 'show', icon: 'eye', action: 4 }\n    ],\n    columns: [\n      { id: '1', name: 'id', header: 'ID', cell: 'id', hidden: true, sortable: true },\n      { id: '2', name: 'name', header: 'Name', cell: 'name', hidden: false, sortable: true },\n      { id: '3', name: 'date', header: 'Datum/Zeit', cell: 'date', pipe: { name: DatePipe, args: 'dd.MM.YYYY HH:mm:ss'}, hidden: false, sortable: true },\n      { id: '4', name: 'ort', header: 'Ort', cell: 'ort', hidden: false, sortable: true },\n    ],\n    columnFilter: ['date', 'ort'],\n    columnNames: ['checkbox', 'count', 'name', 'date', 'ort', 'actions'],\n    showCheckbox: true,\n    showCount: true,\n    showPaginator: true,\n    sortColumn: 'date',\n    sortStart: 'asc'\n  }\n\n  /**\n * @param {TableActionReturn} event  The target to process\n * @returns The processed target number\n */\n  returnTableAction(event: TableActionReturn) {\n    switch (event.action) {\n      case TableActionEnum.DELETE:\n        console.log('delete row')\n        break\n      case TableActionEnum.EDIT:\n        console.log('edit row')\n        break\n      case TableActionEnum.SHOW:\n        console.log('show row')\n        break\n      case TableActionEnum.REFRESH:\n        console.log('refresh table')\n        this.setData()\n        break\n      case TableActionEnum.CHECK:\n        console.log('check row', event.row)\n        break\n      case TableActionEnum.CHECKALL:\n        console.log('check all rows')\n        break\n      default:\n        console.log('default action')\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  setData() {\n    this._data.next([\n      { id: '1', name: 'Tim', date: '01.01.2024 00:00:59', ort: 'Berlin', checked: false },\n      { id: '2', name: 'Tom', date: '01.01.2023 00:00:59', ort: 'Hamburg', checked: true },\n      { id: '3', name: 'Thomas', date: '01.02.2023 00:00:59', ort: 'Dresden', checked: true },\n      { id: '4', name: 'Martin', date: '03.02.2023 00:00:59', ort: 'München', checked: false },\n      { id: '5', name: 'Markus', date: '04.02.2023 00:00:59', ort: 'Köln', checked: false }\n    ])\n  }\n}\n\n    \n\n    \n        \n  \n      \n        \n          Tabelle\n          Dies ist die Beschreibung zu dieser Tabelle.\n        \n        \n          \n            \n          \n        \n      \n\n      \n          @defer (when isVisible; prefetch on timer(1000ms)) {\n            \n              \n            \n          }\n          @placeholder (minimum 100ms) {\n            \n              \n            \n          }\n          @loading (after 100ms; minimum 150ms) {\n            Loading\n          }\n          @error {\n            Error\n          }\n          \n            {{ (data$ | async) | json }}\n           -->\n          \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Tabelle          Dies ist die Beschreibung zu dieser Tabelle.                                                                              @defer (when isVisible; prefetch on timer(1000ms)) {                                                }          @placeholder (minimum 100ms) {                                                }          @loading (after 100ms; minimum 150ms) {            Loading          }          @error {            Error          }                      {{ (data$ | async) | json }}           -->                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircularSpinnerComponent.html":{"url":"components/CircularSpinnerComponent.html","title":"component - CircularSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CircularSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    SpinnerComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                circular-spinner\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                IconsComponent\n                \n            \n\n            \n                styleUrls\n                ./circular-spinner.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./circular-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                enabled\n                            \n                            \n                                secondaryColor\n                            \n                            \n                                size\n                            \n                            \n                                speed\n                            \n                            \n                                still\n                            \n                            \n                                styles\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    strokeWidth\n                                \n                                \n                                    dashStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#037bfc'\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:17\n\n                            \n                        \n                \n                    \n                        Default color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:27\n\n                            \n                        \n                \n                    \n                        Default enabled of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(0,0,0,0.05)'\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:22\n\n                            \n                        \n                \n                    \n                        Default secondary color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:32\n\n                            \n                        \n                \n                    \n                        Default size of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:37\n\n                            \n                        \n                \n                    \n                        Default speed of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        still\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:42\n\n                            \n                        \n                \n                    \n                        Default still of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:47\n\n                            \n                        \n                \n                    \n                        Default style of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:52\n\n                            \n                        \n                \n                    \n                        Default stroke thickness of the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        strokeWidth\n                    \n                \n\n                \n                    \n                        getstrokeWidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dashStyle\n                    \n                \n\n                \n                    \n                        getdashStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { SpinnerComponent } from './spinner'\nimport { CommonModule } from '@angular/common'\nimport { IconsComponent } from '../icons/icons.component'\n\n@Component({\n  selector: 'circular-spinner',\n  standalone: true,\n  imports: [\n    CommonModule,\n    IconsComponent\n  ],\n  templateUrl: './circular-spinner.component.html',\n  styleUrls: ['./circular-spinner.component.sass']\n})\nexport class CircularSpinnerComponent extends SpinnerComponent {\n  get strokeWidth() {\n    return 4 * (this.thickness / 100)\n  }\n\n  get dashStyle() {\n    return { color: this.color, ...(!this.still ? { animation: `spinners-angular-circular ${140 / this.speed}s linear infinite` } : {})}\n  }\n}\n\n    \n\n    \n        \n  \n  \n -->\n\n\n\n  \n  Loading...\n\n    \n\n    \n                \n                    ./circular-spinner.component.sass\n                \n                @keyframes spinners-angular-circular \n  0%  \n    stroke-dashoffset: 306 \n  50%  \n    stroke-dasharray: 40, 134 \n  100% \n    stroke-dasharray: 1, 174\n    stroke-dashoffset: 132\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     -->    Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'CircularSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Column.html":{"url":"interfaces/Column.html","title":"interface - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/column.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cell\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipe\n                                        \n                                \n                                \n                                        \n                                            sortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cell\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipe:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"checkbox\" | \"datetime-local\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"checkbox\" | \"datetime-local\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Column {\n    id: string,\n    name: string,\n    header: string,\n    cell: string,\n    hidden: boolean,\n    sortable: boolean,\n    disabled?: boolean,\n    pipe?: { name: any, args: string }\n    type?: 'checkbox' | 'datetime-local'\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DynamicPipe.html":{"url":"pipes/DynamicPipe.html","title":"pipe - DynamicPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DynamicPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This pipe injects a individual pipe with optional arguments!\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        dynamicPipe\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, requiredPipe: Type, pipeArgs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts:22\n                        \n                    \n\n\n            \n                \n                        This function returns a value, thats sliced.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvalue that should be transformed\n\n\n                                            \n                                        \n                                        \n                                                requiredPipe\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRequired pipe\n\n\n                                            \n                                        \n                                        \n                                                pipeArgs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nArguments for the pipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core'\n\n/**\n * This pipe injects a individual pipe with optional arguments!\n */\n@Pipe({\n  name: 'dynamicPipe',\n  standalone: true\n})\nexport class DynamicPipe implements PipeTransform {\n  /**\n   * Creates an instance of DynamicPipe.\n   * @param {Injector} injector - The injector to inject a individual pipe.\n   */\n  constructor(private injector: Injector) {}\n  /**\n   * This function returns a value, thats sliced.\n   * @param {any}       value         - value that should be transformed\n   * @param {Type} requiredPipe  - Required pipe\n   * @param {any}       pipeArgs      - Arguments for the pipe.\n   */\n  transform(value: any, requiredPipe: Type, pipeArgs: any): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [\n        { provide: requiredPipe }\n      ]\n    })\n    const pipe = injector.get(requiredPipe)\n    return pipe.transform(value, pipeArgs)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicTableService.html":{"url":"injectables/DynamicTableService.html","title":"injectable - DynamicTableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DynamicTableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isEditable\n                            \n                            \n                                    Private\n                                    Readonly\n                                _textFilter\n                            \n                            \n                                isEditable$\n                            \n                            \n                                textFilter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsEditable\n                            \n                            \n                                setTextFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setIsEditable\n                        \n                    \n                \n            \n            \n                \nsetIsEditable(isEditable: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isEditable\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextFilter\n                        \n                    \n                \n            \n            \n                \nsetTextFilter(textFilter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                textFilter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _textFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isEditable.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._textFilter.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicTableService {\n\n  private readonly _textFilter = new BehaviorSubject('')\n  textFilter$: Observable = this._textFilter.asObservable()\n\n  private _isEditable = new BehaviorSubject(false)\n  isEditable$: Observable = this._isEditable.asObservable()\n\n  constructor() {}\n\n  setTextFilter(textFilter: string) {\n    this._textFilter.next(textFilter)\n  }\n  setIsEditable(isEditable: boolean) {\n    this._isEditable.next(isEditable)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconsComponent.html":{"url":"components/IconsComponent.html","title":"component - IconsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component set the icons from the icons.ts file to the innerHTML of the element. In use of tailwindcss the classes will style the icons.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.Emulated\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                icons\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of IconsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:25\n                            \n                        \n                \n                    \n                        The iconname to get from icons.ts to set to the innerHTML.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n\n                \n                    \n                        setname(iconName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:25\n                                \n                            \n                    \n                        \n                                The iconname to get from icons.ts to set to the innerHTML.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            iconName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { icons } from './icons';\n\n/**\n * This component set the icons from the icons.ts file to the innerHTML of the element. In use of tailwindcss the classes will style the icons.\n * \n * @example\n * \n*/\n@Component({\n  selector: 'icons',\n  standalone: true,\n  imports: [],\n  template: `\n    \n  `,\n  styles: ``,\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class IconsComponent {\n    /**\n   * The iconname to get from icons.ts to set to the innerHTML.\n   * @type {string}\n   */\n  @Input() set name(iconName: string) {\n    this.renderer.setProperty(this.element.nativeElement,'innerHTML', icons[iconName] || null)\n  }\n  \n  /**\n   * Creates an instance of IconsComponent.\n   * @param {ElementRef} element\n   * @param {Renderer2} renderer\n   * @memberof IconsComponent\n   */\n  constructor(private element: ElementRef, private renderer: Renderer2) {}\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IdToValuePipe.html":{"url":"pipes/IdToValuePipe.html","title":"pipe - IdToValuePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IdToValuePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This pipe transforms an id to a value.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        idToValue\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, kat: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts:15\n                        \n                    \n\n\n            \n                \n                        This function returns a readable value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvalue that should be transformed\n\n\n                                            \n                                        \n                                        \n                                                kat\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ntable with id and value\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * This pipe transforms an id to a value.\n */\n@Pipe({\n  name: 'idToValue'\n})\nexport class IdToValuePipe implements PipeTransform {\n  /**\n   * This function returns a readable value.\n   * @param {string}  value - value that should be transformed\n   * @param {any[]}   kat   - table with id and value\n   */\n  transform(value: string, kat: any[]): string {\n    console.log('kat: ', kat)\n    let item = kat.find((item: { id: string, bezeichnung: string }) => item.id === value)\n    if (item.hasOwnProperty('bezeichnung')) return item.bezeichnung\n    if (item.hasOwnProperty('item')) return item.item\n    return value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MobilePaginationDirective.html":{"url":"directives/MobilePaginationDirective.html","title":"directive - MobilePaginationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  MobilePaginationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [nxtMobilePagination]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bubbleContainerRef\n                            \n                            \n                                    Private\n                                buttonsRef\n                            \n                            \n                                    Private\n                                dotsEndRef\n                            \n                            \n                                    Private\n                                dotsStartRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildButtons\n                            \n                            \n                                    Private\n                                changeActiveButtonStyles\n                            \n                            \n                                    Private\n                                createBubbleDivRef\n                            \n                            \n                                    Private\n                                createButton\n                            \n                            \n                                    Private\n                                createDotsElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                removeButtons\n                            \n                            \n                                    Private\n                                renderButtons\n                            \n                            \n                                    Private\n                                styleDefaultPagination\n                            \n                            \n                                    Private\n                                switchPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appCustomLength\n                            \n                            \n                                hideDefaultArrows\n                            \n                            \n                                renderButtonsNumber\n                            \n                            \n                                showFirstButton\n                            \n                            \n                                showLastButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageIndexChangeEmitter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matPag: MatPaginator, elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matPag\n                                                  \n                                                        \n                                                                    MatPaginator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appCustomLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDefaultArrows\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderButtonsNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFirstButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLastButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:12\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageIndexChangeEmitter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeActiveButtonStyles\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeActiveButtonStyles(previousIndex: number, newIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                previousIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBubbleDivRef\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBubbleDivRef()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createButton\n                        \n                    \n                \n            \n            \n                \n                        \n                    createButton(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDotsElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDotsElement()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:194\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    renderButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        styleDefaultPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    styleDefaultPagination()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        switchPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    switchPage(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bubbleContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buttonsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dotsEndRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dotsStartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, EventEmitter, Host, Input, OnChanges, Optional, Output, Renderer2, Self, SimpleChanges } from '@angular/core'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { map, startWith } from 'rxjs'\n\n@Directive({\n  selector: '[nxtMobilePagination]',\n  standalone: true\n})\nexport class MobilePaginationDirective implements AfterViewInit, OnChanges {\n  @Output() pageIndexChangeEmitter: EventEmitter = new EventEmitter()\n  @Input() showFirstButton = true\n  @Input() showLastButton = true\n  @Input() renderButtonsNumber = 2\n  @Input() appCustomLength: number = 0\n  @Input() hideDefaultArrows = false\n\n  private dotsEndRef!: HTMLElement\n  private dotsStartRef!: HTMLElement\n  private bubbleContainerRef!: HTMLElement\n  private buttonsRef: HTMLElement[] = []\n\n  constructor(@Host() @Self() @Optional() private readonly matPag: MatPaginator, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes?.['appCustomLength']?.firstChange) {\n      this.removeButtons()\n      this.switchPage(0)\n      this.renderButtons()\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.styleDefaultPagination()\n    this.createBubbleDivRef()\n  }\n\n  private renderButtons(): void {\n    this.buildButtons()\n\n    this.matPag.page\n      .pipe(\n        map((e) => [e.previousPageIndex ?? 0, e.pageIndex]),\n        startWith([0, 0])\n      )\n      .subscribe(([prev, curr]) => {\n        this.changeActiveButtonStyles(prev, curr)\n      })\n  }\n\n  private changeActiveButtonStyles(previousIndex: number, newIndex: number) {\n    const previouslyActive = this.buttonsRef[previousIndex]\n    const currentActive = this.buttonsRef[newIndex]\n\n    try {\n      this.renderer.removeClass(previouslyActive, 'nxt-bubble__active')\n      this.renderer.addClass(currentActive, 'nxt-bubble__active')\n      this.buttonsRef.forEach((button) =>\n        this.renderer.setStyle(button, 'display', 'none')\n      )\n      const renderElements = this.renderButtonsNumber\n      const endDots = newIndex  0\n  \n      const firstButton = this.buttonsRef[0]\n      const lastButton = this.buttonsRef[this.buttonsRef.length - 1]\n  \n      if (this.showLastButton) {\n        this.renderer.setStyle(this.dotsEndRef, 'display', endDots ? 'block' : 'none')\n        this.renderer.setStyle(lastButton, 'display', endDots ? 'flex' : 'none')\n      }\n  \n      if (this.showFirstButton) {\n        this.renderer.setStyle(\n          this.dotsStartRef,\n          'display',\n          startDots ? 'block' : 'none'\n        )\n        this.renderer.setStyle(firstButton, 'display', startDots ? 'flex' : 'none')\n      }\n  \n      const startingIndex = startDots ? newIndex - renderElements : 0\n  \n      const endingIndex = endDots\n        ? newIndex + renderElements\n        : this.buttonsRef.length - 1\n\n      for (let i = startingIndex; i  Paginator disabled')\n    }\n    \n  }\n\n  private styleDefaultPagination() {\n    const nativeElement = this.elementRef.nativeElement\n    const itemsPerPage = nativeElement.querySelector(\n      '.mat-mdc-paginator-page-size'\n    )\n    const howManyDisplayedEl = nativeElement.querySelector(\n      '.mat-mdc-paginator-range-label'\n    )\n    const previousButton = nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-previous'\n    )\n    const nextButtonDefault = nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-next'\n    )\n\n    this.renderer.setStyle(itemsPerPage, 'display', 'none')\n\n    this.renderer.setStyle(howManyDisplayedEl, 'position', 'absolute')\n    this.renderer.setStyle(howManyDisplayedEl, 'left', '0')\n\n    if (this.hideDefaultArrows) {\n      this.renderer.setStyle(previousButton, 'display', 'none')\n      this.renderer.setStyle(nextButtonDefault, 'display', 'none')\n    }\n  }\n\n  private createBubbleDivRef(): void {\n    const actionContainer = this.elementRef.nativeElement.querySelector(\n      'div.mat-mdc-paginator-range-actions'\n    )\n    const nextButtonDefault = this.elementRef.nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-next'\n    )\n\n    this.bubbleContainerRef = this.renderer.createElement('div') as HTMLElement\n    this.renderer.addClass(this.bubbleContainerRef, 'nxt-bubble-container')\n\n    this.renderer.insertBefore(\n      actionContainer,\n      this.bubbleContainerRef,\n      nextButtonDefault\n    )\n  }\n\n  private buildButtons(): void {\n    const neededButtons = Math.ceil(\n      this.appCustomLength / this.matPag.pageSize\n    )\n\n    if (neededButtons === 1) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none')\n      return\n    }\n\n    this.buttonsRef = [this.createButton(0)]\n\n    this.dotsStartRef = this.createDotsElement()\n\n    for (let index = 1; index  {\n      this.renderer.removeChild(this.bubbleContainerRef, button)\n    })\n\n    this.buttonsRef.length = 0\n  }\n\n  private createButton(i: number): HTMLElement {\n    const bubbleButton = this.renderer.createElement('div')\n    const text = this.renderer.createText(String(i + 1))\n\n    this.renderer.addClass(bubbleButton, 'nxt-bubble')\n    this.renderer.setStyle(bubbleButton, 'margin-right', '8px')\n    this.renderer.appendChild(bubbleButton, text)\n\n    this.renderer.listen(bubbleButton, 'click', () => {\n      this.switchPage(i)\n    })\n\n    this.renderer.appendChild(this.bubbleContainerRef, bubbleButton)\n\n    this.renderer.setStyle(bubbleButton, 'display', 'none')\n\n    return bubbleButton\n  }\n\n  private createDotsElement(): HTMLElement {\n    const dotsEl = this.renderer.createElement('span')\n    const dotsText = this.renderer.createText('.....')\n\n    this.renderer.setStyle(dotsEl, 'font-size', '18px')\n    this.renderer.setStyle(dotsEl, 'margin-right', '8px')\n    this.renderer.setStyle(dotsEl, 'padding-top', '6px')\n    this.renderer.setStyle(dotsEl, 'color', '#919191')\n\n    this.renderer.appendChild(dotsEl, dotsText)\n\n    this.renderer.appendChild(this.bubbleContainerRef, dotsEl)\n\n    this.renderer.setStyle(dotsEl, 'display', 'none')\n\n    return dotsEl\n  }\n\n  private switchPage(i: number): void {\n    const previousPageIndex = this.matPag.pageIndex\n    this.matPag.pageIndex = i\n    this.matPag['_emitPageEvent'](previousPageIndex)\n\n    this.pageIndexChangeEmitter.emit(i)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScrollIndicatorComponent.html":{"url":"components/ScrollIndicatorComponent.html","title":"component - ScrollIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScrollIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scroll-indicator\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgStyle\n                                IconsComponent\n                \n            \n\n            \n                styleUrls\n                ./scroll-indicator.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./scroll-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScrollAtBottom\n                            \n                            \n                                isScrollIndicatorShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkScrollableContent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                    Public\n                                onResize\n                            \n                            \n                                    \n                                scroll\n                            \n                            \n                                    Public\n                                scrollToBottom\n                            \n                            \n                                    Public\n                                scrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                distance\n                            \n                            \n                                scrollableContent\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    change\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollableContent\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkScrollableContent\n                        \n                    \n                \n            \n            \n                \ncheckScrollableContent()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', undefined)\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    scroll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', undefined)\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scrollToTop\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToTop()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScrollAtBottom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScrollIndicatorShown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n\n\n                \n                    \n                        setchange(value: Observable)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        Observable\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { NgIf, NgStyle } from '@angular/common';\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IconsComponent } from '../icons/icons.component';\n\n@Component({\n  selector: 'scroll-indicator',\n  standalone: true,\n  imports: [\n    NgIf,\n    NgStyle,\n    IconsComponent\n  ],\n  templateUrl: './scroll-indicator.component.html',\n  styleUrls: ['./scroll-indicator.component.sass']\n})\nexport class ScrollIndicatorComponent implements OnInit {\n  @Input() scrollableContent: any\n  @Input() distance: number = 16\n  @Input() set change(value: Observable) {\n    value.subscribe({\n      next: () => {\n        this.checkScrollableContent()\n      }\n    })\n  }\n\n  isScrollIndicatorShown: boolean = false\n  isScrollAtBottom: boolean = false\n\n  @HostListener(\"window:resize\", []) public onResize() {\n    this.checkScrollableContent()\n  }\n\n  @HostListener('window:scroll', []) scroll() {\n    console.log('update')\n    if ((this.scrollableContent.scrollHeight - (this.scrollableContent.scrollTop + this.scrollableContent.offsetHeight))  {\n      if (this.scrollableContent.scrollHeight > this.scrollableContent.offsetHeight) {\n        this.isScrollIndicatorShown = true\n      } else {\n        this.isScrollIndicatorShown = false\n      }\n    }, 100)\n  }\n\n  checkScrollableContent() {\n    setTimeout(() => {\n      if (this.scrollableContent.scrollHeight > this.scrollableContent.offsetHeight) {\n        this.isScrollIndicatorShown = true\n      } else {\n        this.isScrollIndicatorShown = false\n      }\n    }, 100)\n  }\n\n  public scrollToTop(): void {\n    this.scrollableContent.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    })\n    this.isScrollAtBottom = false\n  }\n\n  public scrollToBottom(): void {\n    this.scrollableContent.scroll({\n      top: this.scrollableContent.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    })\n    this.isScrollAtBottom = true\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./scroll-indicator.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScrollIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n\n\n\n    \n        Description\n    \n    \n        This is an abstract class representing the spinner options.\nSubclasses should implement methods to work with.\n\n    \n\n\n\n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                enabled\n                            \n                            \n                                secondaryColor\n                            \n                            \n                                size\n                            \n                            \n                                speed\n                            \n                            \n                                still\n                            \n                            \n                                styles\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    svgStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#037bfc'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:17\n                            \n                        \n                \n                    \n                        Default color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:27\n                            \n                        \n                \n                    \n                        Default enabled of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(0,0,0,0.05)'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:22\n                            \n                        \n                \n                    \n                        Default secondary color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:32\n                            \n                        \n                \n                    \n                        Default size of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:37\n                            \n                        \n                \n                    \n                        Default speed of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        still\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:42\n                            \n                        \n                \n                    \n                        Default still of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:47\n                            \n                        \n                \n                    \n                        Default style of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:52\n                            \n                        \n                \n                    \n                        Default stroke thickness of the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n\n                \n                    \n                        getsvgStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:58\n                                \n                            \n                    \n                        \n                                This method should be implemented by the subclass.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core'\n\nexport const normalizeSize = (size: number | string) => (parseFloat(size.toString()).toString() === size.toString() ? `${size}px` : size.toString())\n\n/**\n * This is an abstract class representing the spinner options.\n * Subclasses should implement methods to work with.\n */\n@Component({\n    template: ''\n})\nexport abstract class SpinnerComponent {\n    /**\n     * Default color of the spinner.\n     * @type {string}\n     */\n    @Input() color = '#037bfc'\n    /**\n     * Default secondary color of the spinner.\n     * @type {string}\n     */\n    @Input() secondaryColor = 'rgba(0,0,0,0.05)'\n    /**\n     * Default enabled of the spinner.\n     * @type {string}\n     */\n    @Input() enabled = true\n    /**\n     * Default size of the spinner.\n     * @type {string}\n     */\n    @Input() size: number | string = 50\n    /**\n     * Default speed of the spinner.\n     * @type {string}\n     */\n    @Input() speed = 100\n    /**\n     * Default still of the spinner.\n     * @type {string}\n     */\n    @Input() still = false\n    /**\n     * Default style of the spinner.\n     * @type {string}\n     */\n    @Input() styles = {}\n    /**\n     * Default stroke thickness of the spinner.\n     * @type {string}\n     */\n    @Input() thickness = 160\n\n    /**\n     * This method should be implemented by the subclass.\n     * @returns {Object}\n     */\n    get svgStyle() {\n        return {\n            color: this.color,\n            overflow: 'visible',\n            width: normalizeSize(this.size),\n            height: normalizeSize(this.size),\n            ...(typeof this.styles === 'string' ? JSON.parse(this.styles) : this.styles)\n        }\n    }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StickyDirective.html":{"url":"directives/StickyDirective.html","title":"directive - StickyDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  StickyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sticky]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _scrollContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                makeSticky\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHTMLElement\n                            \n                            \n                                    Private\n                                setStylePropertyToElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollContainer\n                            \n                            \n                                top\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scrollContainer\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, platformId: object, stickyElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stickyElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollContainer\n                    \n                \n                \n                    \n                        Type :     string | ElementRef | HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        makeSticky\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeSticky()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setHTMLElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHTMLElement(prop: string, value: string | ElementRef | HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prop\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | ElementRef | HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setStylePropertyToElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStylePropertyToElement(nativeEl: HTMLElement, property, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nativeEl\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                property\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _scrollContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        scrollContainer\n                    \n                \n\n                \n                    \n                        getscrollContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:11\n                                \n                            \n\n                \n                    \n                        setscrollContainer(value: string | ElementRef | HTMLElement)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string | ElementRef | HTMLElement\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, Input, Inject, PLATFORM_ID } from '@angular/core'\nimport { DOCUMENT } from '@angular/common'\n\n@Directive({\n  selector: '[sticky]',\n  standalone: true\n})\nexport class StickyDirective implements OnInit {\n\n  @Input()\n  get scrollContainer(): string | ElementRef | HTMLElement {\n    return this._scrollContainer\n  }\n  set scrollContainer(value: string | ElementRef | HTMLElement) {\n    this.setHTMLElement('_scrollContainer', value)\n  }\n  private _scrollContainer!: HTMLElement\n\n  @Input() zIndex = 10\n  @Input() top = 0\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(PLATFORM_ID) private platformId: object,\n    private stickyElement: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.makeSticky()\n  }\n\n  private setHTMLElement(\n    prop: string,\n    value: string | ElementRef | HTMLElement\n  ): void {\n    if (typeof value === 'string') {\n      this['_scrollContainer'] = this.document.getElementById(value)!\n    } else if (value instanceof ElementRef) {\n      this['_scrollContainer'] = value.nativeElement!\n    } else {\n      this['_scrollContainer'] = value\n    }\n  }\n\n  private makeSticky() {\n    const nativeElement: HTMLElement = this.stickyElement.nativeElement\n\n    this.setStylePropertyToElement(nativeElement, 'position', '-webkit-sticky')\n    this.setStylePropertyToElement(nativeElement, 'position', 'sticky')\n    this.setStylePropertyToElement(nativeElement, 'top', `${this.top}px`)\n    this.setStylePropertyToElement(nativeElement, 'zIndex', this.zIndex.toString())\n  }\n\n  private setStylePropertyToElement(\n    nativeEl: HTMLElement,\n    property: keyof CSSStyleDeclaration,\n    value: string\n  ) {\n    nativeEl.style[property.toString() as any] = value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableAction.html":{"url":"interfaces/TableAction.html","title":"interface - TableAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         TableActionEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableActionEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableActionEnum } from \"./tableaction.enum\";\n\nexport interface TableAction {\n    name: string,\n    icon: string,\n    action: TableActionEnum\n}\n\nexport interface TableActionReturn {\n    action: TableActionEnum,\n    id?: string\n    row?: any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableActionReturn.html":{"url":"interfaces/TableActionReturn.html","title":"interface - TableActionReturn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableActionReturn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         TableActionEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableActionEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableActionEnum } from \"./tableaction.enum\";\n\nexport interface TableAction {\n    name: string,\n    icon: string,\n    action: TableActionEnum\n}\n\nexport interface TableActionReturn {\n    action: TableActionEnum,\n    id?: string\n    row?: any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tableoptions.html":{"url":"interfaces/Tableoptions.html","title":"interface - Tableoptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tableoptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableoptions.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            columnFilter\n                                        \n                                \n                                \n                                        \n                                            columnNames\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showPaginator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortColumn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortStart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         TableAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableAction[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnFilter:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         Column[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Column[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCount:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortColumn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortStart:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableAction } from \"./tableaction.model\"\nimport { Column } from \"./column.model\"\n\nexport interface Tableoptions {\n    actions?: TableAction[]\n    columns: Column[]\n    columnFilter: string[]\n    columnNames: string[]\n    showCheckbox?: boolean\n    showCount?: boolean\n    showPaginator?: boolean\n    sortColumn?: string\n    sortStart?: 'asc' | 'desc'\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This pipe truncate the value parameter and returns it!\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, limit: number, startAt: number, ellipsis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        This function returns a value, thats sliced.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nvalue to truncate\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    \nCharlimit\n\n\n                                            \n                                        \n                                        \n                                                startAt\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    \nStartingchar\n\n\n                                            \n                                        \n                                        \n                                                ellipsis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '...'\n                                            \n\n                                            \n                                                    \nendingsigns\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * This pipe truncate the value parameter and returns it!\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * This function returns a value, thats sliced.\n   * @param {any}     value - value to truncate\n   * @param {number}  [limit=20] - Charlimit\n   * @param {number}  [startAt=0] - Startingchar\n   * @param {string}  [ellipsis='...'] - endingsigns\n   */\n  transform(value: any, limit: number = 20, startAt: number = 0, ellipsis: string = '...'): any {\n    if (value.length > 10) {\n      return value.substr(startAt, limit) + ellipsis\n    }\n    return value\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nDocumentation\nExample :{\n    \"include\": [\"src/**/*.ts\"],\n    \"exclude\": [\"src/test.ts\", \"src/**/*.spec.ts\", \"src/app/file-to-exclude.ts\"]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/demo/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts\n            \n            component\n            CircularSpinnerComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n            \n            variable\n            normalizeSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts\n            \n            component\n            IconsComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/icons/icons.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts\n            \n            component\n            ScrollIndicatorComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts\n            \n            directive\n            MobilePaginationDirective\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts\n            \n            directive\n            StickyDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/column.model.ts\n            \n            interface\n            Column\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n            \n            interface\n            TableAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n            \n            interface\n            TableActionReturn\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableoptions.model.ts\n            \n            interface\n            Tableoptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n            \n            component\n            NgxDynamicTableComponent\n            \n                23 %\n                (6/26)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n            \n            variable\n            rowsAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts\n            \n            pipe\n            DynamicPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts\n            \n            pipe\n            IdToValuePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts\n            \n            injectable\n            DynamicTableService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/cdk : ^17.2.0\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/material : 17.2.0\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableActionEnum   (projects/.../tableaction.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-dynamic-table/src/lib/models/tableaction.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TableActionEnum\n                    \n                \n                    \n                        \n                            This enumeration defines all options that will return from table.\n\n                        \n                    \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 SHOW\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 CHECK\n                            \n                        \n                        \n                            \n                                 CHECKALL\n                            \n                        \n                        \n                            \n                                Value : 128\n                            \n                        \n                        \n                            \n                                 QRCODE\n                            \n                        \n                        \n                            \n                                Value : 16\n                            \n                        \n                        \n                            \n                                 TANK\n                            \n                        \n                        \n                            \n                                Value : 32\n                            \n                        \n                        \n                            \n                                 CHECKLIST\n                            \n                        \n                        \n                            \n                                Value : 64\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngxDynamicTable\nThis project was generated with Angular CLI version 17.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (projects/.../app.config.ts)\n                        \n                        \n                            icons   (projects/.../icons.ts)\n                        \n                        \n                            normalizeSize   (projects/.../spinner.ts)\n                        \n                        \n                            rowsAnimation   (projects/.../ngx-dynamic-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/demo/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideRouter(routes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/components/icons/icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    'add'                   : ``,\n    'alert-triangle'        : ``,\n    'edit'                  : ``,\n    'check'                 : ``,\n    'dot'                   : ``,\n    'dots'                  : ``,\n    'dots-horizontal'       : ``,\n    'dots-vertical'         : ``,\n    'eye'                   : ``,\n    'eye-off'               : ``,\n    'filter'                : ``,\n    'list'                  : ``,\n    'list-check'            : ``,\n    'list-details'          : ``,\n    'pdf'                   : ``,\n    'pencil'                : ``,\n    'qrcode'                : ``,\n    'refresh'               : ``,\n    'search'                : ``,\n    'settings'              : ``,\n    'share'                 : ``,\n    'sort-ascending'        : ``,\n    'sort-descending'       : ``,\n    'sort-ascending-letters': ``,\n    'sort-descending-letters': ``,\n    'spinner'               : ``,\n    // 'spinner2'              : ``,\n    'table'                 : ``,\n    'trash'                 : ``, \n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (size: number | string) => (parseFloat(size.toString()).toString() === size.toString() ? `${size}px` : size.toString())\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rowsAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('rowsAnimation', [\n  transition('void => *', [\n    style({ height: '*', opacity: '0', transform: 'translateX(-550px)', 'box-shadow': 'none' }),\n    sequence([\n      animate(\".35s ease\", style({ height: '*', opacity: '.2', transform: 'translateX(0)', 'box-shadow': 'none'  })),\n      animate(\".35s ease\", style({ height: '*', opacity: 1, transform: 'translateX(0)' }))\n    ])\n  ])\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
