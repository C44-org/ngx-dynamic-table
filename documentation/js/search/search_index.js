var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.726,1,1.261]],["body/components/AppComponent.html",[0,0.696,1,1.4,2,1.064,3,0.23,4,0.2,5,0.729,6,0.729,7,0.729,8,0.2,9,1.109,10,0.852,11,1.975,12,2.827,13,0.466,14,1.952,15,1.521,16,1.819,17,0.951,18,2.055,19,1.355,20,1.4,21,2.314,22,3.612,23,1.566,24,2.827,25,1.553,26,2.223,27,2.223,28,2.223,29,0.23,30,0.614,31,1.521,32,1.975,33,2.827,34,4.432,35,2.827,36,2.827,37,4.1,38,2.366,39,0.765,40,3.271,41,2.286,42,2.223,43,1.353,44,1.259,45,2.223,46,1.355,47,1.009,48,0.043,49,1.729,50,1.355,51,2.223,52,1.944,53,1.355,54,0.466,55,0.949,56,0.52,57,0.334,58,0.649,59,2.223,60,3.271,61,2.223,62,2.223,63,0.852,64,1.41,65,0.956,66,1.76,67,2.314,68,1.355,69,1.975,70,2.223,71,1.355,72,3.612,73,1.385,74,1.355,75,2.515,76,1.355,77,1.819,78,2.223,79,0.391,80,1.944,81,2.223,82,2.286,83,1.819,84,2.223,85,2.286,86,1.819,87,2.712,88,1.819,89,2.865,90,1.729,91,2.286,92,1.944,93,1.819,94,2.201,95,1.819,96,2.804,97,3.503,98,3.503,99,2.991,100,3.503,101,2.314,102,5,103,2.223,104,0.685,105,1.819,106,2.223,107,2.223,108,5,109,1.819,110,1.819,111,1.819,112,2.223,113,1.819,114,1.819,115,1.819,116,1.819,117,1.819,118,1.819,119,1.355,120,0.858,121,0.334,122,1.109,123,3.612,124,0.947,125,1.355,126,0.729,127,1.355,128,1.355,129,0.826,130,1.355,131,0.729,132,0.729,133,0.947,134,1.355,135,0.23,136,0.374,137,2.223,138,1.109,139,1.355,140,1.355,141,1.355,142,1.355,143,1.355,144,0.729,145,1.109,146,1.355,147,3.881,148,1.355,149,1.355,150,2.286,151,3.881,152,1.355,153,1.355,154,1.355,155,1.355,156,1.355,157,1.355,158,1.355,159,2.223,160,1.355,161,1.355,162,1.355,163,1.355,164,1.355,165,1.355,166,1.355,167,1.355,168,1.355,169,3.612,170,1.355,171,3.612,172,1.355,173,1.355,174,1.355,175,1.355,176,1.355,177,1.355,178,1.355,179,1.355,180,1.355,181,1.355,182,1.355,183,1.355,184,1.355,185,3.271,186,2.223,187,2.223,188,2.223,189,2.223,190,2.223,191,2.223,192,2.223,193,2.223,194,2.223,195,2.223,196,3.271,197,3.271,198,2.677,199,2.223,200,3.271,201,2.223,202,2.223,203,0.729,204,1.064,205,1.064,206,0.418,207,1.76,208,0.729,209,0.729,210,0.729,211,0.729,212,0.58,213,0.729,214,0.729,215,0.58,216,0.729,217,0.729,218,0.58,219,0.519,220,0.519,221,0.729,222,0.519,223,0.649,224,0.729,225,0.016,226,0.016]],["title/components/CircularSpinnerComponent.html",[0,0.726,20,1.261]],["body/components/CircularSpinnerComponent.html",[0,0.973,1,0.98,2,1.601,3,0.389,4,0.338,5,1.233,6,1.233,7,1.233,8,0.338,13,0.788,14,2.263,15,1.233,17,1.431,18,1.514,19,2.038,20,1.858,21,3.232,23,1.097,25,2.337,29,0.389,44,1.46,48,0.043,55,0.671,56,0.647,63,1.514,64,1.924,65,1.257,73,1.282,75,1.233,79,0.383,90,1.097,94,1.396,120,0.841,121,0.564,131,1.233,132,2.125,133,2.76,135,0.389,136,0.632,198,2.737,203,1.233,204,1.601,205,1.601,206,0.706,207,2.337,208,1.233,209,1.233,210,2.847,211,1.233,212,1.858,213,1.233,214,1.233,215,0.98,216,1.233,217,1.233,218,2.32,219,0.878,220,0.878,221,1.233,222,0.878,223,1.097,224,1.233,225,0.024,226,0.024,227,2.125,228,0.501,229,1.875,230,3.344,231,3.746,232,2.737,233,3.949,234,3.344,235,1.601,236,3.227,237,3.232,238,2.737,239,2.407,240,3.232,241,3.232,242,3.232,243,1.8,244,3.949,245,3.949,246,0.973,247,1.875,248,5.104,249,2.291,250,2.291,251,1.875,252,2.291,253,1.875,254,2.737,255,2.291,256,2.407,257,2.291,258,2.291,259,2.291,260,1.233,261,1.875,262,2.291,263,3.779,264,2.291,265,2.291,266,2.291,267,2.291,268,1.875,269,1.282,270,2.291,271,1.875,272,2.291,273,2.291,274,3.344,275,2.737,276,2.291,277,2.291,278,2.291,279,2.291,280,2.291,281,0.98,282,3.344,283,2.291,284,3.344,285,2.291,286,2.291,287,2.291,288,2.291]],["title/interfaces/Column.html",[289,1.014,290,1.796]],["body/interfaces/Column.html",[3,0.584,4,0.508,8,0.508,29,0.584,30,1.22,48,0.043,55,0.906,56,0.745,57,1.345,73,2.179,79,0.304,96,2.775,97,4.221,98,4.221,99,3.604,100,4.221,104,1.59,105,2.813,111,3.998,135,0.584,225,0.032,226,0.032,228,0.436,246,1.436,289,1.182,290,2.694,291,1.85,292,2.813,293,4.221,294,3.617,295,4.885,296,4.885]],["title/pipes/DynamicPipe.html",[104,0.909,297,2.06]],["body/pipes/DynamicPipe.html",[3,0.54,4,0.47,8,0.47,10,1.219,13,1.094,17,1.798,18,1.611,39,1.094,44,0.878,47,1.451,48,0.043,54,1.094,55,0.85,56,0.678,57,1.159,58,2.012,65,1.317,79,0.371,104,1.769,120,0.616,121,0.783,135,0.54,136,0.878,144,2.694,225,0.03,226,0.03,228,0.533,269,1.219,297,3.736,298,1.938,299,2.603,300,4.201,301,4.705,302,5.005,303,1.938,304,2.936,305,5.204,306,5.204,307,3.18,308,2.936,309,3.438,310,3.438,311,3.438,312,4.201,313,5.452,314,2.936,315,2.603,316,2.603,317,2.603,318,2.603,319,2.561,320,3.18,321,3.18,322,3.18,323,2.603,324,3.18,325,3.18,326,3.18]],["title/injectables/DynamicTableService.html",[327,1.796,328,2.06]],["body/injectables/DynamicTableService.html",[3,0.525,4,0.456,8,0.456,16,2.529,29,0.525,30,1.138,31,2.854,32,3.242,39,1.418,43,2.221,44,1.494,47,1.271,48,0.043,49,1.974,54,1.418,55,0.7,56,0.627,57,1.016,64,1.702,65,1.219,66,2.663,67,3.796,69,3.603,73,1.779,79,0.486,120,0.798,121,0.761,126,1.663,135,0.525,136,0.853,225,0.03,226,0.03,228,0.697,246,1.143,327,2.512,328,2.881,329,3.09,330,4.501,331,2.529,332,4.639,333,4.639,334,4.949,335,4.949,336,4.122,337,4.122,338,4.122,339,4.122,340,3.09,341,4.122,342,3.09,343,4.122,344,3.09,345,3.09,346,4.122,347,4.122,348,3.09,349,3.09,350,3.09,351,3.09]],["title/components/IconsComponent.html",[0,0.726,212,1.261]],["body/components/IconsComponent.html",[0,1.208,1,1.145,2,1.788,3,0.454,4,0.395,5,2.01,6,1.439,7,1.439,8,0.636,13,0.92,14,2.341,15,1.439,17,1.598,18,1.432,19,1.63,20,1.145,23,1.281,29,0.454,31,1.439,43,1.281,44,1.188,47,0.825,48,0.043,49,1.281,54,1.285,55,0.918,56,0.591,57,0.92,58,1.281,79,0.433,120,0.723,121,0.659,135,0.454,136,0.738,144,2.01,203,1.439,204,1.788,205,2.495,206,0.825,207,2.507,208,1.439,209,1.439,210,1.439,211,1.439,212,2.23,213,1.439,214,1.439,215,1.145,216,1.439,217,1.439,218,1.145,219,1.026,220,1.026,221,1.439,222,1.026,223,1.281,224,1.439,225,0.027,226,0.027,227,2.316,228,0.591,235,1.788,243,2.01,246,1.208,260,2.01,315,3.057,316,3.057,318,2.189,352,2.189,353,3.095,354,3.715,355,4.901,356,4.901,357,3.057,358,3.735,359,3.735,360,3.057,361,3.735,362,3.735,363,2.675,364,3.425,365,3.813,366,4.011,367,2.675,368,3.735,369,4.659,370,2.675,371,2.01,372,2.675,373,2.675,374,2.675,375,2.675,376,2.675,377,2.675]],["title/pipes/IdToValuePipe.html",[104,0.909,378,2.06]],["body/pipes/IdToValuePipe.html",[3,0.577,4,0.502,8,0.502,10,1.303,13,1.169,39,1.169,44,0.938,47,1.498,48,0.043,54,1.169,55,0.826,56,0.431,57,0.837,58,2.101,65,1.427,79,0.388,80,2.361,96,2.861,104,1.583,120,0.658,121,0.837,135,0.577,136,0.938,144,2.361,225,0.032,226,0.032,228,0.556,246,1.383,269,1.863,298,2.071,303,2.071,304,3.066,308,3.066,311,3.591,314,3.066,378,3.066,379,3.591,380,3.591,381,2.781,382,4.388,383,4.388,384,5.316,385,3.399,386,4.388,387,3.399,388,3.399,389,3.399,390,3.399,391,3.399,392,3.399,393,3.399,394,3.399,395,3.399]],["title/directives/MobilePaginationDirective.html",[206,0.909,220,1.13]],["body/directives/MobilePaginationDirective.html",[3,0.193,4,0.168,8,0.168,10,0.737,13,0.391,14,0.823,17,0.823,18,1.364,29,0.499,30,0.531,31,3.006,32,0.796,39,0.661,43,0.545,44,1.422,47,1.36,48,0.043,49,2.287,54,1.128,55,0.557,56,0.606,57,0.933,63,1.832,64,1.426,65,0.877,66,1.344,73,0.957,75,1.035,79,0.458,82,1.344,83,0.932,85,0.796,90,1.57,92,1.035,99,0.796,104,0.351,120,0.483,121,0.28,126,0.613,135,0.193,136,0.689,145,0.932,204,0.545,205,1.195,206,0.593,219,0.436,220,0.737,225,0.014,226,0.014,227,0.613,228,0.658,235,0.921,236,1.344,239,1.522,260,1.579,269,0.957,281,1.774,293,0.932,319,3.114,353,1.172,364,2.647,365,2.043,366,2.402,371,1.915,396,4.246,397,4.246,398,0.932,399,2.497,400,2.497,401,1.923,402,2.497,403,2.497,404,2.497,405,2.497,406,2.934,407,1.923,408,2.934,409,1.923,410,2.934,411,2.934,412,1.923,413,2.497,414,2.934,415,2.934,416,1.923,417,2.497,418,2.497,419,2.497,420,2.497,421,2.497,422,1.923,423,2.497,424,1.138,425,2.934,426,1.923,427,1.923,428,1.138,429,1.138,430,1.138,431,1.138,432,1.138,433,2.934,434,1.138,435,1.138,436,1.923,437,3.558,438,1.138,439,1.138,440,1.138,441,1.923,442,1.138,443,3.777,444,1.138,445,1.138,446,1.923,447,2.934,448,1.138,449,1.138,450,1.138,451,1.138,452,1.138,453,1.923,454,1.138,455,1.138,456,1.138,457,1.138,458,1.138,459,1.923,460,1.923,461,1.138,462,1.138,463,1.138,464,1.138,465,1.138,466,2.497,467,4.146,468,1.923,469,1.138,470,1.138,471,1.138,472,1.138,473,2.402,474,1.138,475,1.138,476,1.138,477,1.138,478,0.932,479,2.934,480,1.138,481,1.138,482,1.344,483,3.279,484,1.138,485,1.138,486,1.138,487,1.138,488,1.138,489,1.138,490,1.138,491,1.138,492,1.138,493,1.138,494,1.138,495,1.138,496,1.138,497,1.138,498,2.934,499,1.923,500,2.051,501,1.923,502,1.138,503,1.138,504,1.138,505,4.519,506,3.698,507,1.138,508,1.923,509,1.138,510,2.402,511,2.497,512,1.138,513,2.934,514,1.138,515,1.138,516,1.138,517,1.138,518,1.923,519,2.934,520,2.402,521,1.138,522,1.138,523,1.923,524,1.138,525,1.923,526,2.043,527,1.138,528,1.138,529,1.923,530,2.497,531,1.138,532,1.138,533,1.923,534,1.138,535,1.923,536,1.138,537,1.923,538,3.788,539,0.932,540,1.138,541,1.138,542,2.934,543,1.923,544,3.558,545,1.138,546,1.923,547,1.138,548,1.138,549,2.497,550,2.934,551,2.497,552,1.138,553,1.138,554,1.138,555,3.279,556,1.138,557,1.138,558,1.138,559,1.923,560,2.934,561,0.932,562,1.138,563,1.574,564,1.923,565,1.923,566,1.138,567,0.694,568,1.138,569,1.138,570,2.497,571,1.138,572,1.138,573,1.138,574,1.138,575,1.923,576,1.923,577,1.138,578,2.043,579,1.138,580,1.138,581,1.923,582,1.923,583,1.138,584,1.138,585,2.934,586,1.138,587,1.923,588,1.138,589,1.138,590,1.138,591,1.923,592,1.138,593,1.138,594,1.138,595,1.138,596,1.138,597,1.138,598,1.138,599,1.138,600,1.138,601,1.138,602,2.497,603,1.138,604,1.138,605,1.923,606,1.923,607,1.923,608,1.138,609,1.138,610,1.923,611,1.138,612,1.138,613,1.923,614,2.497,615,1.138,616,1.923,617,1.138,618,3.279,619,1.138,620,1.138,621,0.796,622,1.138,623,1.138,624,1.138,625,1.138,626,1.923,627,1.138,628,1.138]],["title/components/ScrollIndicatorComponent.html",[0,0.726,215,1.261]],["body/components/ScrollIndicatorComponent.html",[0,0.882,1,0.831,2,1.416,3,0.33,4,0.287,5,1.045,6,1.045,7,1.045,8,0.287,10,1.134,11,2.502,13,0.668,14,2.173,15,1.045,17,1.265,18,1.651,19,1.802,20,0.831,23,0.93,25,2.066,29,0.33,30,0.816,39,1.017,41,2.502,43,1.416,44,1.491,47,1.454,48,0.043,49,2.384,54,0.668,55,0.68,56,0.575,57,0.479,63,1.134,64,1.231,65,0.986,69,3.009,73,1.534,75,2.538,79,0.484,120,0.775,121,0.479,126,1.045,131,1.045,135,0.33,136,0.536,138,1.59,203,1.045,204,1.416,205,1.416,206,0.599,207,2.154,208,1.045,209,1.045,210,1.045,211,1.045,212,1.712,213,1.045,214,1.045,215,1.712,216,2.818,217,1.045,218,0.831,219,0.745,220,0.745,221,1.045,222,0.745,223,0.93,224,1.045,225,0.021,226,0.021,227,1.045,228,0.69,232,2.42,235,1.416,243,1.591,256,1.802,268,1.59,281,1.532,353,1.184,371,2.154,482,2.797,510,1.59,563,2.42,621,2.066,629,4.457,630,4.457,631,1.59,632,2.957,633,3.58,634,3.58,635,3.58,636,2.957,637,3.58,638,3.58,639,4.002,640,4.98,641,4.002,642,4.002,643,4.002,644,3.58,645,3.58,646,2.957,647,3.58,648,3.58,649,1.942,650,2.957,651,2.42,652,1.942,653,1.942,654,2.957,655,2.957,656,1.942,657,1.942,658,2.957,659,1.942,660,2.957,661,2.957,662,1.942,663,1.942,664,1.942,665,1.942,666,1.942,667,1.942,668,1.942,669,1.942,670,2.957,671,1.942,672,1.942,673,4.002,674,1.942,675,3.58,676,4.002,677,2.957,678,2.957,679,2.957,680,2.957]],["title/components/SpinnerComponent.html",[0,0.726,218,1.261]],["body/components/SpinnerComponent.html",[0,0.916,1,0.884,2,1.483,3,0.351,4,0.305,5,1.111,6,1.111,7,1.111,8,0.305,14,2.12,15,1.111,18,1.188,20,0.884,23,0.989,29,0.351,39,1.065,44,1.398,47,0.637,48,0.044,55,0.631,56,0.698,58,0.989,63,1.696,64,1.965,65,1.22,73,1.188,75,1.667,79,0.463,120,0.4,121,0.509,132,2.777,135,0.526,136,1.026,203,1.111,204,1.483,205,1.483,206,0.637,207,2.222,208,1.111,209,1.111,210,1.111,211,1.111,212,0.884,213,1.111,214,1.111,215,0.884,216,1.111,217,1.111,218,1.767,219,0.792,220,0.792,221,1.111,222,0.792,223,0.989,224,1.111,225,0.022,226,0.022,227,2,228,0.654,231,3.893,235,1.483,236,3.461,237,3.62,238,3.041,239,2.83,240,3.62,241,3.62,242,3.62,243,1.667,246,1.335,247,2.535,251,2.535,253,2.535,254,2.535,256,1.888,260,1.667,261,2.535,263,2.535,269,0.792,271,1.69,319,1.259,371,2.726,681,1.443,682,3.716,683,3.097,684,2.535,685,3.097,686,3.097,687,3.097,688,3.716,689,2.065,690,2.065,691,2.065,692,2.065,693,2.065,694,2.065,695,2.065,696,2.065,697,2.065,698,2.065,699,3.097,700,3.097,701,3.097,702,1.443,703,1.69,704,2.535,705,1.69,706,1.69,707,2.065,708,2.065,709,2.065,710,3.097,711,1.69,712,1.69,713,3.097,714,2.065]],["title/directives/StickyDirective.html",[206,0.909,222,1.13]],["body/directives/StickyDirective.html",[3,0.378,4,0.328,8,0.328,10,1.255,11,2.713,13,0.765,14,1.4,17,1.4,18,1.255,29,0.378,30,0.903,31,2.977,39,1.125,41,2.992,43,1.567,44,1.47,47,1.407,48,0.043,49,2.362,54,1.472,55,0.727,56,0.642,57,1.055,63,1.255,64,1.125,65,1.353,77,3.177,79,0.476,120,0.634,121,0.548,131,1.197,135,0.378,136,0.614,206,1.009,219,0.853,222,1.255,223,2.05,225,0.023,226,0.023,228,0.683,235,1.567,243,1.761,246,1.363,269,0.853,281,1.4,317,1.82,319,1.356,353,1.356,364,3.804,371,2.304,443,4.493,539,1.82,561,2.678,621,2.992,706,3.177,712,1.82,715,1.82,716,3.882,717,4.281,718,3.882,719,3.882,720,4.563,721,4.281,722,2.224,723,4.772,724,3.882,725,3.882,726,3.272,727,3.272,728,2.678,729,2.224,730,2.224,731,2.224,732,2.224,733,2.224,734,3.272,735,2.224,736,2.224,737,3.272,738,2.224,739,2.224,740,2.224,741,2.224,742,2.224,743,2.224,744,2.224,745,2.224,746,2.224,747,2.224,748,2.224,749,3.882,750,2.224,751,2.224,752,2.224,753,2.224,754,4.281,755,2.224,756,2.224,757,2.224,758,2.224,759,2.224,760,2.224]],["title/interfaces/TableAction.html",[289,1.014,761,1.586]],["body/interfaces/TableAction.html",[3,0.675,4,0.587,8,0.587,29,0.675,30,1.335,48,0.042,52,2.137,55,0.923,56,0.662,79,0.351,87,3.795,89,3.891,96,2.137,120,0.769,129,3.393,135,0.822,150,2.775,225,0.035,226,0.035,228,0.503,246,1.412,289,1.664,291,2.137,761,2.604,762,2.775,763,3.25]],["title/interfaces/TableActionReturn.html",[52,1.586,289,1.014]],["body/interfaces/TableActionReturn.html",[3,0.671,4,0.583,8,0.583,29,0.671,30,1.331,48,0.042,52,2.596,55,0.671,56,0.66,57,1.336,79,0.349,87,2.761,89,3.885,96,2.918,120,0.765,129,3.389,135,0.819,150,3.789,225,0.035,226,0.035,228,0.501,246,1.37,289,1.659,291,2.126,761,2.126,762,2.761,763,3.233]],["title/interfaces/Tableoptions.html",[38,1.796,289,1.014]],["body/interfaces/Tableoptions.html",[3,0.575,4,0.5,8,0.5,29,0.575,30,1.208,38,2.667,48,0.043,56,0.718,57,1.426,73,2.173,79,0.299,85,3.583,95,4.196,109,4.196,110,4.196,113,4.196,114,4.196,115,4.196,116,4.196,117,4.196,118,3.969,120,0.847,135,0.575,225,0.031,226,0.031,228,0.429,246,1.396,289,1.164,290,3.125,291,1.821,761,2.759,764,2.769,765,4.849,766,3.384,767,3.384]],["title/pipes/TruncatePipe.html",[104,0.909,768,2.06]],["body/pipes/TruncatePipe.html",[3,0.556,4,0.484,8,0.484,10,1.256,13,1.126,39,1.126,44,0.904,47,1.62,48,0.043,54,1.126,55,0.811,56,0.415,57,0.807,58,2.051,63,2.136,64,1.126,65,1.4,79,0.378,104,1.561,120,0.634,121,0.807,135,0.556,136,0.904,144,2.725,225,0.031,226,0.031,228,0.543,246,1.247,269,1.643,281,1.833,298,1.996,303,1.996,304,2.993,308,2.993,309,3.506,310,3.506,314,2.993,728,2.68,768,2.993,769,2.68,770,5.39,771,4.284,772,5.063,773,4.774,774,5.254,775,3.275,776,4.284,777,4.284,778,4.284,779,4.284,780,3.275,781,3.275,782,3.275,783,3.275]],["title/changelog.html",[784,2.026,785,2.026,786,2.026]],["body/changelog.html",[48,0.041,225,0.037,226,0.037,360,3.69,786,3.69,787,3.69,788,4.509,789,4.509,790,4.509,791,4.509,792,4.509,793,4.509,794,4.509]],["title/coverage.html",[795,3.268]],["body/coverage.html",[0,1.298,1,1.291,8,0.446,9,2.469,20,1.291,23,1.445,38,1.839,48,0.042,52,1.624,56,0.382,66,1.624,79,0.519,80,1.624,104,1.413,124,2.835,132,2.467,133,2.108,206,1.251,212,1.291,215,1.291,218,1.291,220,1.157,222,1.157,225,0.029,226,0.029,228,0.741,229,2.469,256,3.117,281,2.435,289,1.686,290,1.839,292,2.469,297,2.108,299,2.469,327,1.839,328,2.108,330,2.469,331,2.469,352,2.469,354,2.108,378,2.108,379,2.469,380,2.469,381,2.469,396,2.469,397,2.469,398,2.469,629,2.469,630,2.469,631,2.469,681,2.835,702,2.108,715,2.469,761,1.624,762,2.835,764,2.469,768,2.108,769,2.469,787,2.469,795,2.469,796,3.017,797,3.017,798,3.017,799,3.017,800,2.469,801,4.901,802,2.469,803,4.901,804,3.017,805,3.017,806,3.017,807,3.017,808,2.469,809,3.017,810,3.017,811,4.583,812,4.057,813,3.32,814,3.017,815,3.017,816,2.469,817,4.583,818,3.017,819,3.017]],["title/dependencies.html",[820,1.73,821,2.895]],["body/dependencies.html",[48,0.043,79,0.365,121,1.018,122,3.382,126,2.224,131,2.224,225,0.036,226,0.036,821,3.382,822,4.132,823,4.825,824,4.132,825,4.132,826,4.132,827,4.132,828,4.956,829,4.956,830,4.132,831,4.132,832,4.132,833,4.132,834,4.132]],["title/miscellaneous/enumerations.html",[835,1.509,836,2.895]],["body/miscellaneous/enumerations.html",[29,0.693,48,0.042,65,1.432,79,0.36,80,2.194,82,2.849,86,3.337,90,1.952,91,2.849,92,2.194,94,2.485,129,2.996,225,0.035,226,0.035,228,0.517,269,1.563,567,2.485,578,3.337,651,3.337,684,3.337,835,2.485,836,3.337,837,4.077,838,4.077,839,4.077,840,4.077,841,3.337,842,4.077,843,4.077,844,4.077,845,3.337,846,4.077,847,4.077,848,4.077,849,4.077]],["title/index.html",[29,0.421,784,2.026,785,2.026]],["body/index.html",[0,1.224,4,0.526,10,1.367,48,0.032,55,0.606,66,1.918,225,0.032,226,0.032,275,4.067,357,4.067,473,2.917,478,4.278,482,2.491,500,2.491,526,2.917,567,2.173,820,2.491,823,2.917,850,3.565,851,4.524,852,3.565,853,4.97,854,2.917,855,3.565,856,4.524,857,5.395,858,5.6,859,3.565,860,3.565,861,3.565,862,3.565,863,3.565,864,3.565,865,3.565,866,3.565,867,3.565,868,3.565,869,4.97,870,3.565,871,3.565,872,3.565,873,3.565,874,3.565,875,4.524,876,4.524,877,5.227,878,3.565,879,4.524,880,4.524,881,3.565,882,5.513,883,3.565,884,3.565,885,3.565,886,4.524,887,3.565,888,3.565,889,3.565,890,3.565,891,4.97,892,3.565,893,3.565,894,3.565,895,2.491,896,3.565]],["title/modules.html",[897,3.268]],["body/modules.html",[48,0.038,225,0.038,226,0.038,897,3.814]],["title/overview.html",[895,2.791]],["body/overview.html",[2,2.165,48,0.038,90,2.165,92,2.434,94,2.756,101,3.701,219,1.734,225,0.038,226,0.038,291,2.434,298,2.756,327,2.756,895,3.16,898,4.522]],["title/properties.html",[30,0.976,820,1.73]],["body/properties.html",[30,1.275,48,0.04,225,0.038,226,0.038,854,3.779,899,4.618]],["title/miscellaneous/variables.html",[835,1.509,900,2.895]],["body/miscellaneous/variables.html",[29,0.482,48,0.044,56,0.563,63,1.088,64,1.644,65,1.177,79,0.442,80,1.527,88,2.323,90,1.359,91,1.983,92,1.527,93,3.185,124,1.983,132,1.527,225,0.028,226,0.028,228,0.563,231,1.983,239,1.73,246,0.699,260,2.39,281,1.215,294,2.323,303,2.707,323,2.323,354,2.72,500,1.983,506,3.185,520,3.635,567,2.372,681,1.983,702,2.72,703,2.323,704,3.185,705,2.323,711,3.635,800,2.323,802,3.185,808,2.323,813,3.185,816,3.185,835,1.73,841,2.323,845,2.323,900,2.323,901,2.838,902,2.838,903,2.838,904,2.838,905,2.838,906,2.838,907,2.838,908,2.838,909,2.838,910,2.838,911,2.838,912,2.838,913,2.838,914,4.441,915,2.838,916,2.838,917,2.838,918,2.838,919,2.838,920,2.838,921,4.779,922,3.892,923,3.892,924,3.892,925,2.838,926,2.838,927,2.838,928,4.441,929,2.838,930,2.838,931,3.892,932,3.892,933,2.838,934,3.892,935,3.892,936,3.892]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":899,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["00:00:59",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["01.01.2023",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["01.01.2024",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["01.02.2023",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["03.02.2023",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["037bfc",{"_index":247,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["04.02.2023",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":728,"title":{},"body":{"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["100",{"_index":256,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["100ms",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["128",{"_index":844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["132",{"_index":288,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["134",{"_index":286,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["140",{"_index":276,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["14px",{"_index":566,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["150ms",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":651,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["160",{"_index":261,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["17.2.0",{"_index":823,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["174",{"_index":287,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["18px",{"_index":619,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["2",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":776,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["2000",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["3/3",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["306",{"_index":283,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["32",{"_index":847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["40",{"_index":285,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["5",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["50",{"_index":254,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["550px",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":898,"title":{},"body":{"overview.html":{}}}],["6/26",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6px",{"_index":622,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["7.8.0",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8/9",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":607,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["9",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["919191",{"_index":564,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["_data",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["_iseditable",{"_index":332,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["_scrollcontainer",{"_index":716,"title":{},"body":{"directives/StickyDirective.html":{}}}],["_textfilter",{"_index":333,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["absolute",{"_index":562,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["abstract",{"_index":682,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["action",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["actioncontainer",{"_index":575,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["actions",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"interfaces/Tableoptions.html":{}}}],["active",{"_index":501,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["actual_component",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["add",{"_index":500,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":399,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["alert",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":275,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["angular/material/paginator",{"_index":461,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["angular/platform",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["animate(\".35s",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":273,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["app.component.html",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcustomlength",{"_index":417,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["append",{"_index":623,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["application",{"_index":863,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["arguments",{"_index":302,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["array",{"_index":601,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["arrow",{"_index":571,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["artifacts",{"_index":871,"title":{},"body":{"index.html":{}}}],["asc",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["ascending",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["automatically",{"_index":864,"title":{},"body":{"index.html":{}}}],["back",{"_index":472,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["before",{"_index":468,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["behavior",{"_index":678,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["behaviorsubject",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{}}}],["behaviorsubject(false",{"_index":343,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["belongs",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["berlin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["beschreibung",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["bezeichnung",{"_index":390,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["block",{"_index":523,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["boolean",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/Tableoptions.html":{}}}],["box",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["browser",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["bubble",{"_index":519,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubble__active",{"_index":499,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubblebutton",{"_index":602,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubblecontainerref",{"_index":402,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubbles",{"_index":579,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["build",{"_index":478,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{}}}],["buildbuttons",{"_index":406,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["button",{"_index":483,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["button.mat",{"_index":549,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["buttons",{"_index":467,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["buttonsref",{"_index":403,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["capabilities",{"_index":889,"title":{},"body":{"index.html":{}}}],["case",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["cell",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["change",{"_index":482,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"index.html":{}}}],["change(value",{"_index":668,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["changeactivebuttonstyles",{"_index":407,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changeactivebuttonstyles(previousindex",{"_index":436,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changelog",{"_index":786,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":449,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changes?.['appcustomlength']?.firstchange",{"_index":465,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["charlimit",{"_index":777,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["check",{"_index":567,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkall",{"_index":843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["checkbox",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["checked",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["checklist",{"_index":848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["checkscrollablecontent",{"_index":639,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["choice",{"_index":885,"title":{},"body":{"index.html":{}}}],["circular",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["circularspinnercomponent",{"_index":20,"title":{"components/CircularSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["class",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["classes",{"_index":359,"title":{},"body":{"components/IconsComponent.html":{}}}],["cli",{"_index":853,"title":{},"body":{"index.html":{}}}],["click",{"_index":610,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["code",{"_index":867,"title":{},"body":{"index.html":{}}}],["color",{"_index":236,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{}}}],["column",{"_index":290,"title":{"interfaces/Column.html":{}},"body":{"interfaces/Column.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["column.model",{"_index":767,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["columnfilter",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["columnnames",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["columns",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["command",{"_index":886,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["console.log('check",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('default",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('delete",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('destroy",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('edit",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('kat",{"_index":387,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["console.log('refresh",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('show",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('update",{"_index":672,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["const",{"_index":319,"title":{},"body":{"pipes/DynamicPipe.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["constructor(@host",{"_index":464,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["constructor(document",{"_index":722,"title":{},"body":{"directives/StickyDirective.html":{}}}],["constructor(element",{"_index":363,"title":{},"body":{"components/IconsComponent.html":{}}}],["constructor(matpag",{"_index":424,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["constructor(private",{"_index":318,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{}}}],["container",{"_index":584,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["count",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":795,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":578,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{}}}],["createbubbledivref",{"_index":408,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createbutton",{"_index":409,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createbutton(i",{"_index":441,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createdotselement",{"_index":410,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["creates",{"_index":315,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{}}}],["creating",{"_index":469,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["cssstyledeclaration",{"_index":759,"title":{},"body":{"directives/StickyDirective.html":{}}}],["curr",{"_index":491,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["currentactive",{"_index":494,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["currently",{"_index":558,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dasharray",{"_index":284,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["dashoffset",{"_index":282,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["dashstyle",{"_index":245,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["data",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["datepipe",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["datetime",{"_index":295,"title":{},"body":{"interfaces/Column.html":{}}}],["datum/zeit",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["dd.mm.yyyy",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["decorators",{"_index":658,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["defines",{"_index":840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["depended",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":821,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desc",{"_index":765,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["descending",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"components/SpinnerComponent.html":{},"pipes/TruncatePipe.html":{}}}],["destroy",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["details",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":860,"title":{},"body":{"index.html":{}}}],["development",{"_index":855,"title":{},"body":{"index.html":{}}}],["die",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["dies",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["dieser",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":206,"title":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"coverage.html":{}}}],["directives",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":870,"title":{},"body":{"index.html":{}}}],["directory",{"_index":874,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":293,"title":{},"body":{"interfaces/Column.html":{},"directives/MobilePaginationDirective.html":{}}}],["display",{"_index":505,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["displayed",{"_index":559,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dist",{"_index":873,"title":{},"body":{"index.html":{}}}],["distance",{"_index":644,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["div.mat",{"_index":577,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["document",{"_index":723,"title":{},"body":{"directives/StickyDirective.html":{}}}],["documentation",{"_index":787,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["dot",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dots",{"_index":520,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"miscellaneous/variables.html":{}}}],["dotsel",{"_index":614,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotsendref",{"_index":404,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotsstartref",{"_index":405,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotstext",{"_index":616,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dresden",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dynamicpipe",{"_index":297,"title":{"pipes/DynamicPipe.html":{}},"body":{"pipes/DynamicPipe.html":{},"coverage.html":{}}}],["dynamictableservice",{"_index":328,"title":{"injectables/DynamicTableService.html":{}},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["e.pageindex",{"_index":487,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["e.previouspageindex",{"_index":486,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["e2e",{"_index":883,"title":{},"body":{"index.html":{}}}],["ease",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["elementref",{"_index":364,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["elements",{"_index":557,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ellipsis",{"_index":774,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["empty",{"_index":599,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["enabled",{"_index":237,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["encapsulation",{"_index":361,"title":{},"body":{"components/IconsComponent.html":{}}}],["end",{"_index":882,"title":{},"body":{"index.html":{}}}],["enddots",{"_index":513,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ending",{"_index":534,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endingindex",{"_index":536,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endingsigns",{"_index":779,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enumeration",{"_index":839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":836,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["event.action",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["event.row",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitter",{"_index":433,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["example",{"_index":360,"title":{},"body":{"components/IconsComponent.html":{},"changelog.html":{}}}],["except",{"_index":597,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["exclude",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["exclude.ts",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["execute",{"_index":879,"title":{},"body":{"index.html":{}}}],["export",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["extends",{"_index":230,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["eye",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["files",{"_index":866,"title":{},"body":{"index.html":{}}}],["filter",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":526,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{}}}],["firstbutton",{"_index":514,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["flex",{"_index":525,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["font",{"_index":565,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["function",{"_index":308,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["further",{"_index":890,"title":{},"body":{"index.html":{}}}],["generate",{"_index":869,"title":{},"body":{"index.html":{}}}],["generated",{"_index":852,"title":{},"body":{"index.html":{}}}],["getdashstyle",{"_index":266,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["getscrollcontainer",{"_index":739,"title":{},"body":{"directives/StickyDirective.html":{}}}],["getstrokewidth",{"_index":264,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["getsvgstyle",{"_index":697,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["getting",{"_index":784,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["go",{"_index":893,"title":{},"body":{"index.html":{}}}],["hamburg",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["header",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["height",{"_index":711,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":891,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["hidden",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"directives/MobilePaginationDirective.html":{}}}],["hide",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["hidedefaultarrows",{"_index":418,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["horizontal",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":458,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["hostlistener",{"_index":667,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener(\"window:resize",{"_index":671,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener('window:resize",{"_index":659,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener('window:scroll",{"_index":661,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlisteners",{"_index":646,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["howmanydisplayedel",{"_index":545,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["htmlelement",{"_index":443,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["http://localhost:4200",{"_index":862,"title":{},"body":{"index.html":{}}}],["icon",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["iconname",{"_index":369,"title":{},"body":{"components/IconsComponent.html":{}}}],["icons",{"_index":354,"title":{},"body":{"components/IconsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["icons.ts",{"_index":355,"title":{},"body":{"components/IconsComponent.html":{}}}],["icons/icons.component",{"_index":268,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["icons[iconname",{"_index":375,"title":{},"body":{"components/IconsComponent.html":{}}}],["iconscomponent",{"_index":212,"title":{"components/IconsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["id",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/IdToValuePipe.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["identifier",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["idtovalue",{"_index":383,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["idtovaluepipe",{"_index":378,"title":{"pipes/IdToValuePipe.html":{}},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["ignore",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":686,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["implemented",{"_index":700,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["include",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":632,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["indicator.component.html",{"_index":636,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.sass",{"_index":635,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":631,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["indicator.component.ts:18",{"_index":653,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:19",{"_index":652,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:20",{"_index":650,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:28",{"_index":665,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:29",{"_index":664,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:31",{"_index":654,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:35",{"_index":655,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:39",{"_index":649,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":657,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:53",{"_index":656,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":663,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:72",{"_index":662,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator/scroll",{"_index":630,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["individual",{"_index":301,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["infinite",{"_index":279,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["inherited",{"_index":248,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["inject",{"_index":317,"title":{},"body":{"pipes/DynamicPipe.html":{},"directives/StickyDirective.html":{}}}],["inject(document",{"_index":746,"title":{},"body":{"directives/StickyDirective.html":{}}}],["inject(platform_id",{"_index":747,"title":{},"body":{"directives/StickyDirective.html":{}}}],["injectable",{"_index":327,"title":{"injectables/DynamicTableService.html":{}},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":329,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["injector",{"_index":313,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injector.create",{"_index":320,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injector.get(requiredpipe",{"_index":325,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injects",{"_index":300,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["innerhtml",{"_index":356,"title":{},"body":{"components/IconsComponent.html":{}}}],["input",{"_index":371,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["inputs",{"_index":235,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["instance",{"_index":316,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{}}}],["instanceof",{"_index":751,"title":{},"body":{"directives/StickyDirective.html":{}}}],["interface",{"_index":289,"title":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{}},"body":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":291,"title":{},"body":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"overview.html":{}}}],["iseditable",{"_index":334,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["isscrollatbottom",{"_index":637,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["isscrollindicatorshown",{"_index":638,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["isspinnervisible",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["ist",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["isvisible",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":388,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.bezeichnung",{"_index":393,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.hasownproperty('bezeichnung",{"_index":392,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.hasownproperty('item",{"_index":394,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.id",{"_index":391,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.item",{"_index":395,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["items",{"_index":552,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["itemsperpage",{"_index":541,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["json",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["json.parse(this.styles",{"_index":714,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["karma",{"_index":881,"title":{},"body":{"index.html":{}}}],["kat",{"_index":384,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["kat.find((item",{"_index":389,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["keyframes",{"_index":280,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["keyof",{"_index":758,"title":{},"body":{"directives/StickyDirective.html":{}}}],["köln",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["label",{"_index":547,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["last",{"_index":518,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["lastbutton",{"_index":516,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["left",{"_index":563,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{}}}],["legend",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["letters",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":772,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit=20",{"_index":780,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["linear",{"_index":278,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["list",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":294,"title":{},"body":{"interfaces/Column.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{}}}],["local",{"_index":296,"title":{},"body":{"interfaces/Column.html":{}}}],["makesticky",{"_index":717,"title":{},"body":{"directives/StickyDirective.html":{}}}],["many",{"_index":556,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["map",{"_index":462,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["map((e",{"_index":485,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["margin",{"_index":606,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["markus",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["martin",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":543,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matching",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil",{"_index":588,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matpag",{"_index":427,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matpaginator",{"_index":425,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["mdc",{"_index":544,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["memberof",{"_index":377,"title":{},"body":{"components/IconsComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["method",{"_index":699,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["minimum",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":835,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilepaginationdirective",{"_index":220,"title":{"directives/MobilePaginationDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["modules",{"_index":897,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":892,"title":{},"body":{"index.html":{}}}],["münchen",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["n",{"_index":507,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["name(iconname",{"_index":373,"title":{},"body":{"components/IconsComponent.html":{}}}],["nativeel",{"_index":737,"title":{},"body":{"directives/StickyDirective.html":{}}}],["nativeel.style[property.tostring",{"_index":760,"title":{},"body":{"directives/StickyDirective.html":{}}}],["nativeelement",{"_index":539,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["nativeelement.queryselector",{"_index":542,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["navigate",{"_index":861,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":550,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["need",{"_index":887,"title":{},"body":{"index.html":{}}}],["needed",{"_index":596,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["neededbuttons",{"_index":587,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["new",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"coverage.html":{},"index.html":{}}}],["newindex",{"_index":437,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["next",{"_index":510,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{}}}],["nextbuttondefault",{"_index":551,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ng",{"_index":858,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":411,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngif",{"_index":633,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["ngonchanges",{"_index":412,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngonchanges(changes",{"_index":446,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngondestroy",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["ngstyle",{"_index":634,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxdynamictable",{"_index":850,"title":{},"body":{"index.html":{}}}],["ngxdynamictablecomponent",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["none",{"_index":506,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"miscellaneous/variables.html":{}}}],["normalizesize",{"_index":702,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalizesize(this.size",{"_index":710,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["null",{"_index":376,"title":{},"body":{"components/IconsComponent.html":{}}}],["number",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["nxt",{"_index":498,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["nxtmobilepagination",{"_index":401,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["nxtmobilepagination]'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["object",{"_index":706,"title":{},"body":{"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["observable",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/ScrollIndicatorComponent.html":{}}}],["onchanges",{"_index":400,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["one",{"_index":591,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ones",{"_index":470,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["onresize",{"_index":641,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["opacity",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["options",{"_index":684,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ort",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":894,"title":{},"body":{"index.html":{}}}],["output",{"_index":459,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["outputs",{"_index":422,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["overflow",{"_index":707,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["overview",{"_index":895,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":820,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":620,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["page",{"_index":473,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{}}}],["pageindexchangeemitter",{"_index":423,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination",{"_index":481,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts",{"_index":398,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["pagination.directive.ts:10",{"_index":434,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:11",{"_index":431,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:112",{"_index":452,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:12",{"_index":432,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:13",{"_index":430,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:14",{"_index":428,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:143",{"_index":440,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:15",{"_index":429,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:163",{"_index":435,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:17",{"_index":456,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:18",{"_index":457,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:19",{"_index":455,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:195",{"_index":450,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:20",{"_index":426,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:204",{"_index":442,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:227",{"_index":444,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:24",{"_index":448,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:249",{"_index":454,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:34",{"_index":445,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:39",{"_index":451,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:55",{"_index":438,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination/mobile",{"_index":397,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["paginator",{"_index":538,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["param",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["parameter",{"_index":771,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["parent",{"_index":321,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["parsefloat(size.tostring()).tostring",{"_index":703,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":553,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pipe",{"_index":104,"title":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["pipe.transform(value",{"_index":326,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["pipeargs",{"_index":306,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["pipes",{"_index":298,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":314,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["placeholder",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["platform",{"_index":884,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":742,"title":{},"body":{"directives/StickyDirective.html":{}}}],["platformid",{"_index":724,"title":{},"body":{"directives/StickyDirective.html":{}}}],["position",{"_index":561,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["prefetch",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["previous",{"_index":508,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previousbutton",{"_index":548,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previousindex",{"_index":439,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previouslyactive",{"_index":492,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previouspageindex",{"_index":625,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["private",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["process",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["processed",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":851,"title":{},"body":{"index.html":{}}}],["projects/.../app.config.ts",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../icons.ts",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ngx",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../spinner.ts",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tableaction.enum.ts",{"_index":837,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/demo/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["projects/demo/src/app/app.component.ts:31",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:32",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:34",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:35",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:37",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:43",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:49",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:55",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:80",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.config.ts",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":228,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":734,"title":{},"body":{"directives/StickyDirective.html":{}}}],["properties",{"_index":30,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"properties.html":{}}}],["property",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"directives/StickyDirective.html":{}}}],["provide",{"_index":324,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["provideanimations",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":349,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["providerouter(routes",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":323,"title":{},"body":{"pipes/DynamicPipe.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":640,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["qrcode",{"_index":845,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["range",{"_index":546,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["react",{"_index":609,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["readable",{"_index":386,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{}}}],["reference",{"_index":896,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":841,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":865,"title":{},"body":{"index.html":{}}}],["remove",{"_index":466,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["removebuttons",{"_index":413,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["render",{"_index":585,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderbuttons",{"_index":414,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderbuttonsnumber",{"_index":419,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["rendered",{"_index":580,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderelements",{"_index":511,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderer",{"_index":365,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["renderer2",{"_index":366,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["representing",{"_index":683,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["required",{"_index":312,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["requiredpipe",{"_index":305,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["resolve",{"_index":532,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["results",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":269,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["returntableaction",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["returntableaction(event",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":251,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["right",{"_index":570,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{}}}],["root'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["rows",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["rowsanimation",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":857,"title":{},"body":{"index.html":{}}}],["running",{"_index":875,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":868,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["scrollablecontent",{"_index":645,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["scrollcontainer",{"_index":720,"title":{},"body":{"directives/StickyDirective.html":{}}}],["scrollcontainer(value",{"_index":744,"title":{},"body":{"directives/StickyDirective.html":{}}}],["scrollindicatorcomponent",{"_index":215,"title":{"components/ScrollIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["scrolltobottom",{"_index":642,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["scrolltotop",{"_index":643,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["search",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondary",{"_index":253,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["secondarycolor",{"_index":238,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["self",{"_index":460,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["sequence",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serve",{"_index":859,"title":{},"body":{"index.html":{}}}],["server",{"_index":856,"title":{},"body":{"index.html":{}}}],["set",{"_index":353,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["setchange(value",{"_index":666,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["setdata",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["sethtmlelement",{"_index":718,"title":{},"body":{"directives/StickyDirective.html":{}}}],["sethtmlelement(prop",{"_index":732,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setiseditable",{"_index":336,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["setiseditable(iseditable",{"_index":339,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["setname(iconname",{"_index":370,"title":{},"body":{"components/IconsComponent.html":{}}}],["setscrollcontainer(value",{"_index":740,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setstylepropertytoelement",{"_index":719,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setstylepropertytoelement(nativeel",{"_index":735,"title":{},"body":{"directives/StickyDirective.html":{}}}],["settextfilter",{"_index":337,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["settextfilter(textfilter",{"_index":341,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["settimeout",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["settings",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["share",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{}}}],["showcheckbox",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["showcount",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["showfirstbutton",{"_index":420,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["showlastbutton",{"_index":421,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["showpaginator",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["simplechanges",{"_index":447,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["size",{"_index":239,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["size.tostring",{"_index":704,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["size}px",{"_index":705,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["sliced",{"_index":310,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/TruncatePipe.html":{}}}],["smooth",{"_index":679,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["sort",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortable",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["sortcolumn",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["sortstart",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["speed",{"_index":240,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["spinner'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner.component",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["spinner.component.html",{"_index":234,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.sass",{"_index":233,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":229,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:17",{"_index":265,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.ts:21",{"_index":267,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner/circular",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"coverage.html":{}}}],["spinner/spinner.ts",{"_index":681,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinner/spinner.ts:17",{"_index":689,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:22",{"_index":691,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:27",{"_index":690,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:32",{"_index":692,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:37",{"_index":693,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:42",{"_index":694,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:47",{"_index":695,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:52",{"_index":696,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:58",{"_index":698,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner2",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinnercomponent",{"_index":218,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["spinnercomponent:17",{"_index":249,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:22",{"_index":252,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:27",{"_index":250,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:32",{"_index":255,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:37",{"_index":257,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:42",{"_index":258,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:47",{"_index":259,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:52",{"_index":262,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinners",{"_index":274,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["src/**/*.spec.ts",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["src/**/*.ts",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["src/app/file",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["src/test.ts",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["startat",{"_index":773,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startat=0",{"_index":781,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startdots",{"_index":530,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["started",{"_index":785,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starting",{"_index":533,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startingchar",{"_index":778,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startingindex",{"_index":535,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startwith",{"_index":463,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startwith([0",{"_index":488,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["state",{"_index":600,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["statements",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["sticky",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["stickydirective",{"_index":222,"title":{"directives/StickyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"coverage.html":{}}}],["stickyelement",{"_index":725,"title":{},"body":{"directives/StickyDirective.html":{}}}],["still",{"_index":241,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["stored",{"_index":872,"title":{},"body":{"index.html":{}}}],["string",{"_index":246,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":263,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["strokewidth",{"_index":244,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["style",{"_index":260,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["styledefaultpagination",{"_index":415,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["styles",{"_index":227,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":232,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["subclass",{"_index":701,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["subclasses",{"_index":685,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["subject",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["svgstyle",{"_index":688,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["switch",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["switchpage",{"_index":416,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["switchpage(i",{"_index":453,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tabelle",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"pipes/IdToValuePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["table'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["table.component",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["table.component.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.service.ts",{"_index":331,"title":{},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["table.service.ts:10",{"_index":348,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:12",{"_index":344,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:13",{"_index":338,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:17",{"_index":342,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:20",{"_index":340,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:9",{"_index":345,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table/src/lib/components/circular",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/components/icons/icons.component.ts",{"_index":352,"title":{},"body":{"components/IconsComponent.html":{},"coverage.html":{}}}],["table/src/lib/components/icons/icons.component.ts:25",{"_index":368,"title":{},"body":{"components/IconsComponent.html":{}}}],["table/src/lib/components/icons/icons.component.ts:27",{"_index":367,"title":{},"body":{"components/IconsComponent.html":{}}}],["table/src/lib/components/icons/icons.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/components/scroll",{"_index":629,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["table/src/lib/directives/mobile",{"_index":396,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts",{"_index":715,"title":{},"body":{"directives/StickyDirective.html":{},"coverage.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:11",{"_index":727,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:14",{"_index":741,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:17",{"_index":738,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:19",{"_index":729,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:20",{"_index":726,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:28",{"_index":731,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:32",{"_index":733,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:45",{"_index":730,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:54",{"_index":736,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/models/column.model.ts",{"_index":292,"title":{},"body":{"interfaces/Column.html":{},"coverage.html":{}}}],["table/src/lib/models/tableaction.enum",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableaction.enum.ts",{"_index":838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table/src/lib/models/tableaction.model",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableaction.model.ts",{"_index":762,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"coverage.html":{}}}],["table/src/lib/models/tableoptions.model",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableoptions.model.ts",{"_index":764,"title":{},"body":{"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["table/src/lib/ngx",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/pipes/dynamic/dynamic.pipe.ts",{"_index":299,"title":{},"body":{"pipes/DynamicPipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/dynamic/dynamic.pipe.ts:22",{"_index":307,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["table/src/lib/pipes/id",{"_index":379,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/truncate/truncate.pipe.ts",{"_index":769,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/truncate/truncate.pipe.ts:17",{"_index":775,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["table/src/lib/services/dynamic",{"_index":330,"title":{},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["tableaction",{"_index":761,"title":{"interfaces/TableAction.html":{}},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["tableaction.enum",{"_index":763,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["tableaction.model",{"_index":766,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["tableactionenum",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"miscellaneous/enumerations.html":{}}}],["tableactionenum.check",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.checkall",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.delete",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.edit",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.refresh",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionenum.show",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionreturn",{"_index":52,"title":{"interfaces/TableActionReturn.html":{}},"body":{"components/AppComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"coverage.html":{}}}],["tableoptions",{"_index":38,"title":{"interfaces/Tableoptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":358,"title":{},"body":{"components/IconsComponent.html":{}}}],["takeuntildestroyed",{"_index":489,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tank",{"_index":846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["target",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["test",{"_index":878,"title":{},"body":{"index.html":{}}}],["testing",{"_index":888,"title":{},"body":{"index.html":{}}}],["tests",{"_index":877,"title":{},"body":{"index.html":{}}}],["text",{"_index":555,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["textfilter",{"_index":335,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["thats",{"_index":309,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/TruncatePipe.html":{}}}],["thickness",{"_index":242,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["this._data.asobservable",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this._data.next",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this._iseditable.asobservable",{"_index":346,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._iseditable.next(iseditable",{"_index":351,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._scrollcontainer",{"_index":743,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this._textfilter.asobservable",{"_index":347,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._textfilter.next(textfilter",{"_index":350,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this.appcustomlength",{"_index":589,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.bubblecontainerref",{"_index":581,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buildbuttons",{"_index":480,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref",{"_index":593,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref.foreach((button",{"_index":503,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref.length",{"_index":537,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[0",{"_index":515,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[newindex",{"_index":495,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[previousindex",{"_index":493,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[this.buttonsref.length",{"_index":517,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.changeactivebuttonstyles(prev",{"_index":490,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.checkscrollablecontent",{"_index":670,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.color",{"_index":271,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.createbubbledivref",{"_index":477,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.createbutton(0",{"_index":594,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.createdotselement",{"_index":595,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.destroy$.next(true",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.document.getelementbyid(value",{"_index":750,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.dotsstartref",{"_index":529,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.elementref.nativeelement",{"_index":540,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.elementref.nativeelement.queryselector",{"_index":576,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.hidedefaultarrows",{"_index":572,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.injector",{"_index":322,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["this.isscrollatbottom",{"_index":680,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.isscrollindicatorshown",{"_index":676,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.isvisible",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.makesticky",{"_index":748,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.matpag.page",{"_index":484,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag.pageindex",{"_index":626,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag.pagesize",{"_index":590,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag['_emitpageevent'](previouspageindex",{"_index":627,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.pageindexchangeemitter.emit(i",{"_index":628,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.removebuttons",{"_index":471,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderbuttons",{"_index":475,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderbuttonsnumber",{"_index":512,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(bubblebutton",{"_index":604,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(currentactive",{"_index":502,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(this.bubblecontainerref",{"_index":583,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(bubblebutton",{"_index":608,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(dotsel",{"_index":624,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(this.bubblecontainerref",{"_index":613,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createelement('div",{"_index":582,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createelement('span",{"_index":615,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createtext",{"_index":617,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createtext(string(i",{"_index":603,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.insertbefore",{"_index":586,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.listen(bubblebutton",{"_index":611,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.removechild(this.bubblecontainerref",{"_index":598,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.removeclass(previouslyactive",{"_index":497,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setproperty(this.element.nativeelement,'innerhtml",{"_index":374,"title":{},"body":{"components/IconsComponent.html":{}}}],["this.renderer.setstyle",{"_index":528,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(bubblebutton",{"_index":605,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(button",{"_index":504,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(dotsel",{"_index":618,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(firstbutton",{"_index":531,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(howmanydisplayedel",{"_index":560,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(itemsperpage",{"_index":554,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(lastbutton",{"_index":524,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(nextbuttondefault",{"_index":574,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(previousbutton",{"_index":573,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(this.dotsendref",{"_index":522,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":592,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.scrollablecontent.offsetheight",{"_index":675,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scroll",{"_index":677,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scrollheight",{"_index":673,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scrolltop",{"_index":674,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.setdata",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sethtmlelement('_scrollcontainer",{"_index":745,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.setstylepropertytoelement(nativeelement",{"_index":754,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.showfirstbutton",{"_index":527,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.showlastbutton",{"_index":521,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.speed}s",{"_index":277,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.stickyelement.nativeelement",{"_index":753,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.still",{"_index":272,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.styledefaultpagination",{"_index":476,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.styles",{"_index":713,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.switchpage(0",{"_index":474,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.switchpage(i",{"_index":612,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.thickness",{"_index":270,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.top}px",{"_index":756,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.zindex.tostring",{"_index":757,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this['_scrollcontainer",{"_index":749,"title":{},"body":{"directives/StickyDirective.html":{}}}],["thomas",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["tim",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["timer(1000ms",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["tom",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":621,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["transform",{"_index":303,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":304,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["transformed",{"_index":311,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{}}}],["transforms",{"_index":382,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["transition('void",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["triangle",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('rowsanimation",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["truncate",{"_index":770,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":768,"title":{"pipes/TruncatePipe.html":{}},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["try",{"_index":496,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tslib",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":712,"title":{},"body":{"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["ui",{"_index":479,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["undefined",{"_index":660,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["unit",{"_index":876,"title":{},"body":{"index.html":{}}}],["use",{"_index":357,"title":{},"body":{"components/IconsComponent.html":{},"index.html":{}}}],["used",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["user",{"_index":569,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":782,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.nativeelement",{"_index":752,"title":{},"body":{"directives/StickyDirective.html":{}}}],["value.pipe.ts",{"_index":381,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["value.pipe.ts:15",{"_index":385,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["value.subscribe",{"_index":669,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["value.substr(startat",{"_index":783,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value/id",{"_index":380,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["var",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["variable",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":900,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":854,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":880,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":372,"title":{},"body":{"components/IconsComponent.html":{}}}],["viewencapsulation.emulated",{"_index":362,"title":{},"body":{"components/IconsComponent.html":{}}}],["visible",{"_index":708,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["webkit",{"_index":755,"title":{},"body":{"directives/StickyDirective.html":{}}}],["whether",{"_index":568,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["width",{"_index":709,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["window:resize",{"_index":647,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["window:scroll",{"_index":648,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["work",{"_index":687,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["x",{"_index":509,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["zindex",{"_index":721,"title":{},"body":{"directives/StickyDirective.html":{}}}],["zone.js",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/demo/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                CircularSpinnerComponent\n                            CommonModule\n                            DatePipe\n                                NgxDynamicTableComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.sass\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _data\n                            \n                            \n                                data$\n                            \n                            \n                                destroy$\n                            \n                            \n                                isSpinnerVisible\n                            \n                            \n                                isVisible\n                            \n                            \n                                tableoptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnTableAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/app.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnTableAction\n                        \n                    \n                \n            \n            \n                \nreturnTableAction(event: TableActionReturn)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            TableActionReturn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The target to process\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                The processed target number\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSpinnerVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    The isVisible property belongs to the data of the dynamic-table.\nIt is used to show or hide the table, depended on the data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableoptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tableoptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    actions: [\n      { name: 'delete', icon: 'trash', action: 1 },\n      { name: 'edit', icon: 'edit', action: 2 },\n      { name: 'show', icon: 'eye', action: 4 }\n    ],\n    columns: [\n      { id: '1', name: 'id', header: 'ID', cell: 'id', hidden: true, sortable: true },\n      { id: '2', name: 'name', header: 'Name', cell: 'name', hidden: false, sortable: true },\n      { id: '3', name: 'date', header: 'Datum/Zeit', cell: 'date', pipe: { name: DatePipe, args: 'dd.MM.YYYY HH:mm:ss'}, hidden: false, sortable: true },\n      { id: '4', name: 'ort', header: 'Ort', cell: 'ort', hidden: false, sortable: true },\n    ],\n    columnFilter: ['date', 'ort'],\n    columnNames: ['checkbox', 'count', 'name', 'date', 'ort', 'actions'],\n    showCheckbox: true,\n    showCount: true,\n    showPaginator: true,\n    sortColumn: 'date',\n    sortStart: 'asc'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NgxDynamicTableComponent } from '../../../ngx-dynamic-table/src/lib/ngx-dynamic-table.component';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Tableoptions } from '../../../ngx-dynamic-table/src/lib/models/tableoptions.model';\nimport { TableActionReturn } from '../../../ngx-dynamic-table/src/lib/models/tableaction.model';\nimport { TableActionEnum } from '../../../ngx-dynamic-table/src/lib/models/tableaction.enum';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { CircularSpinnerComponent } from '../../../ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CircularSpinnerComponent,\n    CommonModule,\n    DatePipe,\n    NgxDynamicTableComponent,\n    RouterOutlet\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.sass'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * The isVisible property belongs to the data of the dynamic-table.\n   * It is used to show or hide the table, depended on the data.\n   * \n   * @type {boolean}\n   */\n  isVisible: boolean = false\n  isSpinnerVisible: boolean = true;\n\n  private readonly _data = new BehaviorSubject([])\n  data$: Observable = this._data.asObservable()\n\n  destroy$: Subject = new Subject()\n\n  constructor() {\n    this.setData()\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.isVisible = true\n    },2000)\n  }\n\n  ngOnDestroy(): void {\n    console.log('destroy')\n    this.destroy$.next(true)\n    this.destroy$.unsubscribe()\n  }\n\n  tableoptions: Tableoptions = {\n    actions: [\n      { name: 'delete', icon: 'trash', action: 1 },\n      { name: 'edit', icon: 'edit', action: 2 },\n      { name: 'show', icon: 'eye', action: 4 }\n    ],\n    columns: [\n      { id: '1', name: 'id', header: 'ID', cell: 'id', hidden: true, sortable: true },\n      { id: '2', name: 'name', header: 'Name', cell: 'name', hidden: false, sortable: true },\n      { id: '3', name: 'date', header: 'Datum/Zeit', cell: 'date', pipe: { name: DatePipe, args: 'dd.MM.YYYY HH:mm:ss'}, hidden: false, sortable: true },\n      { id: '4', name: 'ort', header: 'Ort', cell: 'ort', hidden: false, sortable: true },\n    ],\n    columnFilter: ['date', 'ort'],\n    columnNames: ['checkbox', 'count', 'name', 'date', 'ort', 'actions'],\n    showCheckbox: true,\n    showCount: true,\n    showPaginator: true,\n    sortColumn: 'date',\n    sortStart: 'asc'\n  }\n\n  /**\n * @param {TableActionReturn} event  The target to process\n * @returns The processed target number\n */\n  returnTableAction(event: TableActionReturn) {\n    switch (event.action) {\n      case TableActionEnum.DELETE:\n        console.log('delete row')\n        break\n      case TableActionEnum.EDIT:\n        console.log('edit row')\n        break\n      case TableActionEnum.SHOW:\n        console.log('show row')\n        break\n      case TableActionEnum.REFRESH:\n        console.log('refresh table')\n        this.setData()\n        break\n      case TableActionEnum.CHECK:\n        console.log('check row', event.row)\n        break\n      case TableActionEnum.CHECKALL:\n        console.log('check all rows')\n        break\n      default:\n        console.log('default action')\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  setData() {\n    this._data.next([\n      { id: '1', name: 'Tim', date: '01.01.2024 00:00:59', ort: 'Berlin', checked: false },\n      { id: '2', name: 'Tom', date: '01.01.2023 00:00:59', ort: 'Hamburg', checked: true },\n      { id: '3', name: 'Thomas', date: '01.02.2023 00:00:59', ort: 'Dresden', checked: true },\n      { id: '4', name: 'Martin', date: '03.02.2023 00:00:59', ort: 'München', checked: false },\n      { id: '5', name: 'Markus', date: '04.02.2023 00:00:59', ort: 'Köln', checked: false }\n    ])\n  }\n}\n\n    \n\n    \n        \n  \n      \n        \n          Tabelle\n          Dies ist die Beschreibung zu dieser Tabelle.\n        \n        \n          \n            \n          \n        \n      \n\n      \n          @defer (when isVisible; prefetch on timer(1000ms)) {\n            \n              \n            \n          }\n          @placeholder (minimum 100ms) {\n            \n              \n            \n          }\n          @loading (after 100ms; minimum 150ms) {\n            Loading\n          }\n          @error {\n            Error\n          }\n          \n            {{ (data$ | async) | json }}\n           -->\n          \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Tabelle          Dies ist die Beschreibung zu dieser Tabelle.                                                                              @defer (when isVisible; prefetch on timer(1000ms)) {                                                }          @placeholder (minimum 100ms) {                                                }          @loading (after 100ms; minimum 150ms) {            Loading          }          @error {            Error          }                      {{ (data$ | async) | json }}           -->                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircularSpinnerComponent.html":{"url":"components/CircularSpinnerComponent.html","title":"component - CircularSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CircularSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    SpinnerComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                circular-spinner\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                IconsComponent\n                \n            \n\n            \n                styleUrls\n                ./circular-spinner.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./circular-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                enabled\n                            \n                            \n                                secondaryColor\n                            \n                            \n                                size\n                            \n                            \n                                speed\n                            \n                            \n                                still\n                            \n                            \n                                styles\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    strokeWidth\n                                \n                                \n                                    dashStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#037bfc'\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:17\n\n                            \n                        \n                \n                    \n                        Default color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:27\n\n                            \n                        \n                \n                    \n                        Default enabled of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(0,0,0,0.05)'\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:22\n\n                            \n                        \n                \n                    \n                        Default secondary color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:32\n\n                            \n                        \n                \n                    \n                        Default size of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:37\n\n                            \n                        \n                \n                    \n                        Default speed of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        still\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:42\n\n                            \n                        \n                \n                    \n                        Default still of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:47\n\n                            \n                        \n                \n                    \n                        Default style of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:52\n\n                            \n                        \n                \n                    \n                        Default stroke thickness of the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        strokeWidth\n                    \n                \n\n                \n                    \n                        getstrokeWidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dashStyle\n                    \n                \n\n                \n                    \n                        getdashStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { SpinnerComponent } from './spinner'\nimport { CommonModule } from '@angular/common'\nimport { IconsComponent } from '../icons/icons.component'\n\n@Component({\n  selector: 'circular-spinner',\n  standalone: true,\n  imports: [\n    CommonModule,\n    IconsComponent\n  ],\n  templateUrl: './circular-spinner.component.html',\n  styleUrls: ['./circular-spinner.component.sass']\n})\nexport class CircularSpinnerComponent extends SpinnerComponent {\n  get strokeWidth() {\n    return 4 * (this.thickness / 100)\n  }\n\n  get dashStyle() {\n    return { color: this.color, ...(!this.still ? { animation: `spinners-angular-circular ${140 / this.speed}s linear infinite` } : {})}\n  }\n}\n\n    \n\n    \n        \n  \n  \n -->\n\n\n\n  \n  Loading...\n\n    \n\n    \n                \n                    ./circular-spinner.component.sass\n                \n                @keyframes spinners-angular-circular \n  0%  \n    stroke-dashoffset: 306 \n  50%  \n    stroke-dasharray: 40, 134 \n  100% \n    stroke-dasharray: 1, 174\n    stroke-dashoffset: 132\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     -->    Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'CircularSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Column.html":{"url":"interfaces/Column.html","title":"interface - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/column.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cell\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipe\n                                        \n                                \n                                \n                                        \n                                            sortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cell\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipe:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"checkbox\" | \"datetime-local\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"checkbox\" | \"datetime-local\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Column {\n    id: string,\n    name: string,\n    header: string,\n    cell: string,\n    hidden: boolean,\n    sortable: boolean,\n    disabled?: boolean,\n    pipe?: { name: any, args: string }\n    type?: 'checkbox' | 'datetime-local'\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DynamicPipe.html":{"url":"pipes/DynamicPipe.html","title":"pipe - DynamicPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DynamicPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This pipe injects a individual pipe with optional arguments!\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        dynamicPipe\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, requiredPipe: Type, pipeArgs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts:22\n                        \n                    \n\n\n            \n                \n                        This function returns a value, thats sliced.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvalue that should be transformed\n\n\n                                            \n                                        \n                                        \n                                                requiredPipe\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRequired pipe\n\n\n                                            \n                                        \n                                        \n                                                pipeArgs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nArguments for the pipe.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core'\n\n/**\n * This pipe injects a individual pipe with optional arguments!\n */\n@Pipe({\n  name: 'dynamicPipe',\n  standalone: true\n})\nexport class DynamicPipe implements PipeTransform {\n  /**\n   * Creates an instance of DynamicPipe.\n   * @param {Injector} injector - The injector to inject a individual pipe.\n   */\n  constructor(private injector: Injector) {}\n  /**\n   * This function returns a value, thats sliced.\n   * @param {any}       value         - value that should be transformed\n   * @param {Type} requiredPipe  - Required pipe\n   * @param {any}       pipeArgs      - Arguments for the pipe.\n   */\n  transform(value: any, requiredPipe: Type, pipeArgs: any): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [\n        { provide: requiredPipe }\n      ]\n    })\n    const pipe = injector.get(requiredPipe)\n    return pipe.transform(value, pipeArgs)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicTableService.html":{"url":"injectables/DynamicTableService.html","title":"injectable - DynamicTableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DynamicTableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isEditable\n                            \n                            \n                                    Private\n                                    Readonly\n                                _textFilter\n                            \n                            \n                                isEditable$\n                            \n                            \n                                textFilter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsEditable\n                            \n                            \n                                setTextFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setIsEditable\n                        \n                    \n                \n            \n            \n                \nsetIsEditable(isEditable: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isEditable\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextFilter\n                        \n                    \n                \n            \n            \n                \nsetTextFilter(textFilter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                textFilter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _textFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isEditable.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._textFilter.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicTableService {\n\n  private readonly _textFilter = new BehaviorSubject('')\n  textFilter$: Observable = this._textFilter.asObservable()\n\n  private _isEditable = new BehaviorSubject(false)\n  isEditable$: Observable = this._isEditable.asObservable()\n\n  constructor() {}\n\n  setTextFilter(textFilter: string) {\n    this._textFilter.next(textFilter)\n  }\n  setIsEditable(isEditable: boolean) {\n    this._isEditable.next(isEditable)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconsComponent.html":{"url":"components/IconsComponent.html","title":"component - IconsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component set the icons from the icons.ts file to the innerHTML of the element. In use of tailwindcss the classes will style the icons.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.Emulated\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                icons\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of IconsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:25\n                            \n                        \n                \n                    \n                        The iconname to get from icons.ts to set to the innerHTML.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n\n                \n                    \n                        setname(iconName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:25\n                                \n                            \n                    \n                        \n                                The iconname to get from icons.ts to set to the innerHTML.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            iconName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { icons } from './icons';\n\n/**\n * This component set the icons from the icons.ts file to the innerHTML of the element. In use of tailwindcss the classes will style the icons.\n * \n * @example\n * \n*/\n@Component({\n  selector: 'icons',\n  standalone: true,\n  imports: [],\n  template: `\n    \n  `,\n  styles: ``,\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class IconsComponent {\n    /**\n   * The iconname to get from icons.ts to set to the innerHTML.\n   * @type {string}\n   */\n  @Input() set name(iconName: string) {\n    this.renderer.setProperty(this.element.nativeElement,'innerHTML', icons[iconName] || null)\n  }\n  \n  /**\n   * Creates an instance of IconsComponent.\n   * @param {ElementRef} element\n   * @param {Renderer2} renderer\n   * @memberof IconsComponent\n   */\n  constructor(private element: ElementRef, private renderer: Renderer2) {}\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IdToValuePipe.html":{"url":"pipes/IdToValuePipe.html","title":"pipe - IdToValuePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IdToValuePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This pipe transforms an id to a value.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        idToValue\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, kat: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts:15\n                        \n                    \n\n\n            \n                \n                        This function returns a readable value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nvalue that should be transformed\n\n\n                                            \n                                        \n                                        \n                                                kat\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ntable with id and value\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * This pipe transforms an id to a value.\n */\n@Pipe({\n  name: 'idToValue'\n})\nexport class IdToValuePipe implements PipeTransform {\n  /**\n   * This function returns a readable value.\n   * @param {string}  value - value that should be transformed\n   * @param {any[]}   kat   - table with id and value\n   */\n  transform(value: string, kat: any[]): string {\n    console.log('kat: ', kat)\n    let item = kat.find((item: { id: string, bezeichnung: string }) => item.id === value)\n    if (item.hasOwnProperty('bezeichnung')) return item.bezeichnung\n    if (item.hasOwnProperty('item')) return item.item\n    return value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MobilePaginationDirective.html":{"url":"directives/MobilePaginationDirective.html","title":"directive - MobilePaginationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  MobilePaginationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [nxtMobilePagination]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bubbleContainerRef\n                            \n                            \n                                    Private\n                                buttonsRef\n                            \n                            \n                                    Private\n                                dotsEndRef\n                            \n                            \n                                    Private\n                                dotsStartRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildButtons\n                            \n                            \n                                    Private\n                                changeActiveButtonStyles\n                            \n                            \n                                    Private\n                                createBubbleDivRef\n                            \n                            \n                                    Private\n                                createButton\n                            \n                            \n                                    Private\n                                createDotsElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                removeButtons\n                            \n                            \n                                    Private\n                                renderButtons\n                            \n                            \n                                    Private\n                                styleDefaultPagination\n                            \n                            \n                                    Private\n                                switchPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appCustomLength\n                            \n                            \n                                hideDefaultArrows\n                            \n                            \n                                renderButtonsNumber\n                            \n                            \n                                showFirstButton\n                            \n                            \n                                showLastButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageIndexChangeEmitter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matPag: MatPaginator, elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matPag\n                                                  \n                                                        \n                                                                    MatPaginator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appCustomLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDefaultArrows\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderButtonsNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFirstButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLastButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:12\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageIndexChangeEmitter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeActiveButtonStyles\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeActiveButtonStyles(previousIndex: number, newIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                previousIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBubbleDivRef\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBubbleDivRef()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createButton\n                        \n                    \n                \n            \n            \n                \n                        \n                    createButton(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDotsElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDotsElement()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:227\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    renderButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        styleDefaultPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    styleDefaultPagination()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        switchPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    switchPage(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bubbleContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buttonsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dotsEndRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dotsStartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, EventEmitter, Host, Input, OnChanges, Optional, Output, Renderer2, Self, SimpleChanges } from '@angular/core'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { map, startWith } from 'rxjs'\n\n@Directive({\n  selector: '[nxtMobilePagination]',\n  standalone: true\n})\nexport class MobilePaginationDirective implements AfterViewInit, OnChanges {\n  @Output() pageIndexChangeEmitter: EventEmitter = new EventEmitter()\n  @Input() showFirstButton = true\n  @Input() showLastButton = true\n  @Input() renderButtonsNumber = 2\n  @Input() appCustomLength: number = 0\n  @Input() hideDefaultArrows = false\n\n  private dotsEndRef!: HTMLElement\n  private dotsStartRef!: HTMLElement\n  private bubbleContainerRef!: HTMLElement\n  private buttonsRef: HTMLElement[] = []\n\n  constructor(@Host() @Self() @Optional() private readonly matPag: MatPaginator, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes?.['appCustomLength']?.firstChange) {\n      // remove buttons before creating new ones\n      this.removeButtons()\n      // switch back to page 0\n      this.switchPage(0)\n      this.renderButtons()\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.styleDefaultPagination()\n    this.createBubbleDivRef()\n  }\n\n  private renderButtons(): void {\n    // build buttons to UI\n    this.buildButtons()\n\n    // when pagination change -> change button styles\n    this.matPag.page\n      .pipe(\n        map((e) => [e.previousPageIndex ?? 0, e.pageIndex]),\n        startWith([0, 0])\n        // takeUntilDestroyed() //  {\n        this.changeActiveButtonStyles(prev, curr)\n      })\n  }\n\n  private changeActiveButtonStyles(previousIndex: number, newIndex: number) {\n    const previouslyActive = this.buttonsRef[previousIndex]\n    const currentActive = this.buttonsRef[newIndex]\n\n    try {\n      this.renderer.removeClass(previouslyActive, 'nxt-bubble__active')\n\n      // add active style to new active button\n      this.renderer.addClass(currentActive, 'nxt-bubble__active')\n  \n      // hide all buttons\n      this.buttonsRef.forEach((button) =>\n        this.renderer.setStyle(button, 'display', 'none')\n      )\n  \n      // show N previous buttons and X next buttons\n      const renderElements = this.renderButtonsNumber\n      const endDots = newIndex  0\n  \n      const firstButton = this.buttonsRef[0]\n      const lastButton = this.buttonsRef[this.buttonsRef.length - 1]\n  \n      // last bubble and dots\n      if (this.showLastButton) {\n        this.renderer.setStyle(this.dotsEndRef, 'display', endDots ? 'block' : 'none')\n        this.renderer.setStyle(lastButton, 'display', endDots ? 'flex' : 'none')\n      }\n  \n      // first bubble and dots\n      if (this.showFirstButton) {\n        this.renderer.setStyle(\n          this.dotsStartRef,\n          'display',\n          startDots ? 'block' : 'none'\n        )\n        this.renderer.setStyle(firstButton, 'display', startDots ? 'flex' : 'none')\n      }\n  \n      // resolve starting and ending index to show buttons\n      const startingIndex = startDots ? newIndex - renderElements : 0\n  \n      const endingIndex = endDots\n        ? newIndex + renderElements\n        : this.buttonsRef.length - 1\n  \n      // display starting buttons\n      for (let i = startingIndex; i  Paginator disabled')\n    }\n    \n  }\n\n  private styleDefaultPagination() {\n    const nativeElement = this.elementRef.nativeElement\n    const itemsPerPage = nativeElement.querySelector(\n      '.mat-mdc-paginator-page-size'\n    )\n    const howManyDisplayedEl = nativeElement.querySelector(\n      '.mat-mdc-paginator-range-label'\n    )\n    const previousButton = nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-previous'\n    )\n    const nextButtonDefault = nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-next'\n    )\n\n    // remove 'items per page'\n    this.renderer.setStyle(itemsPerPage, 'display', 'none')\n\n    // style text of how many elements are currently displayed\n    this.renderer.setStyle(howManyDisplayedEl, 'position', 'absolute')\n    this.renderer.setStyle(howManyDisplayedEl, 'left', '0')\n    // this.renderer.setStyle(howManyDisplayedEl, 'color', '#919191')\n    // this.renderer.setStyle(howManyDisplayedEl, 'font-size', '14px')\n\n    // check whether the user wants to remove left & right default arrow\n    if (this.hideDefaultArrows) {\n      this.renderer.setStyle(previousButton, 'display', 'none')\n      this.renderer.setStyle(nextButtonDefault, 'display', 'none')\n    }\n  }\n\n  private createBubbleDivRef(): void {\n    const actionContainer = this.elementRef.nativeElement.querySelector(\n      'div.mat-mdc-paginator-range-actions'\n    )\n    const nextButtonDefault = this.elementRef.nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-next'\n    )\n\n    // create a HTML element where all bubbles will be rendered\n    this.bubbleContainerRef = this.renderer.createElement('div') as HTMLElement\n    this.renderer.addClass(this.bubbleContainerRef, 'nxt-bubble-container')\n\n    // render element before the 'next button' is displayed\n    this.renderer.insertBefore(\n      actionContainer,\n      this.bubbleContainerRef,\n      nextButtonDefault\n    )\n  }\n\n  private buildButtons(): void {\n    const neededButtons = Math.ceil(\n      this.appCustomLength / this.matPag.pageSize\n    )\n\n    // if there is only one page, do not render buttons\n    if (neededButtons === 1) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none')\n      return\n    }\n\n    // create first button\n    this.buttonsRef = [this.createButton(0)]\n\n    // add dots (....) to UI\n    this.dotsStartRef = this.createDotsElement()\n\n    // create all buttons needed for navigation (except the first & last one)\n    for (let index = 1; index  {\n      this.renderer.removeChild(this.bubbleContainerRef, button)\n    })\n\n    // Empty state array\n    this.buttonsRef.length = 0\n  }\n\n  private createButton(i: number): HTMLElement {\n    const bubbleButton = this.renderer.createElement('div')\n    const text = this.renderer.createText(String(i + 1))\n\n    // add class & text\n    this.renderer.addClass(bubbleButton, 'nxt-bubble')\n    this.renderer.setStyle(bubbleButton, 'margin-right', '8px')\n    this.renderer.appendChild(bubbleButton, text)\n\n    // react on click\n    this.renderer.listen(bubbleButton, 'click', () => {\n      this.switchPage(i)\n    })\n\n    // render on UI\n    this.renderer.appendChild(this.bubbleContainerRef, bubbleButton)\n\n    // set style to hidden by default\n    this.renderer.setStyle(bubbleButton, 'display', 'none')\n\n    return bubbleButton\n  }\n\n  private createDotsElement(): HTMLElement {\n    const dotsEl = this.renderer.createElement('span')\n    const dotsText = this.renderer.createText('.....')\n\n    // add class\n    this.renderer.setStyle(dotsEl, 'font-size', '18px')\n    this.renderer.setStyle(dotsEl, 'margin-right', '8px')\n    this.renderer.setStyle(dotsEl, 'padding-top', '6px')\n    this.renderer.setStyle(dotsEl, 'color', '#919191')\n\n    // append text to element\n    this.renderer.appendChild(dotsEl, dotsText)\n\n    // render dots to UI\n    this.renderer.appendChild(this.bubbleContainerRef, dotsEl)\n\n    // set style none by default\n    this.renderer.setStyle(dotsEl, 'display', 'none')\n\n    return dotsEl\n  }\n\n  private switchPage(i: number): void {\n    const previousPageIndex = this.matPag.pageIndex\n    this.matPag.pageIndex = i\n    this.matPag['_emitPageEvent'](previousPageIndex)\n\n    this.pageIndexChangeEmitter.emit(i)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScrollIndicatorComponent.html":{"url":"components/ScrollIndicatorComponent.html","title":"component - ScrollIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScrollIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scroll-indicator\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgStyle\n                                IconsComponent\n                \n            \n\n            \n                styleUrls\n                ./scroll-indicator.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./scroll-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScrollAtBottom\n                            \n                            \n                                isScrollIndicatorShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkScrollableContent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                    Public\n                                onResize\n                            \n                            \n                                    \n                                scroll\n                            \n                            \n                                    Public\n                                scrollToBottom\n                            \n                            \n                                    Public\n                                scrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                distance\n                            \n                            \n                                scrollableContent\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    change\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollableContent\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkScrollableContent\n                        \n                    \n                \n            \n            \n                \ncheckScrollableContent()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', undefined)\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    scroll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', undefined)\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scrollToTop\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToTop()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScrollAtBottom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScrollIndicatorShown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n\n\n                \n                    \n                        setchange(value: Observable)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        Observable\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { NgIf, NgStyle } from '@angular/common';\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IconsComponent } from '../icons/icons.component';\n\n@Component({\n  selector: 'scroll-indicator',\n  standalone: true,\n  imports: [\n    NgIf,\n    NgStyle,\n    IconsComponent\n  ],\n  templateUrl: './scroll-indicator.component.html',\n  styleUrls: ['./scroll-indicator.component.sass']\n})\nexport class ScrollIndicatorComponent implements OnInit {\n  @Input() scrollableContent: any\n  @Input() distance: number = 16\n  @Input() set change(value: Observable) {\n    value.subscribe({\n      next: () => {\n        this.checkScrollableContent()\n      }\n    })\n  }\n\n  isScrollIndicatorShown: boolean = false\n  isScrollAtBottom: boolean = false\n\n  @HostListener(\"window:resize\", []) public onResize() {\n    this.checkScrollableContent()\n  }\n\n  @HostListener('window:scroll', []) scroll() {\n    console.log('update')\n    if ((this.scrollableContent.scrollHeight - (this.scrollableContent.scrollTop + this.scrollableContent.offsetHeight))  {\n      if (this.scrollableContent.scrollHeight > this.scrollableContent.offsetHeight) {\n        this.isScrollIndicatorShown = true\n      } else {\n        this.isScrollIndicatorShown = false\n      }\n    }, 100)\n  }\n\n  checkScrollableContent() {\n    setTimeout(() => {\n      if (this.scrollableContent.scrollHeight > this.scrollableContent.offsetHeight) {\n        this.isScrollIndicatorShown = true\n      } else {\n        this.isScrollIndicatorShown = false\n      }\n    }, 100)\n  }\n\n  public scrollToTop(): void {\n    this.scrollableContent.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    })\n    this.isScrollAtBottom = false\n  }\n\n  public scrollToBottom(): void {\n    this.scrollableContent.scroll({\n      top: this.scrollableContent.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    })\n    this.isScrollAtBottom = true\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./scroll-indicator.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScrollIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n\n\n\n    \n        Description\n    \n    \n        This is an abstract class representing the spinner options.\nSubclasses should implement methods to work with.\n\n    \n\n\n\n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                enabled\n                            \n                            \n                                secondaryColor\n                            \n                            \n                                size\n                            \n                            \n                                speed\n                            \n                            \n                                still\n                            \n                            \n                                styles\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    svgStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#037bfc'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:17\n                            \n                        \n                \n                    \n                        Default color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:27\n                            \n                        \n                \n                    \n                        Default enabled of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(0,0,0,0.05)'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:22\n                            \n                        \n                \n                    \n                        Default secondary color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:32\n                            \n                        \n                \n                    \n                        Default size of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:37\n                            \n                        \n                \n                    \n                        Default speed of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        still\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:42\n                            \n                        \n                \n                    \n                        Default still of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:47\n                            \n                        \n                \n                    \n                        Default style of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:52\n                            \n                        \n                \n                    \n                        Default stroke thickness of the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n\n                \n                    \n                        getsvgStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:58\n                                \n                            \n                    \n                        \n                                This method should be implemented by the subclass.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core'\n\nexport const normalizeSize = (size: number | string) => (parseFloat(size.toString()).toString() === size.toString() ? `${size}px` : size.toString())\n\n/**\n * This is an abstract class representing the spinner options.\n * Subclasses should implement methods to work with.\n */\n@Component({\n    template: ''\n})\nexport abstract class SpinnerComponent {\n    /**\n     * Default color of the spinner.\n     * @type {string}\n     */\n    @Input() color = '#037bfc'\n    /**\n     * Default secondary color of the spinner.\n     * @type {string}\n     */\n    @Input() secondaryColor = 'rgba(0,0,0,0.05)'\n    /**\n     * Default enabled of the spinner.\n     * @type {string}\n     */\n    @Input() enabled = true\n    /**\n     * Default size of the spinner.\n     * @type {string}\n     */\n    @Input() size: number | string = 50\n    /**\n     * Default speed of the spinner.\n     * @type {string}\n     */\n    @Input() speed = 100\n    /**\n     * Default still of the spinner.\n     * @type {string}\n     */\n    @Input() still = false\n    /**\n     * Default style of the spinner.\n     * @type {string}\n     */\n    @Input() styles = {}\n    /**\n     * Default stroke thickness of the spinner.\n     * @type {string}\n     */\n    @Input() thickness = 160\n\n    /**\n     * This method should be implemented by the subclass.\n     * @returns {Object}\n     */\n    get svgStyle() {\n        return {\n            color: this.color,\n            overflow: 'visible',\n            width: normalizeSize(this.size),\n            height: normalizeSize(this.size),\n            ...(typeof this.styles === 'string' ? JSON.parse(this.styles) : this.styles)\n        }\n    }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StickyDirective.html":{"url":"directives/StickyDirective.html","title":"directive - StickyDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  StickyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sticky]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _scrollContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                makeSticky\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHTMLElement\n                            \n                            \n                                    Private\n                                setStylePropertyToElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollContainer\n                            \n                            \n                                top\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scrollContainer\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, platformId: object, stickyElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stickyElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollContainer\n                    \n                \n                \n                    \n                        Type :     string | ElementRef | HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        makeSticky\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeSticky()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setHTMLElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHTMLElement(prop: string, value: string | ElementRef | HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prop\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | ElementRef | HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setStylePropertyToElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStylePropertyToElement(nativeEl: HTMLElement, property, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nativeEl\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                property\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _scrollContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        scrollContainer\n                    \n                \n\n                \n                    \n                        getscrollContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:11\n                                \n                            \n\n                \n                    \n                        setscrollContainer(value: string | ElementRef | HTMLElement)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string | ElementRef | HTMLElement\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, Input, Inject, PLATFORM_ID } from '@angular/core'\nimport { DOCUMENT } from '@angular/common'\n\n@Directive({\n  selector: '[sticky]',\n  standalone: true\n})\nexport class StickyDirective implements OnInit {\n\n  @Input()\n  get scrollContainer(): string | ElementRef | HTMLElement {\n    return this._scrollContainer\n  }\n  set scrollContainer(value: string | ElementRef | HTMLElement) {\n    this.setHTMLElement('_scrollContainer', value)\n  }\n  private _scrollContainer!: HTMLElement\n\n  @Input() zIndex = 10\n  @Input() top = 0\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(PLATFORM_ID) private platformId: object,\n    private stickyElement: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.makeSticky()\n  }\n\n  private setHTMLElement(\n    prop: string,\n    value: string | ElementRef | HTMLElement\n  ): void {\n    if (typeof value === 'string') {\n      this['_scrollContainer'] = this.document.getElementById(value)!\n    } else if (value instanceof ElementRef) {\n      this['_scrollContainer'] = value.nativeElement!\n    } else {\n      this['_scrollContainer'] = value\n    }\n  }\n\n  private makeSticky() {\n    const nativeElement: HTMLElement = this.stickyElement.nativeElement\n\n    this.setStylePropertyToElement(nativeElement, 'position', '-webkit-sticky')\n    this.setStylePropertyToElement(nativeElement, 'position', 'sticky')\n    this.setStylePropertyToElement(nativeElement, 'top', `${this.top}px`)\n    this.setStylePropertyToElement(nativeElement, 'zIndex', this.zIndex.toString())\n  }\n\n  private setStylePropertyToElement(\n    nativeEl: HTMLElement,\n    property: keyof CSSStyleDeclaration,\n    value: string\n  ) {\n    nativeEl.style[property.toString() as any] = value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableAction.html":{"url":"interfaces/TableAction.html","title":"interface - TableAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         TableActionEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableActionEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableActionEnum } from \"./tableaction.enum\";\n\nexport interface TableAction {\n    name: string,\n    icon: string,\n    action: TableActionEnum\n}\n\nexport interface TableActionReturn {\n    action: TableActionEnum,\n    id?: string\n    row?: any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableActionReturn.html":{"url":"interfaces/TableActionReturn.html","title":"interface - TableActionReturn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableActionReturn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         TableActionEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableActionEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableActionEnum } from \"./tableaction.enum\";\n\nexport interface TableAction {\n    name: string,\n    icon: string,\n    action: TableActionEnum\n}\n\nexport interface TableActionReturn {\n    action: TableActionEnum,\n    id?: string\n    row?: any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tableoptions.html":{"url":"interfaces/Tableoptions.html","title":"interface - Tableoptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tableoptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableoptions.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            columnFilter\n                                        \n                                \n                                \n                                        \n                                            columnNames\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showPaginator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortColumn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortStart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         TableAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableAction[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnFilter:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         Column[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Column[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCount:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortColumn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortStart:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableAction } from \"./tableaction.model\"\nimport { Column } from \"./column.model\"\n\nexport interface Tableoptions {\n    actions?: TableAction[]\n    columns: Column[]\n    columnFilter: string[]\n    columnNames: string[]\n    showCheckbox?: boolean\n    showCount?: boolean\n    showPaginator?: boolean\n    sortColumn?: string\n    sortStart?: 'asc' | 'desc'\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This pipe truncate the value parameter and returns it!\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, limit: number, startAt: number, ellipsis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        This function returns a value, thats sliced.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nvalue to truncate\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    \nCharlimit\n\n\n                                            \n                                        \n                                        \n                                                startAt\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    \nStartingchar\n\n\n                                            \n                                        \n                                        \n                                                ellipsis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '...'\n                                            \n\n                                            \n                                                    \nendingsigns\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * This pipe truncate the value parameter and returns it!\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * This function returns a value, thats sliced.\n   * @param {any}     value - value to truncate\n   * @param {number}  [limit=20] - Charlimit\n   * @param {number}  [startAt=0] - Startingchar\n   * @param {string}  [ellipsis='...'] - endingsigns\n   */\n  transform(value: any, limit: number = 20, startAt: number = 0, ellipsis: string = '...'): any {\n    if (value.length > 10) {\n      return value.substr(startAt, limit) + ellipsis\n    }\n    return value\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nDocumentation\nExample :{\n    \"include\": [\"src/**/*.ts\"],\n    \"exclude\": [\"src/test.ts\", \"src/**/*.spec.ts\", \"src/app/file-to-exclude.ts\"]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/demo/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts\n            \n            component\n            CircularSpinnerComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n            \n            variable\n            normalizeSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts\n            \n            component\n            IconsComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/icons/icons.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts\n            \n            component\n            ScrollIndicatorComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts\n            \n            directive\n            MobilePaginationDirective\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts\n            \n            directive\n            StickyDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/column.model.ts\n            \n            interface\n            Column\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n            \n            interface\n            TableAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n            \n            interface\n            TableActionReturn\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableoptions.model.ts\n            \n            interface\n            Tableoptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n            \n            component\n            NgxDynamicTableComponent\n            \n                23 %\n                (6/26)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n            \n            variable\n            rowsAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts\n            \n            pipe\n            DynamicPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts\n            \n            pipe\n            IdToValuePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts\n            \n            injectable\n            DynamicTableService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/cdk : ^17.2.0\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/material : 17.2.0\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableActionEnum   (projects/.../tableaction.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-dynamic-table/src/lib/models/tableaction.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TableActionEnum\n                    \n                \n                    \n                        \n                            This enumeration defines all options that will return from table.\n\n                        \n                    \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 SHOW\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 CHECK\n                            \n                        \n                        \n                            \n                                 CHECKALL\n                            \n                        \n                        \n                            \n                                Value : 128\n                            \n                        \n                        \n                            \n                                 QRCODE\n                            \n                        \n                        \n                            \n                                Value : 16\n                            \n                        \n                        \n                            \n                                 TANK\n                            \n                        \n                        \n                            \n                                Value : 32\n                            \n                        \n                        \n                            \n                                 CHECKLIST\n                            \n                        \n                        \n                            \n                                Value : 64\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngxDynamicTable\nThis project was generated with Angular CLI version 17.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (projects/.../app.config.ts)\n                        \n                        \n                            icons   (projects/.../icons.ts)\n                        \n                        \n                            normalizeSize   (projects/.../spinner.ts)\n                        \n                        \n                            rowsAnimation   (projects/.../ngx-dynamic-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/demo/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideRouter(routes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/components/icons/icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    'add'                   : ``,\n    'alert-triangle'        : ``,\n    'edit'                  : ``,\n    'check'                 : ``,\n    'dot'                   : ``,\n    'dots'                  : ``,\n    'dots-horizontal'       : ``,\n    'dots-vertical'         : ``,\n    'eye'                   : ``,\n    'eye-off'               : ``,\n    'filter'                : ``,\n    'list'                  : ``,\n    'list-check'            : ``,\n    'list-details'          : ``,\n    'pdf'                   : ``,\n    'pencil'                : ``,\n    'qrcode'                : ``,\n    'refresh'               : ``,\n    'search'                : ``,\n    'settings'              : ``,\n    'share'                 : ``,\n    'sort-ascending'        : ``,\n    'sort-descending'       : ``,\n    'sort-ascending-letters': ``,\n    'sort-descending-letters': ``,\n    'spinner'               : ``,\n    // 'spinner2'              : ``,\n    'table'                 : ``,\n    'trash'                 : ``, \n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (size: number | string) => (parseFloat(size.toString()).toString() === size.toString() ? `${size}px` : size.toString())\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rowsAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('rowsAnimation', [\n  transition('void => *', [\n    style({ height: '*', opacity: '0', transform: 'translateX(-550px)', 'box-shadow': 'none' }),\n    sequence([\n      animate(\".35s ease\", style({ height: '*', opacity: '.2', transform: 'translateX(0)', 'box-shadow': 'none'  })),\n      animate(\".35s ease\", style({ height: '*', opacity: 1, transform: 'translateX(0)' }))\n    ])\n  ])\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
