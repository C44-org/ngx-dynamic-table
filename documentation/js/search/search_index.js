var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.611,1,1.169]],["body/components/AppComponent.html",[0,0.648,1,1.416,2,1.105,3,0.253,4,0.221,5,0.772,6,0.772,7,0.772,8,0.221,9,1.305,10,0.895,11,1.946,12,3.165,13,0.505,14,1.9,15,1.538,16,2.082,17,0.994,18,1.963,19,1.381,20,1.416,21,2.225,22,3.948,23,1.416,24,3.165,25,1.56,26,2.536,27,2.536,28,2.536,29,0.253,30,0.651,31,1.538,32,1.946,33,3.165,34,3.881,35,3.165,36,3.165,37,4.416,38,2.291,39,0.806,40,3.613,41,2.221,42,2.082,43,1.379,44,1.244,45,2.536,46,1.589,47,1.033,48,0.042,49,1.72,50,1.589,51,2.536,52,1.918,53,1.589,54,0.505,55,0.918,56,0.527,57,0.365,58,0.865,59,2.536,60,3.613,61,2.536,62,2.536,63,0.895,64,1.404,65,0.967,66,1.756,67,2.225,68,1.589,69,1.946,70,2.536,71,1.589,72,3.948,73,1.393,74,1.589,75,2.405,76,1.589,77,1.783,78,2.536,79,0.394,80,2.427,81,2.536,82,2.54,83,2.082,84,2.536,85,2.221,86,1.783,87,2.587,88,2.082,89,2.715,90,1.72,91,2.221,92,1.918,93,2.082,94,2.15,95,2.082,96,2.64,97,3.224,98,3.224,99,3.224,100,3.764,101,2.598,102,4.306,103,2.536,104,0.806,105,2.082,106,2.536,107,2.536,108,5.245,109,2.082,110,2.082,111,1.783,112,2.082,113,2.082,114,2.082,115,2.082,116,2.082,117,2.082,118,2.082,119,1.589,120,0.857,121,0.365,122,1.305,123,3.241,124,0.977,125,1.589,126,0.772,127,1.589,128,1.589,129,0.865,130,1.589,131,0.772,132,0.865,133,1.117,134,1.589,135,0.253,136,0.408,137,2.536,138,1.117,139,1.589,140,1.589,141,1.589,142,1.589,143,1.589,144,0.977,145,1.117,146,1.589,147,3.454,148,1.305,149,1.589,150,2.221,151,4.208,152,1.305,153,1.589,154,1.589,155,1.589,156,1.305,157,1.589,158,1.305,159,2.536,160,1.589,161,1.305,162,1.589,163,1.589,164,1.589,165,1.589,166,1.589,167,1.589,168,1.589,169,3.948,170,1.589,171,3.948,172,1.589,173,1.589,174,1.589,175,1.589,176,1.589,177,1.589,178,1.589,179,1.589,180,1.589,181,1.305,182,1.589,183,1.589,184,1.589,185,3.613,186,2.536,187,2.536,188,2.536,189,2.536,190,2.536,191,2.536,192,2.536,193,2.536,194,2.536,195,2.536,196,3.613,197,3.613,198,2.54,199,2.536,200,2.966,201,2.536,202,2.536,203,0.772,204,1.105,205,1.105,206,0.454,207,1.756,208,0.772,209,0.772,210,0.772,211,0.772,212,0.623,213,0.772,214,0.772,215,0.623,216,0.772,217,0.772,218,0.623,219,0.561,220,0.561,221,0.772,222,0.561,223,0.693,224,0.772,225,0.017,226,0.017]],["title/components/CircularSpinnerComponent.html",[0,0.611,20,1.169]],["body/components/CircularSpinnerComponent.html",[0,0.869,1,1.01,2,1.592,3,0.411,4,0.358,5,1.252,6,1.252,7,1.252,8,0.358,13,0.819,14,2.151,15,1.252,17,1.432,18,1.498,19,1.989,20,1.81,21,2.984,23,1.01,25,2.246,29,0.411,44,1.409,48,0.042,55,0.677,56,0.635,63,1.498,64,1.83,65,1.222,73,1.289,75,1.252,79,0.385,90,1.123,94,1.403,120,0.837,121,0.592,131,1.252,132,2.311,133,2.984,135,0.411,136,0.661,198,2.568,203,1.252,204,1.592,205,1.592,206,0.737,207,2.244,208,1.252,209,1.252,210,2.667,211,1.252,212,1.81,213,1.252,214,1.252,215,1.01,216,1.252,217,1.252,218,2.197,219,0.909,220,0.909,221,1.252,222,0.909,223,1.123,224,1.252,225,0.025,226,0.025,227,2.063,228,0.506,229,2.115,230,3.653,231,3.902,232,2.568,233,4.244,234,3.653,235,1.592,236,2.998,237,3.484,238,2.999,239,2.311,240,3.484,241,3.484,242,3.484,243,1.775,244,4.244,245,4.244,246,0.975,247,2.115,248,5.321,249,2.576,250,2.576,251,2.115,252,2.576,253,2.115,254,2.568,255,2.576,256,2.311,257,2.576,258,2.576,259,2.576,260,1.252,261,2.115,262,2.576,263,4.002,264,2.576,265,2.576,266,2.576,267,2.576,268,2.115,269,1.432,270,2.576,271,2.115,272,2.576,273,2.576,274,3.653,275,2.999,276,2.576,277,2.576,278,2.576,279,2.576,280,2.576,281,1.01,282,3.653,283,2.576,284,3.653,285,2.576,286,2.576,287,2.576,288,2.576]],["title/interfaces/Column.html",[289,1.053,290,1.625]],["body/interfaces/Column.html",[3,0.586,4,0.511,8,0.511,29,0.586,30,1.191,48,0.041,55,0.877,56,0.715,57,1.29,73,2.054,79,0.306,96,2.592,97,3.75,98,3.75,99,3.75,100,4.379,104,1.696,105,3.02,111,3.571,135,0.586,225,0.032,226,0.032,228,0.439,246,1.368,289,1.298,290,2.526,291,2.003,292,3.02,293,4.379,294,3.808,295,5.08,296,5.08]],["title/pipes/DynamicPipe.html",[104,0.948,297,1.834]],["body/pipes/DynamicPipe.html",[3,0.622,4,0.542,8,0.542,10,1.378,13,1.241,17,1.886,18,1.699,39,1.241,44,1.002,47,1.116,48,0.041,54,1.241,55,0.868,56,0.668,57,0.897,65,0.897,79,0.401,104,1.659,120,0.708,121,0.897,135,0.622,136,1.002,225,0.033,226,0.033,228,0.574,269,1.53,297,3.441,298,2.4,299,3.204,300,2.126,301,3.384,302,5.448,303,5.448,304,3.903,305,5.448,306,3.384,307,2.744,308,2.621,309,3.903,310,3.903,311,3.903,312,3.204,313,3.903,314,3.903,315,3.903]],["title/injectables/DynamicTableService.html",[316,1.834,317,1.834]],["body/injectables/DynamicTableService.html",[3,0.535,4,0.466,8,0.466,16,2.756,29,0.535,30,1.123,31,2.664,32,2.992,39,1.39,43,2.12,44,1.433,47,1.251,48,0.041,49,1.906,54,1.39,55,0.697,56,0.615,57,1.005,64,1.639,65,1.184,66,2.505,67,3.42,69,3.287,73,1.717,79,0.472,120,0.793,121,0.771,126,1.631,135,0.535,136,0.862,225,0.03,226,0.03,228,0.675,246,1.118,316,2.689,317,2.689,318,3.357,319,4.647,320,2.756,321,4.865,322,4.865,323,4.232,324,4.232,325,4.374,326,4.374,327,4.374,328,4.374,329,3.357,330,4.374,331,3.357,332,3.591,333,3.357,334,3.357,335,4.374,336,4.374,337,3.357,338,3.357,339,3.357,340,3.357]],["title/components/IconsComponent.html",[0,0.611,212,1.169]],["body/components/IconsComponent.html",[0,1.049,1,1.159,2,1.752,3,0.471,4,0.41,5,1.954,6,1.437,7,1.437,8,0.634,13,0.94,14,2.212,15,1.437,17,1.576,18,1.419,19,1.611,20,1.159,23,1.159,29,0.471,31,1.437,43,1.289,44,1.173,47,0.846,48,0.042,49,1.289,54,1.278,55,0.89,56,0.585,57,0.924,58,1.611,79,0.427,120,0.729,121,0.68,135,0.471,136,0.759,144,2.472,203,1.437,204,1.752,205,2.357,206,0.846,207,2.382,208,1.437,209,1.437,210,1.437,211,1.437,212,2.12,213,1.437,214,1.437,215,1.159,216,1.437,217,1.437,218,1.159,219,1.044,220,1.044,221,1.437,222,1.044,223,1.289,224,1.437,225,0.027,226,0.027,227,2.22,228,0.585,235,1.752,243,1.954,246,1.178,260,1.954,307,2.079,341,2.428,342,2.879,343,3.869,344,5.126,345,5.126,346,3.301,347,4.021,348,3.301,349,2.826,350,4.021,351,4.021,352,2.958,353,3.603,354,4.024,355,4.208,356,2.958,357,4.021,358,4.021,359,4.021,360,4.901,361,2.958,362,1.954,363,2.958,364,2.958,365,2.958,366,2.958,367,2.958,368,2.428]],["title/pipes/IdToValuePipe.html",[104,0.948,369,2.097]],["body/pipes/IdToValuePipe.html",[3,0.63,4,0.548,8,0.548,10,1.395,13,1.256,39,1.256,44,1.015,47,1.13,48,0.041,54,1.256,55,0.836,56,0.471,57,0.908,65,1.206,79,0.404,96,1.92,104,1.541,120,0.717,121,0.908,135,0.63,136,1.015,225,0.033,226,0.033,228,0.579,246,1.33,269,2.057,298,2.43,300,2.152,301,3.409,306,3.409,369,3.409,370,3.981,371,3.981,372,3.244,373,4.85,374,5.471,375,3.952,376,3.952,377,3.244,378,3.952,379,3.952,380,3.952,381,3.952,382,3.952,383,3.952,384,3.952]],["title/directives/MobilePaginationDirective.html",[206,0.853,220,1.053]],["body/directives/MobilePaginationDirective.html",[3,0.215,4,0.187,8,0.187,10,0.784,13,0.429,14,0.87,17,0.87,18,1.377,29,0.523,30,0.57,31,2.8,32,0.829,39,0.706,43,0.588,44,1.382,47,1.347,48,0.042,49,2.199,54,1.153,55,0.578,56,0.602,57,0.947,63,1.781,64,1.419,65,0.896,66,1.375,73,0.999,75,1.079,79,0.451,82,1.561,83,1.107,85,0.829,90,1.58,92,1.079,99,0.948,104,0.429,120,0.513,121,0.31,126,0.655,135,0.215,136,0.727,145,0.948,204,0.588,205,1.233,206,0.635,219,0.476,220,0.784,225,0.015,226,0.015,227,0.655,228,0.646,235,0.968,236,1.365,239,1.541,260,1.594,269,1.109,281,1.75,293,1.107,308,2.911,342,1.209,353,2.899,354,2.323,355,2.693,362,1.896,385,4.446,386,3.807,387,1.107,388,2.83,389,2.83,390,2.22,391,2.83,392,2.83,393,2.83,394,2.83,395,3.28,396,2.22,397,3.28,398,2.22,399,3.28,400,3.28,401,2.22,402,2.83,403,3.28,404,3.28,405,2.22,406,2.83,407,2.83,408,2.83,409,2.83,410,2.83,411,1.823,412,2.83,413,1.349,414,2.693,415,2.22,416,2.22,417,1.349,418,1.349,419,1.349,420,1.349,421,1.349,422,2.693,423,1.349,424,1.349,425,2.22,426,3.901,427,1.349,428,1.349,429,1.349,430,2.22,431,1.349,432,4.022,433,1.349,434,1.349,435,2.22,436,3.28,437,1.349,438,1.349,439,1.349,440,1.349,441,1.349,442,2.22,443,1.349,444,1.349,445,1.349,446,1.349,447,1.349,448,1.823,449,2.22,450,1.107,451,1.349,452,1.349,453,1.349,454,1.349,455,2.83,456,4.464,457,2.22,458,1.349,459,1.349,460,1.349,461,1.349,462,2.306,463,1.349,464,1.349,465,1.349,466,1.349,467,1.107,468,3.28,469,1.349,470,1.107,471,1.561,472,2.977,473,1.349,474,1.349,475,1.349,476,1.349,477,1.349,478,1.349,479,1.349,480,1.349,481,1.349,482,1.349,483,1.349,484,1.349,485,1.349,486,1.349,487,2.693,488,1.823,489,2.306,490,2.22,491,1.349,492,1.349,493,1.349,494,3.95,495,3.382,496,1.349,497,1.823,498,1.349,499,2.306,500,2.83,501,1.349,502,3.28,503,1.349,504,1.349,505,1.349,506,1.349,507,2.22,508,2.693,509,2.693,510,1.349,511,1.349,512,2.22,513,1.349,514,1.823,515,1.989,516,1.349,517,1.349,518,2.22,519,2.83,520,1.349,521,1.349,522,2.22,523,1.349,524,2.22,525,1.349,526,2.22,527,3.385,528,1.107,529,1.349,530,1.349,531,3.28,532,1.823,533,3.202,534,1.349,535,1.823,536,1.349,537,1.349,538,2.83,539,2.693,540,2.83,541,1.107,542,1.349,543,1.349,544,2.977,545,1.349,546,1.349,547,1.349,548,1.823,549,3.28,550,1.107,551,1.349,552,1.561,553,1.823,554,1.823,555,1.107,556,0.734,557,1.349,558,1.349,559,2.323,560,1.107,561,1.349,562,1.349,563,1.349,564,2.22,565,2.22,566,1.349,567,1.989,568,1.349,569,1.349,570,2.22,571,2.22,572,1.349,573,1.107,574,3.28,575,1.349,576,2.22,577,1.349,578,1.349,579,1.349,580,2.22,581,1.349,582,1.349,583,1.349,584,1.349,585,1.349,586,1.349,587,1.349,588,1.349,589,1.349,590,1.349,591,2.83,592,1.349,593,1.349,594,2.22,595,1.823,596,2.22,597,1.349,598,1.349,599,2.22,600,1.349,601,1.349,602,2.22,603,2.83,604,1.349,605,2.22,606,1.349,607,3.626,608,1.349,609,1.107,610,0.948,611,1.349,612,1.349,613,1.349,614,1.349,615,2.22,616,1.349,617,1.349]],["title/components/NgxDynamicTableComponent.html",[0,0.611,23,1.169]],["body/components/NgxDynamicTableComponent.html",[0,0.602,1,0.369,2,0.714,3,0.15,4,0.131,5,0.458,6,0.458,7,0.458,8,0.131,10,0.578,11,1.336,13,0.299,14,1.57,15,0.458,17,0.642,18,0.578,19,0.892,20,0.369,21,1.528,23,1.265,25,1.007,29,0.15,30,0.421,31,1.056,32,1.336,34,3.162,38,1.758,39,0.521,41,1.597,42,1.345,43,0.41,44,1.323,47,1.278,48,0.042,49,1.858,52,0.458,54,1.168,55,0.712,56,0.583,57,0.844,58,1.183,63,1.462,64,1.274,65,0.797,66,1.43,67,0.662,69,2.133,73,0.917,75,1.056,77,1.151,79,0.479,80,1.336,85,1.007,86,1.151,87,0.579,89,2.747,90,1.746,91,1.007,92,1.056,94,0.513,96,1.569,97,1.151,98,1.151,102,1.345,111,0.662,112,1.784,120,0.866,121,0.216,123,3.289,124,3.19,126,0.458,129,1.415,131,0.458,135,0.261,136,0.421,138,0.662,144,1.007,145,0.662,147,0.773,148,0.773,150,2.369,152,0.773,156,0.773,158,0.773,161,0.773,181,1.345,198,1.151,200,0.773,203,0.458,204,0.714,205,0.714,206,0.269,207,1.262,208,0.458,209,0.458,210,0.458,211,0.458,212,1.018,213,0.458,214,0.458,215,1.018,216,0.458,217,0.458,218,0.369,219,0.332,220,0.917,221,0.458,222,0.917,223,0.41,224,0.458,225,0.011,226,0.011,227,0.458,228,0.619,232,1.151,235,0.714,236,2.133,239,0.892,243,0.796,246,1.047,254,1.528,256,0.892,260,1.262,269,1.265,281,1.713,290,1.415,297,2.133,300,1.183,307,0.662,308,1.602,317,1.597,323,1.784,324,1.345,332,1.345,342,0.513,348,0.773,349,1.826,362,1.43,368,0.773,377,0.773,386,0.662,411,1.345,414,2.65,422,2.133,448,2.133,450,0.773,462,1.528,470,2.65,472,0.773,487,2.416,488,0.773,494,2.133,495,2.912,497,0.773,499,1.151,508,1.784,514,1.345,515,1.151,527,3.919,532,3.969,533,3.969,535,0.773,539,1.345,541,0.773,544,3.401,548,1.345,552,1.151,553,1.345,554,1.784,555,0.773,556,0.892,559,1.784,560,0.773,567,1.826,573,1.345,595,0.773,609,2.133,618,0.662,619,1.638,620,1.638,621,1.151,622,1.638,623,2.598,624,1.638,625,2.173,626,2.173,627,2.173,628,2.173,629,2.173,630,2.173,631,2.173,632,1.638,633,2.173,634,2.173,635,2.173,636,2.173,637,2.173,638,1.784,639,2.133,640,1.638,641,1.638,642,1.826,643,2.598,644,2.173,645,4.264,646,1.638,647,0.942,648,1.638,649,1.638,650,0.942,651,0.942,652,1.826,653,0.942,654,0.942,655,0.942,656,1.638,657,0.942,658,0.942,659,1.638,660,0.942,661,1.345,662,1.638,663,1.638,664,0.942,665,1.638,666,0.942,667,1.638,668,0.942,669,1.638,670,0.942,671,0.942,672,0.942,673,1.638,674,0.942,675,0.942,676,0.942,677,0.942,678,1.638,679,0.942,680,0.942,681,0.942,682,1.638,683,1.638,684,2.133,685,0.942,686,0.942,687,2.173,688,0.773,689,1.638,690,0.942,691,0.942,692,0.942,693,0.942,694,1.345,695,1.638,696,0.942,697,0.773,698,0.942,699,0.942,700,0.942,701,1.638,702,0.942,703,0.942,704,0.942,705,1.638,706,0.942,707,0.942,708,0.942,709,0.773,710,0.942,711,0.942,712,0.662,713,0.942,714,0.942,715,0.942,716,0.942,717,0.942,718,0.662,719,0.773,720,0.773,721,1.826,722,2.133,723,0.773,724,0.773,725,1.345,726,1.345,727,1.345,728,1.345,729,1.345,730,0.942,731,0.942,732,2.598,733,1.638,734,0.942,735,0.942,736,0.942,737,0.942,738,0.942,739,0.942,740,0.942,741,0.942,742,0.942,743,0.942,744,0.942,745,0.942,746,0.942,747,0.942,748,0.942,749,1.638,750,1.638,751,1.638,752,0.773,753,0.942,754,0.942,755,0.942,756,0.942,757,1.638,758,0.942,759,0.942,760,0.942,761,0.942,762,0.942,763,1.345,764,2.598,765,0.942,766,0.942,767,0.942,768,0.942,769,0.942,770,0.942,771,0.942,772,0.942,773,3.469,774,0.942,775,0.942,776,1.638,777,0.942,778,1.638,779,0.942,780,0.942,781,1.638,782,0.942,783,0.942,784,0.942,785,0.942,786,3.469,787,0.942,788,0.942,789,1.638,790,2.598,791,1.638,792,1.638,793,3.675,794,2.598,795,2.598,796,1.638,797,1.638,798,1.638,799,1.638,800,1.638,801,1.638,802,1.638,803,5.036,804,1.638,805,0.942,806,2.173,807,2.173,808,0.662,809,0.942,810,2.173,811,2.598,812,3.469,813,2.598,814,0.942,815,0.942,816,2.598,817,4.991,818,1.638,819,4.708,820,2.173,821,2.943,822,0.942,823,0.942,824,0.942,825,1.638,826,0.773,827,1.638,828,3.469,829,0.942,830,1.638,831,0.942,832,1.638,833,2.173,834,0.942,835,0.942,836,0.942,837,0.942,838,0.942,839,1.638,840,3.469,841,2.173,842,0.773,843,1.638,844,0.942,845,0.942,846,1.638,847,1.638,848,0.942,849,0.942,850,0.942,851,0.942,852,0.942,853,0.942,854,0.942,855,0.942,856,0.942,857,0.942,858,0.942,859,0.942,860,0.942,861,0.942,862,0.662,863,0.942,864,0.942,865,0.942,866,0.942,867,0.942,868,0.942,869,0.942,870,0.942,871,1.638,872,2.598,873,0.942,874,0.942,875,1.638,876,0.942,877,0.942,878,0.942,879,0.942]],["title/components/ScrollIndicatorComponent.html",[0,0.611,215,1.169]],["body/components/ScrollIndicatorComponent.html",[0,0.798,1,0.869,2,1.429,3,0.354,4,0.308,5,1.078,6,1.078,7,1.078,8,0.308,10,1.157,11,2.397,13,0.705,14,2.079,15,1.078,17,1.285,18,1.622,19,1.785,20,0.869,23,0.869,25,2.016,29,0.354,30,0.842,39,1.042,41,2.397,43,1.429,44,1.436,47,1.423,48,0.042,49,2.273,54,0.705,55,0.687,56,0.574,57,0.51,63,1.157,64,1.239,65,0.989,69,2.825,73,1.52,75,2.418,79,0.472,120,0.781,121,0.51,126,1.078,131,1.078,135,0.354,136,0.57,138,1.559,203,1.078,204,1.429,205,1.429,206,0.634,207,2.093,208,1.078,209,1.078,210,1.078,211,1.078,212,1.688,213,1.078,214,1.078,215,1.688,216,2.646,217,1.078,218,0.869,219,0.783,220,0.783,221,1.078,222,0.783,223,0.967,224,1.078,225,0.022,226,0.022,227,1.078,228,0.672,232,2.304,235,1.429,243,1.593,256,1.785,268,1.821,281,1.528,342,1.208,362,2.093,471,3.027,499,1.559,552,2.304,610,2.304,688,2.691,712,3.959,752,2.691,808,2.304,880,4.623,881,1.821,882,3.278,883,3.899,884,3.899,885,3.899,886,3.278,887,3.899,888,3.899,889,4.307,890,5.216,891,4.307,892,4.307,893,4.307,894,3.899,895,3.899,896,3.278,897,3.899,898,3.899,899,2.218,900,3.278,901,2.218,902,2.218,903,3.278,904,3.278,905,2.218,906,2.218,907,2.218,908,3.278,909,2.218,910,2.218,911,2.218,912,2.218,913,2.218,914,2.218,915,2.218,916,2.218,917,3.278,918,2.218,919,2.218,920,4.307,921,2.218,922,3.899,923,4.307,924,3.278,925,3.278,926,3.278,927,3.278]],["title/components/SpinnerComponent.html",[0,0.611,218,1.169]],["body/components/SpinnerComponent.html",[0,0.824,1,0.919,2,1.488,3,0.374,4,0.326,5,1.14,6,1.14,7,1.14,8,0.326,14,2.034,15,1.14,18,1.205,20,0.919,23,0.919,29,0.374,39,1.086,44,1.358,47,0.671,48,0.042,55,0.642,56,0.678,58,1.277,63,1.659,64,1.865,65,1.192,73,1.205,75,1.66,79,0.454,120,0.425,121,0.539,132,2.927,135,0.544,136,1.034,203,1.14,204,1.488,205,1.488,206,0.671,207,2.15,208,1.14,209,1.14,210,1.14,211,1.14,212,0.919,213,1.14,214,1.14,215,0.919,216,1.14,217,1.14,218,1.734,219,0.828,220,0.828,221,1.14,222,0.828,223,1.022,224,1.14,225,0.023,226,0.023,227,1.957,228,0.641,231,4.036,235,1.488,236,3.191,237,3.859,238,3.306,239,2.672,240,3.859,241,3.859,242,3.859,243,1.66,246,1.288,247,2.804,251,2.804,253,2.804,254,2.401,256,1.86,260,1.66,261,2.804,263,2.804,269,0.919,271,1.926,308,1.277,362,2.571,721,1.649,842,1.926,928,1.649,929,4.027,930,3.415,931,3.415,932,3.415,933,3.415,934,3.415,935,4.027,936,2.346,937,2.346,938,2.346,939,2.346,940,2.346,941,2.346,942,2.346,943,2.346,944,2.346,945,2.346,946,3.415,947,3.415,948,3.415,949,1.649,950,1.926,951,2.804,952,1.926,953,1.926,954,2.346,955,2.346,956,3.415,957,1.926,958,3.415,959,2.346]],["title/directives/StickyDirective.html",[206,0.853,222,1.053]],["body/directives/StickyDirective.html",[3,0.4,4,0.348,8,0.348,10,1.265,11,2.572,13,0.797,14,1.405,17,1.405,18,1.265,29,0.4,30,0.92,31,2.772,39,1.139,41,2.806,43,1.562,44,1.418,47,1.38,48,0.042,49,2.252,54,1.45,55,0.727,56,0.63,57,1.048,63,1.265,64,1.139,65,1.302,77,2.94,79,0.465,120,0.65,121,0.576,131,1.219,135,0.4,136,0.644,206,1.025,219,0.885,222,1.265,223,1.989,225,0.024,226,0.024,228,0.665,235,1.562,243,1.742,246,1.311,269,0.983,281,1.405,308,1.366,342,1.366,353,3.955,362,2.217,432,4.653,528,2.059,550,2.943,610,3.208,652,2.52,953,3.433,957,2.059,960,2.059,961,4.182,962,4.563,963,4.182,964,4.182,965,4.826,966,4.563,967,2.509,968,5.02,969,4.182,970,4.182,971,3.585,972,3.585,973,2.509,974,2.509,975,2.509,976,2.509,977,2.509,978,3.585,979,2.509,980,2.509,981,3.585,982,2.509,983,2.509,984,2.509,985,2.509,986,2.509,987,2.509,988,2.509,989,2.509,990,2.509,991,2.509,992,2.509,993,2.509,994,4.182,995,2.509,996,2.509,997,2.509,998,2.509,999,4.563,1000,2.509,1001,2.509,1002,2.509,1003,2.509,1004,2.509,1005,2.509]],["title/interfaces/TableAction.html",[289,1.053,1006,1.625]],["body/interfaces/TableAction.html",[3,0.663,4,0.577,8,0.577,29,0.663,30,1.284,48,0.041,52,2.02,55,0.887,56,0.64,79,0.346,87,3.423,89,3.502,96,2.02,120,0.754,129,3.101,135,0.797,150,2.556,225,0.034,226,0.034,228,0.496,246,1.344,289,1.765,291,2.264,1006,2.723,1007,2.923,1008,3.413]],["title/interfaces/TableActionReturn.html",[52,1.45,289,1.053]],["body/interfaces/TableActionReturn.html",[3,0.66,4,0.574,8,0.574,29,0.66,30,1.281,48,0.041,52,2.424,55,0.66,56,0.639,57,1.277,79,0.345,87,2.545,89,3.498,96,2.701,120,0.751,129,3.098,135,0.795,150,3.418,225,0.034,226,0.034,228,0.494,246,1.307,289,1.761,291,2.254,1006,2.254,1007,2.91,1008,3.398]],["title/interfaces/Tableoptions.html",[38,1.625,289,1.053]],["body/interfaces/Tableoptions.html",[3,0.579,4,0.504,8,0.504,29,0.579,30,1.181,38,2.505,48,0.041,56,0.693,57,1.359,73,2.049,79,0.302,85,3.264,95,4.358,109,4.358,110,4.358,113,4.358,114,4.358,115,4.358,116,4.358,117,4.358,118,4.145,120,0.834,135,0.579,225,0.031,226,0.031,228,0.433,246,1.334,289,1.281,290,2.891,291,1.977,1006,2.891,1009,2.98,1010,5.049,1011,3.63,1012,3.63]],["title/pipes/TruncatePipe.html",[104,0.948,1013,2.097]],["body/pipes/TruncatePipe.html",[3,0.563,4,0.49,8,0.49,10,1.246,13,1.122,39,1.122,44,0.906,47,1.553,48,0.042,54,1.122,55,0.794,56,0.421,57,0.811,58,2.46,63,2.019,64,1.122,65,1.338,79,0.376,104,1.67,120,0.64,121,0.811,135,0.563,136,0.906,144,3.23,225,0.031,226,0.031,228,0.539,246,1.207,269,1.771,281,1.771,298,2.17,300,1.922,301,3.176,306,3.176,652,2.481,661,3.709,684,3.709,1013,3.176,1014,2.898,1015,5.555,1016,4.518,1017,5.254,1018,4.983,1019,5.431,1020,3.53,1021,4.518,1022,4.518,1023,4.518,1024,4.518,1025,4.518,1026,3.53,1027,3.53,1028,3.53,1029,3.53]],["title/changelog.html",[1030,2.056,1031,2.056,1032,2.056]],["body/changelog.html",[48,0.039,225,0.036,226,0.036,349,3.246,621,3.246,1032,3.791,1033,4.618,1034,4.618,1035,4.618,1036,4.618,1037,4.618,1038,4.618,1039,4.618]],["title/coverage.html",[1040,3.32]],["body/coverage.html",[0,1.116,1,1.288,8,0.456,9,2.699,20,1.288,23,1.288,38,1.79,48,0.041,52,1.598,56,0.392,66,1.598,79,0.5,80,2.021,104,1.531,124,2.653,132,2.623,133,2.311,206,1.234,212,1.288,215,1.288,218,1.288,220,1.16,222,1.16,225,0.029,226,0.029,228,0.713,229,2.699,256,2.623,281,2.31,289,1.805,290,1.79,292,2.699,297,2.021,299,2.699,316,2.021,317,2.021,319,2.699,320,2.699,341,2.699,343,2.311,369,2.311,370,2.699,371,2.699,372,2.699,385,2.699,386,2.311,387,2.699,618,3.033,621,2.311,712,2.311,718,2.311,880,2.699,881,2.699,928,3.033,949,2.311,960,2.699,1006,1.79,1007,3.033,1009,2.699,1013,2.311,1014,2.699,1040,2.699,1041,3.287,1042,3.287,1043,3.287,1044,3.287,1045,2.699,1046,5.114,1047,2.699,1048,5.45,1049,3.287,1050,3.287,1051,3.287,1052,3.287,1053,2.699,1054,3.287,1055,3.287,1056,4.816,1057,4.315,1058,3.287,1059,3.287,1060,3.287,1061,3.287,1062,3.287]],["title/dependencies.html",[1063,1.761,1064,2.939]],["body/dependencies.html",[48,0.041,79,0.358,121,0.987,122,3.528,126,2.088,131,2.088,225,0.035,226,0.035,697,3.528,709,3.528,1064,3.528,1065,4.925,1066,4.297,1067,4.297,1068,4.297,1069,5.101,1070,5.101,1071,4.297,1072,4.297,1073,4.297,1074,4.297,1075,4.297]],["title/miscellaneous/enumerations.html",[1076,1.54,1077,2.939]],["body/miscellaneous/enumerations.html",[29,0.685,48,0.041,65,1.363,79,0.358,82,3.021,86,3.021,90,1.873,91,2.642,92,2.088,94,2.34,129,2.778,225,0.035,226,0.035,228,0.513,556,2.34,567,3.021,639,3.528,642,3.021,808,3.021,826,3.528,1076,2.642,1077,3.528,1078,4.297,1079,4.297,1080,4.297,1081,3.528,1082,4.297,1083,4.297,1084,4.297,1085,4.297]],["title/index.html",[29,0.399,1030,2.056,1031,2.056]],["body/index.html",[0,1.055,4,0.527,10,1.339,48,0.032,55,0.605,66,1.844,225,0.032,226,0.032,275,4.23,346,4.23,462,2.668,467,4.428,471,2.668,489,2.668,515,2.668,556,2.067,862,2.668,1063,2.668,1065,3.116,1086,3.795,1087,4.73,1088,3.795,1089,5.153,1090,3.795,1091,4.73,1092,5.55,1093,5.74,1094,3.795,1095,3.795,1096,3.795,1097,3.795,1098,3.795,1099,3.795,1100,3.795,1101,3.795,1102,3.795,1103,3.795,1104,5.153,1105,3.795,1106,3.795,1107,3.795,1108,3.795,1109,3.795,1110,4.73,1111,4.73,1112,5.394,1113,3.795,1114,4.73,1115,4.73,1116,3.795,1117,5.659,1118,3.795,1119,3.795,1120,3.795,1121,4.73,1122,3.795,1123,3.795,1124,3.795,1125,3.795,1126,5.153,1127,3.795,1128,3.795,1129,3.795,1130,2.668,1131,3.795]],["title/modules.html",[1132,3.32]],["body/modules.html",[48,0.037,225,0.037,226,0.037,1132,3.894]],["title/overview.html",[1130,2.843]],["body/overview.html",[2,2.017,48,0.036,90,2.017,92,2.25,94,2.521,101,3.8,219,1.634,225,0.036,226,0.036,291,2.521,298,2.846,316,2.846,1130,3.254,1133,4.629]],["title/properties.html",[30,0.919,1063,1.761]],["body/properties.html",[30,1.209,48,0.038,225,0.037,226,0.037,862,3.31,1134,4.709]],["title/miscellaneous/variables.html",[1076,1.54,1135,2.939]],["body/miscellaneous/variables.html",[29,0.497,48,0.042,56,0.56,63,1.1,64,1.591,65,1.15,79,0.435,80,1.916,88,2.558,90,1.358,91,1.916,92,1.514,93,3.419,124,1.916,132,1.697,225,0.028,226,0.028,228,0.56,231,2.191,239,1.697,246,0.716,260,2.28,281,1.221,294,2.558,300,2.554,312,2.558,343,2.928,489,2.191,495,2.928,509,3.851,556,2.268,618,2.928,638,4.11,642,2.191,694,2.558,718,2.928,719,2.558,720,2.558,721,3.297,722,3.851,723,2.558,724,2.558,725,3.419,726,3.419,727,3.419,728,3.419,729,3.419,763,2.558,928,2.191,949,2.928,950,2.558,951,3.419,952,2.558,1045,2.558,1047,3.419,1053,2.558,1076,1.916,1081,2.558,1135,2.558,1136,3.116,1137,3.116,1138,3.116,1139,3.116,1140,3.116,1141,3.116,1142,3.116,1143,3.116,1144,3.116,1145,3.116,1146,3.116,1147,3.116,1148,4.691,1149,3.116,1150,3.116,1151,3.116,1152,3.116,1153,3.116,1154,3.116,1155,4.165,1156,4.165,1157,4.165,1158,3.116]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1134,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":848,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["0.5",{"_index":853,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["0/1",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["00:00:59",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["01.01.2023",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["01.01.2024",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["01.02.2023",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["03.02.2023",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["037bfc",{"_index":247,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["04.02.2023",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":652,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["100",{"_index":256,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["100ms",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["128",{"_index":1080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["12px",{"_index":863,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["131",{"_index":871,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["132",{"_index":288,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["134",{"_index":286,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["140",{"_index":276,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["14px",{"_index":555,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["15",{"_index":683,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["150ms",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":868,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["16",{"_index":808,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["160",{"_index":261,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["17.2.0",{"_index":1065,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["174",{"_index":287,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["18px",{"_index":608,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["2",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":684,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["2000",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["3/26",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["306",{"_index":283,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["32",{"_index":1083,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["34px",{"_index":843,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["3px",{"_index":876,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["4",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["40",{"_index":285,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["4px",{"_index":839,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["5",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["50",{"_index":254,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{}}}],["550px",{"_index":724,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":1133,"title":{},"body":{"overview.html":{}}}],["6193a1",{"_index":851,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["64",{"_index":1085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6px",{"_index":611,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["7.8.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":826,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["8/9",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":596,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["9",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["919191",{"_index":553,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["9px",{"_index":872,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["_changepaginator",{"_index":633,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["_data",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["_dynamictableservice",{"_index":649,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["_iseditable",{"_index":321,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["_paginator",{"_index":646,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["_paginator(paginator",{"_index":731,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["_scrollcontainer",{"_index":961,"title":{},"body":{"directives/StickyDirective.html":{}}}],["_textfilter",{"_index":322,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["a:focus",{"_index":878,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["a:hover",{"_index":873,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["absolute",{"_index":551,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["abstract",{"_index":929,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["accessors",{"_index":243,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["action",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["action.name",{"_index":796,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["actioncontainer",{"_index":564,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["actions",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/Tableoptions.html":{}}}],["active",{"_index":490,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["actual_component",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["add",{"_index":489,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["afterviewinit",{"_index":388,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["alert",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":844,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["angular",{"_index":275,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":697,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":709,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["angular/material/menu",{"_index":710,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["angular/material/paginator",{"_index":450,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["angular/material/sort",{"_index":702,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["angular/material/table",{"_index":706,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["angular/platform",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":693,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["animate(\".35s",{"_index":727,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["animation",{"_index":273,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["app.component.html",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcustomlength",{"_index":406,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["append",{"_index":612,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["application",{"_index":1098,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":803,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["args",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["array",{"_index":590,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["arrow",{"_index":560,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["artifacts",{"_index":1106,"title":{},"body":{"index.html":{}}}],["asc",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["ascending",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":815,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["automatically",{"_index":1099,"title":{},"body":{"index.html":{}}}],["b",{"_index":823,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["b6b6b6",{"_index":850,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["back",{"_index":461,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["background",{"_index":840,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["before",{"_index":457,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["behavior",{"_index":925,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["behaviorsubject",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/NgxDynamicTableComponent.html":{}}}],["behaviorsubject(false",{"_index":332,"title":{},"body":{"injectables/DynamicTableService.html":{},"components/NgxDynamicTableComponent.html":{}}}],["belongs",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["berlin",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["beschreibung",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["bezeichnung",{"_index":379,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["bg",{"_index":812,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["block",{"_index":512,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["boolean",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/Tableoptions.html":{}}}],["border",{"_index":819,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["borderline",{"_index":821,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["box",{"_index":725,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["browser",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["bubble",{"_index":508,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["bubble:hover",{"_index":849,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["bubble__active",{"_index":488,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["bubble__disabled",{"_index":852,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["bubblebutton",{"_index":591,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubblecontainerref",{"_index":391,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["bubbles",{"_index":568,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["build",{"_index":467,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"index.html":{}}}],["buildbuttons",{"_index":395,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["button",{"_index":472,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["button.mat",{"_index":538,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["button:focus",{"_index":879,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["button:hover",{"_index":874,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["buttons",{"_index":456,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["buttonsref",{"_index":392,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["buttontogglegroup",{"_index":781,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["capabilities",{"_index":1124,"title":{},"body":{"index.html":{}}}],["case",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["cell",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/NgxDynamicTableComponent.html":{}}}],["center",{"_index":811,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["change",{"_index":471,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"index.html":{}}}],["change(value",{"_index":915,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["changeactivebuttonstyles",{"_index":396,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changeactivebuttonstyles(previousindex",{"_index":425,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changelog",{"_index":1032,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changepaginator",{"_index":634,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["changes",{"_index":438,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["changes?.['appcustomlength']?.firstchange",{"_index":454,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["charlimit",{"_index":1023,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["check",{"_index":556,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["check(row",{"_index":656,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["checkall",{"_index":639,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/NgxDynamicTableComponent.html":{}}}],["checked",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["checklist",{"_index":1084,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["checkscrollablecontent",{"_index":889,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["choice",{"_index":1120,"title":{},"body":{"index.html":{}}}],["circular",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["circularspinnercomponent",{"_index":20,"title":{"components/CircularSpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["class",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["classes",{"_index":348,"title":{},"body":{"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["cli",{"_index":1089,"title":{},"body":{"index.html":{}}}],["click",{"_index":599,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["clickaction",{"_index":640,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["clickaction(id",{"_index":659,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["code",{"_index":1102,"title":{},"body":{"index.html":{}}}],["color",{"_index":236,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{}}}],["column",{"_index":290,"title":{"interfaces/Column.html":{}},"body":{"interfaces/Column.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["column.header",{"_index":792,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["column.model",{"_index":1012,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["column.pipe.args",{"_index":795,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["column.pipe.name",{"_index":794,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["columnfilter",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["columnnames",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["columns",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["command",{"_index":1121,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["compodoc",{"_index":620,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["components/icons/icons.component",{"_index":717,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["components/scroll",{"_index":711,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["console.log('check",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('data",{"_index":736,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["console.log('default",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('delete",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('destroy",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('edit",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('kat",{"_index":376,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["console.log('refresh",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('show",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('update",{"_index":919,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["console.log(err",{"_index":772,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["const",{"_index":308,"title":{},"body":{"pipes/DynamicPipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["constructor(@host",{"_index":453,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["constructor(_dynamictableservice",{"_index":647,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["constructor(document",{"_index":967,"title":{},"body":{"directives/StickyDirective.html":{}}}],["constructor(element",{"_index":352,"title":{},"body":{"components/IconsComponent.html":{}}}],["constructor(matpag",{"_index":413,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["constructor(private",{"_index":307,"title":{},"body":{"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["container",{"_index":573,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["content",{"_index":845,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["count",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["coverage",{"_index":1040,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":567,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createbubbledivref",{"_index":397,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createbutton",{"_index":398,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createbutton(i",{"_index":430,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["createdotselement",{"_index":399,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["creates",{"_index":357,"title":{},"body":{"components/IconsComponent.html":{}}}],["creating",{"_index":458,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["cssstyledeclaration",{"_index":1004,"title":{},"body":{"directives/StickyDirective.html":{}}}],["curr",{"_index":480,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["current",{"_index":869,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["currentactive",{"_index":483,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["currently",{"_index":547,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["cursor",{"_index":846,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["d4d4d4",{"_index":875,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["dark",{"_index":828,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["darker",{"_index":818,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["dasharray",{"_index":284,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["dashoffset",{"_index":282,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["dashstyle",{"_index":245,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["data",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["data.length",{"_index":737,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["data[element].trim().tolowercase().includes(filter",{"_index":766,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["datasource",{"_index":635,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["date",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["date(item.date",{"_index":760,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["daten",{"_index":800,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["datepipe",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["datetime",{"_index":295,"title":{},"body":{"interfaces/Column.html":{}}}],["datum/zeit",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["dd.mm.yyyy",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["decoration",{"_index":877,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["decorators",{"_index":688,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["delete",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["delete(row",{"_index":665,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["demonstrate",{"_index":619,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["depended",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":1064,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desc",{"_index":1010,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["descending",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"pipes/TruncatePipe.html":{}}}],["destroy",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["details",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":1095,"title":{},"body":{"index.html":{}}}],["development",{"_index":1090,"title":{},"body":{"index.html":{}}}],["die",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["dies",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["dieser",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":206,"title":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"coverage.html":{}}}],["directives",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"overview.html":{}}}],["directives/mobile",{"_index":715,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["directives/sticky/sticky.directive",{"_index":714,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1105,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1109,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":293,"title":{},"body":{"interfaces/Column.html":{},"directives/MobilePaginationDirective.html":{}}}],["display",{"_index":494,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["displayed",{"_index":548,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["displays",{"_index":622,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["dist",{"_index":1108,"title":{},"body":{"index.html":{}}}],["distance",{"_index":894,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["div.mat",{"_index":566,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["document",{"_index":968,"title":{},"body":{"directives/StickyDirective.html":{}}}],["documentation",{"_index":621,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["dot",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dots",{"_index":509,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"miscellaneous/variables.html":{}}}],["dotsel",{"_index":603,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotsendref",{"_index":393,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotsstartref",{"_index":394,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dotstext",{"_index":605,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["dresden",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dynamicpipe",{"_index":297,"title":{"pipes/DynamicPipe.html":{}},"body":{"pipes/DynamicPipe.html":{},"components/NgxDynamicTableComponent.html":{},"coverage.html":{}}}],["dynamictableservice",{"_index":317,"title":{"injectables/DynamicTableService.html":{}},"body":{"injectables/DynamicTableService.html":{},"components/NgxDynamicTableComponent.html":{},"coverage.html":{}}}],["e.pageindex",{"_index":476,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["e.previouspageindex",{"_index":475,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["e2e",{"_index":1118,"title":{},"body":{"index.html":{}}}],["ease",{"_index":728,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["edit(row",{"_index":667,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["element",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["element[column.cell",{"_index":793,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["elemente",{"_index":740,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["elementref",{"_index":353,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["elements",{"_index":546,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ellipsis",{"_index":1019,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["empty",{"_index":588,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["enabled",{"_index":237,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["encapsulation",{"_index":350,"title":{},"body":{"components/IconsComponent.html":{}}}],["end",{"_index":1117,"title":{},"body":{"index.html":{}}}],["enddots",{"_index":502,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endindex",{"_index":778,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["ending",{"_index":523,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endingindex",{"_index":525,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["endingsigns",{"_index":1025,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["enum",{"_index":785,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["enumerations",{"_index":1077,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["error(err",{"_index":771,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["es",{"_index":797,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["event",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["event.action",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["event.row",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitter",{"_index":422,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["events",{"_index":854,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["example",{"_index":349,"title":{},"body":{"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"changelog.html":{}}}],["except",{"_index":586,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["exclude",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["exclude.ts",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["execute",{"_index":1114,"title":{},"body":{"index.html":{}}}],["export",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["extends",{"_index":230,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["eye",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["family",{"_index":864,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["field",{"_index":830,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["files",{"_index":1101,"title":{},"body":{"index.html":{}}}],["fill",{"_index":837,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["filter",{"_index":763,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["filtertext",{"_index":675,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["filtertext.trim().tolowercase",{"_index":784,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["first",{"_index":515,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"index.html":{}}}],["firstbutton",{"_index":503,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["flex",{"_index":514,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["following",{"_index":857,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["font",{"_index":554,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["formsmodule",{"_index":625,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["function",{"_index":661,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["further",{"_index":1125,"title":{},"body":{"index.html":{}}}],["gap",{"_index":838,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["geladen",{"_index":801,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["generate",{"_index":1104,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1088,"title":{},"body":{"index.html":{}}}],["getdashstyle",{"_index":266,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["getrangelabel",{"_index":636,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["getscrollcontainer",{"_index":983,"title":{},"body":{"directives/StickyDirective.html":{}}}],["getstrokewidth",{"_index":264,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["getsvgstyle",{"_index":944,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["getting",{"_index":1030,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["go",{"_index":1128,"title":{},"body":{"index.html":{}}}],["greeting",{"_index":623,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["hamburg",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["hardcoded",{"_index":758,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["header",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/NgxDynamicTableComponent.html":{}}}],["height",{"_index":721,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1126,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["hidden",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"directives/MobilePaginationDirective.html":{}}}],["hide",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["hidedefaultarrows",{"_index":407,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["horizontal",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":447,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["hostlistener",{"_index":914,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener(\"window:resize",{"_index":918,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener('window:resize",{"_index":907,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlistener('window:scroll",{"_index":908,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["hostlisteners",{"_index":896,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["howmanydisplayedel",{"_index":534,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["html",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["htmlelement",{"_index":432,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["http://localhost:4200",{"_index":1097,"title":{},"body":{"index.html":{}}}],["icon",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["iconname",{"_index":360,"title":{},"body":{"components/IconsComponent.html":{}}}],["icons",{"_index":343,"title":{},"body":{"components/IconsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["icons.ts",{"_index":344,"title":{},"body":{"components/IconsComponent.html":{}}}],["icons/icons.component",{"_index":268,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["icons[iconname",{"_index":366,"title":{},"body":{"components/IconsComponent.html":{}}}],["iconscomponent",{"_index":212,"title":{"components/IconsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["id",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/IdToValuePipe.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["identifier",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["idtovalue",{"_index":373,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["idtovaluepipe",{"_index":369,"title":{"pipes/IdToValuePipe.html":{}},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["ignore",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":933,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["implemented",{"_index":947,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["important",{"_index":817,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["include",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexof(id",{"_index":782,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["indicator",{"_index":882,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["indicator.component",{"_index":713,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["indicator.component.html",{"_index":886,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.sass",{"_index":885,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":881,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["indicator.component.ts:18",{"_index":902,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:19",{"_index":901,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:20",{"_index":900,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:28",{"_index":912,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:29",{"_index":911,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:31",{"_index":903,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:35",{"_index":904,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:39",{"_index":899,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":906,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:53",{"_index":905,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:63",{"_index":910,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator.component.ts:72",{"_index":909,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["indicator/scroll",{"_index":712,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["infinite",{"_index":279,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["inherited",{"_index":248,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["inject",{"_index":986,"title":{},"body":{"directives/StickyDirective.html":{}}}],["inject(document",{"_index":991,"title":{},"body":{"directives/StickyDirective.html":{}}}],["inject(platform_id",{"_index":992,"title":{},"body":{"directives/StickyDirective.html":{}}}],["injectable",{"_index":316,"title":{"injectables/DynamicTableService.html":{}},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":318,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["injector",{"_index":305,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injector.create",{"_index":309,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["injector.get(requiredpipe",{"_index":314,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["innerhtml",{"_index":345,"title":{},"body":{"components/IconsComponent.html":{}}}],["input",{"_index":362,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["inputs",{"_index":235,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["instance",{"_index":358,"title":{},"body":{"components/IconsComponent.html":{}}}],["instanceof",{"_index":996,"title":{},"body":{"directives/StickyDirective.html":{}}}],["interface",{"_index":289,"title":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{}},"body":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":291,"title":{},"body":{"interfaces/Column.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"overview.html":{}}}],["internal",{"_index":860,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["iseditable",{"_index":323,"title":{},"body":{"injectables/DynamicTableService.html":{},"components/NgxDynamicTableComponent.html":{}}}],["iseditableintable",{"_index":644,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["isscrollatbottom",{"_index":887,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["isscrollindicatorshown",{"_index":888,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["isspinnervisible",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["issticky",{"_index":641,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["issticky(id",{"_index":669,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["ist",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["isvisible",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":377,"title":{},"body":{"pipes/IdToValuePipe.html":{},"components/NgxDynamicTableComponent.html":{}}}],["item.bezeichnung",{"_index":382,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.hasownproperty('bezeichnung",{"_index":381,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.hasownproperty('item",{"_index":383,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.id",{"_index":380,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item.item",{"_index":384,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["item[property",{"_index":761,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["items",{"_index":541,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["itemsperpage",{"_index":530,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["json",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["json.parse(this.styles",{"_index":959,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["justify",{"_index":810,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["karma",{"_index":1116,"title":{},"body":{"index.html":{}}}],["kat",{"_index":374,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["kat.find((item",{"_index":378,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["keine",{"_index":799,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["keyframes",{"_index":280,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["keyof",{"_index":1003,"title":{},"body":{"directives/StickyDirective.html":{}}}],["klarmeldung",{"_index":768,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["konnten",{"_index":798,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["köln",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["label",{"_index":536,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["last",{"_index":507,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["lastbutton",{"_index":505,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["lato",{"_index":865,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["left",{"_index":552,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["legend",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["length",{"_index":773,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["letters",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["light",{"_index":829,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["limit",{"_index":1017,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["limit=20",{"_index":1026,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["linear",{"_index":278,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["list",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":294,"title":{},"body":{"interfaces/Column.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["local",{"_index":296,"title":{},"body":{"interfaces/Column.html":{}}}],["longer",{"_index":861,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["m",{"_index":824,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["makesticky",{"_index":962,"title":{},"body":{"directives/StickyDirective.html":{}}}],["many",{"_index":545,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["map",{"_index":451,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["map((e",{"_index":474,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["margin",{"_index":595,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["markus",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["martin",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":532,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["match",{"_index":764,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["matching",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil",{"_index":577,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["math.ceil(length",{"_index":777,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["math.max(length",{"_index":775,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["math.min(startindex",{"_index":779,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["matmenumodule",{"_index":626,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["matpag",{"_index":416,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["matpaginator",{"_index":414,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["matpaginatormodule",{"_index":627,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["matsort",{"_index":687,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["matsortable",{"_index":701,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["matsortmodule",{"_index":628,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["mattabledatasource",{"_index":705,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["mattablemodule",{"_index":629,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["mdc",{"_index":533,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["memberof",{"_index":368,"title":{},"body":{"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["message",{"_index":624,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["method",{"_index":946,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["migration",{"_index":856,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["minimum",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1076,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobilepaginationdirective",{"_index":220,"title":{"directives/MobilePaginationDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["models/tableaction.enum",{"_index":707,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["models/tableaction.model",{"_index":700,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["models/tableoptions.model",{"_index":699,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["modules",{"_index":1132,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1127,"title":{},"body":{"index.html":{}}}],["mx",{"_index":814,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["münchen",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["n",{"_index":496,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["name(iconname",{"_index":364,"title":{},"body":{"components/IconsComponent.html":{}}}],["nativeel",{"_index":981,"title":{},"body":{"directives/StickyDirective.html":{}}}],["nativeel.style[property.tostring",{"_index":1005,"title":{},"body":{"directives/StickyDirective.html":{}}}],["nativeelement",{"_index":528,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["nativeelement.queryselector",{"_index":531,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["navigate",{"_index":1096,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":539,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["need",{"_index":1122,"title":{},"body":{"index.html":{}}}],["needed",{"_index":585,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["neededbuttons",{"_index":576,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["new",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"coverage.html":{},"index.html":{}}}],["newindex",{"_index":426,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["next",{"_index":499,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["nextbuttondefault",{"_index":540,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ng",{"_index":1093,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":400,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngif",{"_index":883,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["ngonchanges",{"_index":401,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngonchanges(changes",{"_index":435,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ngondestroy",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["ngstyle",{"_index":884,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["ngxdynamictable",{"_index":1086,"title":{},"body":{"index.html":{}}}],["ngxdynamictablecomponent",{"_index":23,"title":{"components/NgxDynamicTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["none",{"_index":495,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["normalizesize",{"_index":949,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalizesize(this.size",{"_index":956,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["notched",{"_index":833,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["nr",{"_index":789,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["null",{"_index":367,"title":{},"body":{"components/IconsComponent.html":{}}}],["number",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["nxt",{"_index":487,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["nxtmobilepagination",{"_index":390,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["nxtmobilepagination]'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["nächste",{"_index":744,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["object",{"_index":953,"title":{},"body":{"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["observable",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["offset",{"_index":805,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["onchanges",{"_index":389,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ondestroy",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["one",{"_index":580,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["ones",{"_index":459,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["onresize",{"_index":891,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["opacity",{"_index":722,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{}}}],["options",{"_index":931,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["ort",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":1129,"title":{},"body":{"index.html":{}}}],["outline",{"_index":806,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["outline__leading",{"_index":834,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["outline__notch",{"_index":835,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["outline__trailing",{"_index":836,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["outlined",{"_index":831,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["output",{"_index":448,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["outputs",{"_index":411,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["overflow",{"_index":954,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["overview",{"_index":1130,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":825,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["package",{"_index":1063,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":609,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["page",{"_index":462,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"index.html":{}}}],["pageindexchangeemitter",{"_index":412,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagesize",{"_index":645,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["pagesizeoptions",{"_index":637,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["pagination",{"_index":470,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["pagination.directive",{"_index":716,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["pagination.directive.ts",{"_index":387,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["pagination.directive.ts:10",{"_index":423,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:11",{"_index":420,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:112",{"_index":441,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:12",{"_index":421,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:13",{"_index":419,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:14",{"_index":417,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:143",{"_index":429,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:15",{"_index":418,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:163",{"_index":424,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:17",{"_index":445,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:18",{"_index":446,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:19",{"_index":444,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:195",{"_index":439,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:20",{"_index":415,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:204",{"_index":431,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:227",{"_index":433,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:24",{"_index":437,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:249",{"_index":443,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:34",{"_index":434,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:39",{"_index":440,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination.directive.ts:55",{"_index":427,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pagination/mobile",{"_index":386,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"coverage.html":{}}}],["paginator",{"_index":527,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["param",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"pipes/TruncatePipe.html":{}}}],["parameter",{"_index":1016,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["parent",{"_index":310,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["parsefloat(size.tostring()).tostring",{"_index":950,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":542,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["pipe",{"_index":104,"title":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["pipe.transform(value",{"_index":315,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["pipeargs",{"_index":303,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["pipes",{"_index":298,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{},"overview.html":{}}}],["pipes/dynamic/dynamic.pipe",{"_index":708,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["pipetransform",{"_index":306,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["placeholder",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["platform",{"_index":1119,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":987,"title":{},"body":{"directives/StickyDirective.html":{}}}],["platformid",{"_index":969,"title":{},"body":{"directives/StickyDirective.html":{}}}],["pointer",{"_index":847,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["position",{"_index":550,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"directives/StickyDirective.html":{}}}],["pr",{"_index":809,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["prefetch",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["previous",{"_index":497,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["previousbutton",{"_index":537,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previousindex",{"_index":428,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previouslyactive",{"_index":481,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["previouspageindex",{"_index":614,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["private",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"directives/StickyDirective.html":{}}}],["pro",{"_index":741,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["process",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["processed",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":1087,"title":{},"body":{"index.html":{}}}],["projects/.../app.config.ts",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../icons.ts",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ngx",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../spinner.ts",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tableaction.enum.ts",{"_index":1078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/demo/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["projects/demo/src/app/app.component.ts:31",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:32",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:34",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:35",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:37",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:43",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:49",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:55",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:80",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.config.ts",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":228,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":978,"title":{},"body":{"directives/StickyDirective.html":{}}}],["properties",{"_index":30,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"properties.html":{}}}],["property",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"directives/StickyDirective.html":{}}}],["provide",{"_index":313,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["provideanimations",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":338,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["providerouter(routes",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":312,"title":{},"body":{"pipes/DynamicPipe.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":890,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["qrcode",{"_index":1081,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":841,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["range",{"_index":535,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["react",{"_index":598,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["reactiveformsmodule",{"_index":630,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["reference",{"_index":1131,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":642,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1100,"title":{},"body":{"index.html":{}}}],["remove",{"_index":455,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["removebuttons",{"_index":402,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["render",{"_index":574,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderbuttons",{"_index":403,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderbuttonsnumber",{"_index":408,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["rendered",{"_index":569,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderelements",{"_index":500,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["renderer",{"_index":354,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["renderer2",{"_index":355,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{}}}],["representing",{"_index":930,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["requiredpipe",{"_index":302,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["resolve",{"_index":521,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["results",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":269,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{}}}],["returntableaction",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["returntableaction(event",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["rgb(131",{"_index":870,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["rgba(0,0,0,0.05",{"_index":251,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["right",{"_index":559,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["ring",{"_index":804,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{}}}],["root'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["row",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["rows",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["rowsanimation",{"_index":718,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":858,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["run",{"_index":1092,"title":{},"body":{"index.html":{}}}],["running",{"_index":1110,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"dependencies.html":{}}}],["sans",{"_index":866,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["scaffolding",{"_index":1103,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["scrollablecontent",{"_index":895,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["scrollcontainer",{"_index":965,"title":{},"body":{"directives/StickyDirective.html":{}}}],["scrollcontainer(value",{"_index":989,"title":{},"body":{"directives/StickyDirective.html":{}}}],["scrollindicatorcomponent",{"_index":215,"title":{"components/ScrollIndicatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["scrolltobottom",{"_index":892,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["scrolltotop",{"_index":893,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["search",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":663,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["secondary",{"_index":253,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["secondarycolor",{"_index":238,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["seite",{"_index":742,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["select",{"_index":832,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["self",{"_index":449,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["sequence",{"_index":694,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["serif",{"_index":867,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["serve",{"_index":1094,"title":{},"body":{"index.html":{}}}],["server",{"_index":1091,"title":{},"body":{"index.html":{}}}],["services/dynamic",{"_index":703,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["set",{"_index":342,"title":{},"body":{"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["set_paginator(paginator",{"_index":691,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["setchange(value",{"_index":913,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["setdata",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["sethtmlelement",{"_index":963,"title":{},"body":{"directives/StickyDirective.html":{}}}],["sethtmlelement(prop",{"_index":976,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setiseditable",{"_index":325,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["setiseditable(iseditable",{"_index":328,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["setname(iconname",{"_index":361,"title":{},"body":{"components/IconsComponent.html":{}}}],["setscrollcontainer(value",{"_index":984,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setstylepropertytoelement",{"_index":964,"title":{},"body":{"directives/StickyDirective.html":{}}}],["setstylepropertytoelement(nativeel",{"_index":979,"title":{},"body":{"directives/StickyDirective.html":{}}}],["settextfilter",{"_index":326,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["settextfilter(textfilter",{"_index":330,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["settimeout",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["settings",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":726,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["share",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["show",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"miscellaneous/enumerations.html":{}}}],["showcheckbox",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["showcount",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["showfirstbutton",{"_index":409,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["showlastbutton",{"_index":410,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["showpaginator",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["simplechanges",{"_index":436,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["size",{"_index":239,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["size.tostring",{"_index":951,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["size}px",{"_index":952,"title":{},"body":{"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["sliced",{"_index":1022,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["smooth",{"_index":926,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["sort",{"_index":638,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["sortable",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{}}}],["sortcolumn",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["sortstart",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Tableoptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["speed",{"_index":240,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["spinner'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["spinner.component",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["spinner.component.html",{"_index":234,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.sass",{"_index":233,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.ts",{"_index":229,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"coverage.html":{}}}],["spinner.component.ts:17",{"_index":265,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner.component.ts:21",{"_index":267,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinner/circular",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"coverage.html":{}}}],["spinner/spinner.ts",{"_index":928,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spinner/spinner.ts:17",{"_index":936,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:22",{"_index":938,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:27",{"_index":937,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:32",{"_index":939,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:37",{"_index":940,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:42",{"_index":941,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:47",{"_index":942,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:52",{"_index":943,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.ts:58",{"_index":945,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner2",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinnercomponent",{"_index":218,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["spinnercomponent:17",{"_index":249,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:22",{"_index":252,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:27",{"_index":250,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:32",{"_index":255,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:37",{"_index":257,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:42",{"_index":258,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:47",{"_index":259,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinnercomponent:52",{"_index":262,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["spinners",{"_index":274,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["src/**/*.spec.ts",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["src/**/*.ts",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["src/app/file",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["src/test.ts",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["start",{"_index":754,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["startat",{"_index":1018,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startat=0",{"_index":1027,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startdots",{"_index":519,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["started",{"_index":1031,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["startindex",{"_index":776,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["starting",{"_index":522,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startingchar",{"_index":1024,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["startingindex",{"_index":524,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startwith",{"_index":452,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["startwith([0",{"_index":477,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["state",{"_index":589,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["statements",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["sticky",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["stickydirective",{"_index":222,"title":{"directives/StickyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"coverage.html":{}}}],["stickyelement",{"_index":970,"title":{},"body":{"directives/StickyDirective.html":{}}}],["still",{"_index":241,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["stored",{"_index":1107,"title":{},"body":{"index.html":{}}}],["string",{"_index":246,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":263,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["strokewidth",{"_index":244,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["style",{"_index":260,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{},"miscellaneous/variables.html":{}}}],["styledefaultpagination",{"_index":404,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["styles",{"_index":227,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":232,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["subclass",{"_index":948,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["subclasses",{"_index":932,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["subject",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["svgstyle",{"_index":935,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["switch",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["switchpage",{"_index":405,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["switchpage(i",{"_index":442,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["t",{"_index":820,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["tabelle",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["table.component",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["table.component.html",{"_index":632,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.sass",{"_index":631,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts",{"_index":618,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.component.ts:136",{"_index":681,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:148",{"_index":676,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:152",{"_index":670,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:157",{"_index":674,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:169",{"_index":660,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:172",{"_index":664,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:175",{"_index":668,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:178",{"_index":666,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:181",{"_index":657,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:184",{"_index":658,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:187",{"_index":672,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:62",{"_index":654,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:63",{"_index":650,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:64",{"_index":651,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:65",{"_index":653,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:66",{"_index":655,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:72",{"_index":686,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:73",{"_index":692,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:77",{"_index":690,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:79",{"_index":677,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:80",{"_index":679,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:82",{"_index":680,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:83",{"_index":685,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:84",{"_index":648,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.component.ts:90",{"_index":671,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.service",{"_index":704,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["table.service.ts",{"_index":320,"title":{},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["table.service.ts:10",{"_index":337,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:12",{"_index":333,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:13",{"_index":327,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:17",{"_index":331,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:20",{"_index":329,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table.service.ts:9",{"_index":334,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["table/src/lib/components/circular",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/components/icons/icons.component.ts",{"_index":341,"title":{},"body":{"components/IconsComponent.html":{},"coverage.html":{}}}],["table/src/lib/components/icons/icons.component.ts:25",{"_index":359,"title":{},"body":{"components/IconsComponent.html":{}}}],["table/src/lib/components/icons/icons.component.ts:27",{"_index":356,"title":{},"body":{"components/IconsComponent.html":{}}}],["table/src/lib/components/icons/icons.ts",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/components/scroll",{"_index":880,"title":{},"body":{"components/ScrollIndicatorComponent.html":{},"coverage.html":{}}}],["table/src/lib/directives/mobile",{"_index":385,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"coverage.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts",{"_index":960,"title":{},"body":{"directives/StickyDirective.html":{},"coverage.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:11",{"_index":972,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:14",{"_index":985,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:17",{"_index":982,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:19",{"_index":973,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:20",{"_index":971,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:28",{"_index":975,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:32",{"_index":977,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:45",{"_index":974,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/directives/sticky/sticky.directive.ts:54",{"_index":980,"title":{},"body":{"directives/StickyDirective.html":{}}}],["table/src/lib/models/column.model.ts",{"_index":292,"title":{},"body":{"interfaces/Column.html":{},"coverage.html":{}}}],["table/src/lib/models/tableaction.enum",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableaction.enum.ts",{"_index":1079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table/src/lib/models/tableaction.model",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableaction.model.ts",{"_index":1007,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"coverage.html":{}}}],["table/src/lib/models/tableoptions.model",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["table/src/lib/models/tableoptions.model.ts",{"_index":1009,"title":{},"body":{"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["table/src/lib/ngx",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/src/lib/pipes/dynamic/dynamic.pipe.ts",{"_index":299,"title":{},"body":{"pipes/DynamicPipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/dynamic/dynamic.pipe.ts:11",{"_index":304,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["table/src/lib/pipes/id",{"_index":370,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/truncate/truncate.pipe.ts",{"_index":1014,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["table/src/lib/pipes/truncate/truncate.pipe.ts:17",{"_index":1020,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["table/src/lib/services/dynamic",{"_index":319,"title":{},"body":{"injectables/DynamicTableService.html":{},"coverage.html":{}}}],["table__row",{"_index":822,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["tableaction",{"_index":1006,"title":{"interfaces/TableAction.html":{}},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["tableaction.enum",{"_index":1008,"title":{},"body":{"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{}}}],["tableaction.model",{"_index":1011,"title":{},"body":{"interfaces/Tableoptions.html":{}}}],["tableactionenum",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"miscellaneous/enumerations.html":{}}}],["tableactionenum.check",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["tableactionenum.checkall",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["tableactionenum.create",{"_index":787,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["tableactionenum.delete",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["tableactionenum.edit",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["tableactionenum.refresh",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{}}}],["tableactionenum.show",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tableactionreturn",{"_index":52,"title":{"interfaces/TableActionReturn.html":{}},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"coverage.html":{}}}],["tableoptions",{"_index":38,"title":{"interfaces/Tableoptions.html":{}},"body":{"components/AppComponent.html":{},"components/NgxDynamicTableComponent.html":{},"interfaces/Tableoptions.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":347,"title":{},"body":{"components/IconsComponent.html":{}}}],["takeuntildestroyed",{"_index":478,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tank",{"_index":1082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["target",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["targets",{"_index":859,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["tertiary",{"_index":816,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["test",{"_index":1113,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1123,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1112,"title":{},"body":{"index.html":{}}}],["text",{"_index":544,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{}}}],["textfilter",{"_index":324,"title":{},"body":{"injectables/DynamicTableService.html":{},"components/NgxDynamicTableComponent.html":{}}}],["textfilter(filtertext",{"_index":673,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["thats",{"_index":1021,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["thickness",{"_index":242,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["this._changepaginator.asobservable",{"_index":678,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this._changepaginator.next(true",{"_index":780,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this._data.asobservable",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this._data.next",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this._dynamictableservice.iseditable",{"_index":682,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this._dynamictableservice.textfilter$.subscribe((data",{"_index":769,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this._iseditable.asobservable",{"_index":335,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._iseditable.next(iseditable",{"_index":340,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._scrollcontainer",{"_index":988,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this._textfilter.asobservable",{"_index":336,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this._textfilter.next(textfilter",{"_index":339,"title":{},"body":{"injectables/DynamicTableService.html":{}}}],["this.action.emit",{"_index":786,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.appcustomlength",{"_index":578,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.bubblecontainerref",{"_index":570,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buildbuttons",{"_index":469,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref",{"_index":582,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref.foreach((button",{"_index":492,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref.length",{"_index":526,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[0",{"_index":504,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[newindex",{"_index":484,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[previousindex",{"_index":482,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.buttonsref[this.buttonsref.length",{"_index":506,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.changeactivebuttonstyles(prev",{"_index":479,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.checkscrollablecontent",{"_index":917,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.color",{"_index":271,"title":{},"body":{"components/CircularSpinnerComponent.html":{},"components/SpinnerComponent.html":{}}}],["this.createbubbledivref",{"_index":466,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.createbutton(0",{"_index":583,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.createdotselement",{"_index":584,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.data$.subscribe",{"_index":735,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource",{"_index":734,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource.data",{"_index":756,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource.filter",{"_index":783,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":762,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource.paginator",{"_index":733,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource.sort",{"_index":755,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.datasource.sortingdataaccessor",{"_index":759,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.destroy$.next(true",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.document.getelementbyid(value",{"_index":995,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.dotsstartref",{"_index":518,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.elementref.nativeelement",{"_index":529,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.elementref.nativeelement.queryselector",{"_index":565,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.getrangelabel",{"_index":748,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.hidedefaultarrows",{"_index":561,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.injector",{"_index":311,"title":{},"body":{"pipes/DynamicPipe.html":{}}}],["this.iseditableintable",{"_index":788,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.isscrollatbottom",{"_index":927,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.isscrollindicatorshown",{"_index":923,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.isvisible",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.makesticky",{"_index":993,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.matpag.page",{"_index":473,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag.pageindex",{"_index":615,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag.pagesize",{"_index":579,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.matpag['_emitpageevent'](previouspageindex",{"_index":616,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.pageindexchangeemitter.emit(i",{"_index":617,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.paginator",{"_index":732,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.paginator!.pageindex",{"_index":790,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.paginator!.pagesize",{"_index":791,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.paginator._intl.getrangelabel",{"_index":747,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.paginator._intl.itemsperpagelabel",{"_index":739,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.paginator._intl.nextpagelabel",{"_index":743,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.paginator._intl.previouspagelabel",{"_index":745,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.removebuttons",{"_index":460,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderbuttons",{"_index":464,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderbuttonsnumber",{"_index":501,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(bubblebutton",{"_index":593,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(currentactive",{"_index":491,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.addclass(this.bubblecontainerref",{"_index":572,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(bubblebutton",{"_index":597,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(dotsel",{"_index":613,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.appendchild(this.bubblecontainerref",{"_index":602,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createelement('div",{"_index":571,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createelement('span",{"_index":604,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createtext",{"_index":606,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.createtext(string(i",{"_index":592,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.insertbefore",{"_index":575,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.listen(bubblebutton",{"_index":600,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.removechild(this.bubblecontainerref",{"_index":587,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.removeclass(previouslyactive",{"_index":486,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setproperty(this.element.nativeelement,'innerhtml",{"_index":365,"title":{},"body":{"components/IconsComponent.html":{}}}],["this.renderer.setstyle",{"_index":517,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(bubblebutton",{"_index":594,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(button",{"_index":493,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(dotsel",{"_index":607,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(firstbutton",{"_index":520,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(howmanydisplayedel",{"_index":549,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(itemsperpage",{"_index":543,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(lastbutton",{"_index":513,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(nextbuttondefault",{"_index":563,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(previousbutton",{"_index":562,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(this.dotsendref",{"_index":511,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":581,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.scrollablecontent.offsetheight",{"_index":922,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scroll",{"_index":924,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scrollheight",{"_index":920,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.scrollablecontent.scrolltop",{"_index":921,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["this.setdata",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sethtmlelement('_scrollcontainer",{"_index":990,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.setstylepropertytoelement(nativeelement",{"_index":999,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.showfirstbutton",{"_index":516,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.showlastbutton",{"_index":510,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.sort",{"_index":751,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.sort.sort",{"_index":753,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.speed}s",{"_index":277,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.stickyelement.nativeelement",{"_index":998,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.still",{"_index":272,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.styledefaultpagination",{"_index":465,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.styles",{"_index":958,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.switchpage(0",{"_index":463,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.switchpage(i",{"_index":601,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["this.tableoptions.columnfilter.foreach((element",{"_index":765,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.tableoptions.showpaginator",{"_index":738,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.tableoptions.sortcolumn",{"_index":749,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.tableoptions.sortstart",{"_index":750,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.textfilter(data",{"_index":770,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["this.thickness",{"_index":270,"title":{},"body":{"components/CircularSpinnerComponent.html":{}}}],["this.top}px",{"_index":1001,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this.zindex.tostring",{"_index":1002,"title":{},"body":{"directives/StickyDirective.html":{}}}],["this['_scrollcontainer",{"_index":994,"title":{},"body":{"directives/StickyDirective.html":{}}}],["thomas",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["tim",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["timer(1000ms",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":757,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["todo(mdc",{"_index":855,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["tom",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":610,"title":{},"body":{"directives/MobilePaginationDirective.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["tr",{"_index":767,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["transform",{"_index":300,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"components/NgxDynamicTableComponent.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["transform(value",{"_index":301,"title":{},"body":{"pipes/DynamicPipe.html":{},"pipes/IdToValuePipe.html":{},"pipes/TruncatePipe.html":{}}}],["transition",{"_index":695,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["transition('void",{"_index":720,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["translatex",{"_index":723,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":729,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["transparent",{"_index":827,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["trash",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["triangle",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger",{"_index":696,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["trigger('rowsanimation",{"_index":719,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["truncate",{"_index":1015,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncatepipe",{"_index":1013,"title":{"pipes/TruncatePipe.html":{}},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["try",{"_index":485,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["tslib",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"interfaces/Column.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"interfaces/TableAction.html":{},"interfaces/TableActionReturn.html":{},"interfaces/Tableoptions.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":957,"title":{},"body":{"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{}}}],["ui",{"_index":468,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["undefined",{"_index":752,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{}}}],["unit",{"_index":1111,"title":{},"body":{"index.html":{}}}],["updatepaginator",{"_index":643,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["use",{"_index":346,"title":{},"body":{"components/IconsComponent.html":{},"index.html":{}}}],["used",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["user",{"_index":558,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["using",{"_index":662,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"pipes/DynamicPipe.html":{},"injectables/DynamicTableService.html":{},"pipes/IdToValuePipe.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{},"directives/StickyDirective.html":{},"pipes/TruncatePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1028,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.nativeelement",{"_index":997,"title":{},"body":{"directives/StickyDirective.html":{}}}],["value.pipe.ts",{"_index":372,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["value.pipe.ts:7",{"_index":375,"title":{},"body":{"pipes/IdToValuePipe.html":{}}}],["value.subscribe",{"_index":916,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["value.substr(startat",{"_index":1029,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value/id",{"_index":371,"title":{},"body":{"pipes/IdToValuePipe.html":{},"coverage.html":{}}}],["var",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CircularSpinnerComponent.html":{},"components/IconsComponent.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"components/SpinnerComponent.html":{}}}],["variable",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1135,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":862,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"index.html":{},"properties.html":{}}}],["vertical",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":1115,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":698,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["viewchild(matpaginator",{"_index":730,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["viewchild(matsort",{"_index":689,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["viewencapsulation",{"_index":363,"title":{},"body":{"components/IconsComponent.html":{}}}],["viewencapsulation.emulated",{"_index":351,"title":{},"body":{"components/IconsComponent.html":{}}}],["visible",{"_index":955,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/DynamicTableService.html":{},"components/IconsComponent.html":{},"directives/MobilePaginationDirective.html":{},"components/NgxDynamicTableComponent.html":{},"components/ScrollIndicatorComponent.html":{},"directives/StickyDirective.html":{}}}],["von",{"_index":774,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["vorherige",{"_index":746,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["w",{"_index":807,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["webkit",{"_index":1000,"title":{},"body":{"directives/StickyDirective.html":{}}}],["werden",{"_index":802,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["whether",{"_index":557,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["white",{"_index":813,"title":{},"body":{"components/NgxDynamicTableComponent.html":{}}}],["width",{"_index":842,"title":{},"body":{"components/NgxDynamicTableComponent.html":{},"components/SpinnerComponent.html":{}}}],["window:resize",{"_index":897,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["window:scroll",{"_index":898,"title":{},"body":{"components/ScrollIndicatorComponent.html":{}}}],["work",{"_index":934,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["x",{"_index":498,"title":{},"body":{"directives/MobilePaginationDirective.html":{}}}],["zindex",{"_index":966,"title":{},"body":{"directives/StickyDirective.html":{}}}],["zone.js",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/demo/src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                                CircularSpinnerComponent\n                            CommonModule\n                            DatePipe\n                                NgxDynamicTableComponent\n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.sass\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _data\n                            \n                            \n                                data$\n                            \n                            \n                                destroy$\n                            \n                            \n                                isSpinnerVisible\n                            \n                            \n                                isVisible\n                            \n                            \n                                tableoptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                returnTableAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/app.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnTableAction\n                        \n                    \n                \n            \n            \n                \nreturnTableAction(event: TableActionReturn)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/demo/src/app/app.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            TableActionReturn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The target to process\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                The processed target number\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSpinnerVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    The isVisible property belongs to the data of the dynamic-table.\nIt is used to show or hide the table, depended on the data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableoptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tableoptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    actions: [\n      { name: 'delete', icon: 'trash', action: 1 },\n      { name: 'edit', icon: 'edit', action: 2 },\n      { name: 'show', icon: 'eye', action: 4 }\n    ],\n    columns: [\n      { id: '1', name: 'id', header: 'ID', cell: 'id', hidden: true, sortable: true },\n      { id: '2', name: 'name', header: 'Name', cell: 'name', hidden: false, sortable: true },\n      { id: '3', name: 'date', header: 'Datum/Zeit', cell: 'date', pipe: { name: DatePipe, args: 'dd.MM.YYYY HH:mm:ss'}, hidden: false, sortable: true },\n      { id: '4', name: 'ort', header: 'Ort', cell: 'ort', hidden: false, sortable: true },\n    ],\n    columnFilter: ['date', 'ort'],\n    columnNames: ['checkbox', 'count', 'name', 'date', 'ort', 'actions'],\n    showCheckbox: true,\n    showCount: true,\n    showPaginator: true,\n    sortColumn: 'date',\n    sortStart: 'asc'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/demo/src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NgxDynamicTableComponent } from '../../../ngx-dynamic-table/src/lib/ngx-dynamic-table.component';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Tableoptions } from '../../../ngx-dynamic-table/src/lib/models/tableoptions.model';\nimport { TableActionReturn } from '../../../ngx-dynamic-table/src/lib/models/tableaction.model';\nimport { TableActionEnum } from '../../../ngx-dynamic-table/src/lib/models/tableaction.enum';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { CircularSpinnerComponent } from '../../../ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CircularSpinnerComponent,\n    CommonModule,\n    DatePipe,\n    NgxDynamicTableComponent,\n    RouterOutlet\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.sass'\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /**\n   * The isVisible property belongs to the data of the dynamic-table.\n   * It is used to show or hide the table, depended on the data.\n   * \n   * @type {boolean}\n   */\n  isVisible: boolean = false\n  isSpinnerVisible: boolean = true;\n\n  private readonly _data = new BehaviorSubject([])\n  data$: Observable = this._data.asObservable()\n\n  destroy$: Subject = new Subject()\n\n  constructor() {\n    this.setData()\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.isVisible = true\n    },2000)\n  }\n\n  ngOnDestroy(): void {\n    console.log('destroy')\n    this.destroy$.next(true)\n    this.destroy$.unsubscribe()\n  }\n\n  tableoptions: Tableoptions = {\n    actions: [\n      { name: 'delete', icon: 'trash', action: 1 },\n      { name: 'edit', icon: 'edit', action: 2 },\n      { name: 'show', icon: 'eye', action: 4 }\n    ],\n    columns: [\n      { id: '1', name: 'id', header: 'ID', cell: 'id', hidden: true, sortable: true },\n      { id: '2', name: 'name', header: 'Name', cell: 'name', hidden: false, sortable: true },\n      { id: '3', name: 'date', header: 'Datum/Zeit', cell: 'date', pipe: { name: DatePipe, args: 'dd.MM.YYYY HH:mm:ss'}, hidden: false, sortable: true },\n      { id: '4', name: 'ort', header: 'Ort', cell: 'ort', hidden: false, sortable: true },\n    ],\n    columnFilter: ['date', 'ort'],\n    columnNames: ['checkbox', 'count', 'name', 'date', 'ort', 'actions'],\n    showCheckbox: true,\n    showCount: true,\n    showPaginator: true,\n    sortColumn: 'date',\n    sortStart: 'asc'\n  }\n\n  /**\n * @param {TableActionReturn} event  The target to process\n * @returns The processed target number\n */\n  returnTableAction(event: TableActionReturn) {\n    switch (event.action) {\n      case TableActionEnum.DELETE:\n        console.log('delete row')\n        break\n      case TableActionEnum.EDIT:\n        console.log('edit row')\n        break\n      case TableActionEnum.SHOW:\n        console.log('show row')\n        break\n      case TableActionEnum.REFRESH:\n        console.log('refresh table')\n        this.setData()\n        break\n      case TableActionEnum.CHECK:\n        console.log('check row', event.row)\n        break\n      case TableActionEnum.CHECKALL:\n        console.log('check all rows')\n        break\n      default:\n        console.log('default action')\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  setData() {\n    this._data.next([\n      { id: '1', name: 'Tim', date: '01.01.2024 00:00:59', ort: 'Berlin', checked: false },\n      { id: '2', name: 'Tom', date: '01.01.2023 00:00:59', ort: 'Hamburg', checked: true },\n      { id: '3', name: 'Thomas', date: '01.02.2023 00:00:59', ort: 'Dresden', checked: true },\n      { id: '4', name: 'Martin', date: '03.02.2023 00:00:59', ort: 'München', checked: false },\n      { id: '5', name: 'Markus', date: '04.02.2023 00:00:59', ort: 'Köln', checked: false }\n    ])\n  }\n}\n\n    \n\n    \n        \n  \n      \n        \n          Tabelle\n          Dies ist die Beschreibung zu dieser Tabelle.\n        \n        \n          \n            \n          \n        \n      \n\n      \n          @defer (when isVisible; prefetch on timer(1000ms)) {\n            \n              \n            \n          }\n          @placeholder (minimum 100ms) {\n            \n              \n            \n          }\n          @loading (after 100ms; minimum 150ms) {\n            Loading\n          }\n          @error {\n            Error\n          }\n          \n            {{ (data$ | async) | json }}\n           -->\n          \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Tabelle          Dies ist die Beschreibung zu dieser Tabelle.                                                                              @defer (when isVisible; prefetch on timer(1000ms)) {                                                }          @placeholder (minimum 100ms) {                                                }          @loading (after 100ms; minimum 150ms) {            Loading          }          @error {            Error          }                      {{ (data$ | async) | json }}           -->                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CircularSpinnerComponent.html":{"url":"components/CircularSpinnerComponent.html","title":"component - CircularSpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CircularSpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    SpinnerComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                circular-spinner\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                IconsComponent\n                \n            \n\n            \n                styleUrls\n                ./circular-spinner.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./circular-spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                enabled\n                            \n                            \n                                secondaryColor\n                            \n                            \n                                size\n                            \n                            \n                                speed\n                            \n                            \n                                still\n                            \n                            \n                                styles\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    strokeWidth\n                                \n                                \n                                    dashStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#037bfc'\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:17\n\n                            \n                        \n                \n                    \n                        Default color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:27\n\n                            \n                        \n                \n                    \n                        Default enabled of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(0,0,0,0.05)'\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:22\n\n                            \n                        \n                \n                    \n                        Default secondary color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:32\n\n                            \n                        \n                \n                    \n                        Default size of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:37\n\n                            \n                        \n                \n                    \n                        Default speed of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        still\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:42\n\n                            \n                        \n                \n                    \n                        Default still of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:47\n\n                            \n                        \n                \n                    \n                        Default style of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                            \n                                \n                                    Inherited from         SpinnerComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpinnerComponent:52\n\n                            \n                        \n                \n                    \n                        Default stroke thickness of the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        strokeWidth\n                    \n                \n\n                \n                    \n                        getstrokeWidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dashStyle\n                    \n                \n\n                \n                    \n                        getdashStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts:21\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { SpinnerComponent } from './spinner'\nimport { CommonModule } from '@angular/common'\nimport { IconsComponent } from '../icons/icons.component'\n\n@Component({\n  selector: 'circular-spinner',\n  standalone: true,\n  imports: [\n    CommonModule,\n    IconsComponent\n  ],\n  templateUrl: './circular-spinner.component.html',\n  styleUrls: ['./circular-spinner.component.sass']\n})\nexport class CircularSpinnerComponent extends SpinnerComponent {\n  get strokeWidth() {\n    return 4 * (this.thickness / 100)\n  }\n\n  get dashStyle() {\n    return { color: this.color, ...(!this.still ? { animation: `spinners-angular-circular ${140 / this.speed}s linear infinite` } : {})}\n  }\n}\n\n    \n\n    \n        \n  \n  \n -->\n\n\n\n  \n  Loading...\n\n    \n\n    \n                \n                    ./circular-spinner.component.sass\n                \n                @keyframes spinners-angular-circular \n  0%  \n    stroke-dashoffset: 306 \n  50%  \n    stroke-dasharray: 40, 134 \n  100% \n    stroke-dasharray: 1, 174\n    stroke-dashoffset: 132\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     -->    Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'CircularSpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Column.html":{"url":"interfaces/Column.html","title":"interface - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/column.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cell\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipe\n                                        \n                                \n                                \n                                        \n                                            sortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cell\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipe:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"checkbox\" | \"datetime-local\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"checkbox\" | \"datetime-local\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Column {\n    id: string,\n    name: string,\n    header: string,\n    cell: string,\n    hidden: boolean,\n    sortable: boolean,\n    disabled?: boolean,\n    pipe?: { name: any, args: string }\n    type?: 'checkbox' | 'datetime-local'\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DynamicPipe.html":{"url":"pipes/DynamicPipe.html","title":"pipe - DynamicPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DynamicPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        dynamicPipe\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, requiredPipe: Type, pipeArgs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requiredPipe\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pipeArgs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injector, Pipe, PipeTransform, Type } from '@angular/core'\n\n@Pipe({\n  name: 'dynamicPipe',\n  standalone: true\n})\nexport class DynamicPipe implements PipeTransform {\n\n  constructor(private injector: Injector) {}\n  \n  transform(value: any, requiredPipe: Type, pipeArgs: any): any {\n    const injector = Injector.create({\n      name: 'DynamicPipe',\n      parent: this.injector,\n      providers: [\n        { provide: requiredPipe }\n      ]\n    })\n    const pipe = injector.get(requiredPipe)\n    return pipe.transform(value, pipeArgs)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DynamicTableService.html":{"url":"injectables/DynamicTableService.html","title":"injectable - DynamicTableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DynamicTableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isEditable\n                            \n                            \n                                    Private\n                                    Readonly\n                                _textFilter\n                            \n                            \n                                isEditable$\n                            \n                            \n                                textFilter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsEditable\n                            \n                            \n                                setTextFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setIsEditable\n                        \n                    \n                \n            \n            \n                \nsetIsEditable(isEditable: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isEditable\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextFilter\n                        \n                    \n                \n            \n            \n                \nsetTextFilter(textFilter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                textFilter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _textFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._isEditable.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._textFilter.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicTableService {\n\n  private readonly _textFilter = new BehaviorSubject('')\n  textFilter$: Observable = this._textFilter.asObservable()\n\n  private _isEditable = new BehaviorSubject(false)\n  isEditable$: Observable = this._isEditable.asObservable()\n\n  constructor() {}\n\n  setTextFilter(textFilter: string) {\n    this._textFilter.next(textFilter)\n  }\n  setIsEditable(isEditable: boolean) {\n    this._isEditable.next(isEditable)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconsComponent.html":{"url":"components/IconsComponent.html","title":"component - IconsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component set the icons from the icons.ts file to the innerHTML of the element. In use of tailwindcss the classes will style the icons.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.Emulated\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                icons\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n            \n                styles\n                \n            \n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of IconsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:25\n                            \n                        \n                \n                    \n                        The iconname to get from icons.ts to set to the innerHTML.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n\n                \n                    \n                        setname(iconName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts:25\n                                \n                            \n                    \n                        \n                                The iconname to get from icons.ts to set to the innerHTML.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            iconName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { icons } from './icons';\n\n/**\n * This component set the icons from the icons.ts file to the innerHTML of the element. In use of tailwindcss the classes will style the icons.\n * \n * @example\n * \n*/\n@Component({\n  selector: 'icons',\n  standalone: true,\n  imports: [],\n  template: `\n    \n  `,\n  styles: ``,\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class IconsComponent {\n    /**\n   * The iconname to get from icons.ts to set to the innerHTML.\n   * @type {string}\n   */\n  @Input() set name(iconName: string) {\n    this.renderer.setProperty(this.element.nativeElement,'innerHTML', icons[iconName] || null)\n  }\n  \n  /**\n   * Creates an instance of IconsComponent.\n   * @param {ElementRef} element\n   * @param {Renderer2} renderer\n   * @memberof IconsComponent\n   */\n  constructor(private element: ElementRef, private renderer: Renderer2) {}\n}\n\n    \n\n\n    \n            \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/IdToValuePipe.html":{"url":"pipes/IdToValuePipe.html","title":"pipe - IdToValuePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  IdToValuePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        idToValue\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, kat: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                kat\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'idToValue'\n})\nexport class IdToValuePipe implements PipeTransform {\n  transform(value: string, kat: any[]): string {\n    console.log('kat: ', kat)\n    let item = kat.find((item: { id: string, bezeichnung: string }) => item.id === value)\n    if (item.hasOwnProperty('bezeichnung')) return item.bezeichnung\n    if (item.hasOwnProperty('item')) return item.item\n    return value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MobilePaginationDirective.html":{"url":"directives/MobilePaginationDirective.html","title":"directive - MobilePaginationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  MobilePaginationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [nxtMobilePagination]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bubbleContainerRef\n                            \n                            \n                                    Private\n                                buttonsRef\n                            \n                            \n                                    Private\n                                dotsEndRef\n                            \n                            \n                                    Private\n                                dotsStartRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildButtons\n                            \n                            \n                                    Private\n                                changeActiveButtonStyles\n                            \n                            \n                                    Private\n                                createBubbleDivRef\n                            \n                            \n                                    Private\n                                createButton\n                            \n                            \n                                    Private\n                                createDotsElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                removeButtons\n                            \n                            \n                                    Private\n                                renderButtons\n                            \n                            \n                                    Private\n                                styleDefaultPagination\n                            \n                            \n                                    Private\n                                switchPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appCustomLength\n                            \n                            \n                                hideDefaultArrows\n                            \n                            \n                                renderButtonsNumber\n                            \n                            \n                                showFirstButton\n                            \n                            \n                                showLastButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageIndexChangeEmitter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matPag: MatPaginator, elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matPag\n                                                  \n                                                        \n                                                                    MatPaginator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appCustomLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideDefaultArrows\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        renderButtonsNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFirstButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLastButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:12\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageIndexChangeEmitter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeActiveButtonStyles\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeActiveButtonStyles(previousIndex: number, newIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                previousIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBubbleDivRef\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBubbleDivRef()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createButton\n                        \n                    \n                \n            \n            \n                \n                        \n                    createButton(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDotsElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDotsElement()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:227\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HTMLElement\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderButtons\n                        \n                    \n                \n            \n            \n                \n                        \n                    renderButtons()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        styleDefaultPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    styleDefaultPagination()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        switchPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    switchPage(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:249\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bubbleContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buttonsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dotsEndRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dotsStartRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, EventEmitter, Host, Input, OnChanges, Optional, Output, Renderer2, Self, SimpleChanges } from '@angular/core'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { map, startWith } from 'rxjs'\n\n@Directive({\n  selector: '[nxtMobilePagination]',\n  standalone: true\n})\nexport class MobilePaginationDirective implements AfterViewInit, OnChanges {\n  @Output() pageIndexChangeEmitter: EventEmitter = new EventEmitter()\n  @Input() showFirstButton = true\n  @Input() showLastButton = true\n  @Input() renderButtonsNumber = 2\n  @Input() appCustomLength: number = 0\n  @Input() hideDefaultArrows = false\n\n  private dotsEndRef!: HTMLElement\n  private dotsStartRef!: HTMLElement\n  private bubbleContainerRef!: HTMLElement\n  private buttonsRef: HTMLElement[] = []\n\n  constructor(@Host() @Self() @Optional() private readonly matPag: MatPaginator, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes?.['appCustomLength']?.firstChange) {\n      // remove buttons before creating new ones\n      this.removeButtons()\n      // switch back to page 0\n      this.switchPage(0)\n      this.renderButtons()\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.styleDefaultPagination()\n    this.createBubbleDivRef()\n  }\n\n  private renderButtons(): void {\n    // build buttons to UI\n    this.buildButtons()\n\n    // when pagination change -> change button styles\n    this.matPag.page\n      .pipe(\n        map((e) => [e.previousPageIndex ?? 0, e.pageIndex]),\n        startWith([0, 0])\n        // takeUntilDestroyed() //  {\n        this.changeActiveButtonStyles(prev, curr)\n      })\n  }\n\n  private changeActiveButtonStyles(previousIndex: number, newIndex: number) {\n    const previouslyActive = this.buttonsRef[previousIndex]\n    const currentActive = this.buttonsRef[newIndex]\n\n    try {\n      this.renderer.removeClass(previouslyActive, 'nxt-bubble__active')\n\n      // add active style to new active button\n      this.renderer.addClass(currentActive, 'nxt-bubble__active')\n  \n      // hide all buttons\n      this.buttonsRef.forEach((button) =>\n        this.renderer.setStyle(button, 'display', 'none')\n      )\n  \n      // show N previous buttons and X next buttons\n      const renderElements = this.renderButtonsNumber\n      const endDots = newIndex  0\n  \n      const firstButton = this.buttonsRef[0]\n      const lastButton = this.buttonsRef[this.buttonsRef.length - 1]\n  \n      // last bubble and dots\n      if (this.showLastButton) {\n        this.renderer.setStyle(this.dotsEndRef, 'display', endDots ? 'block' : 'none')\n        this.renderer.setStyle(lastButton, 'display', endDots ? 'flex' : 'none')\n      }\n  \n      // first bubble and dots\n      if (this.showFirstButton) {\n        this.renderer.setStyle(\n          this.dotsStartRef,\n          'display',\n          startDots ? 'block' : 'none'\n        )\n        this.renderer.setStyle(firstButton, 'display', startDots ? 'flex' : 'none')\n      }\n  \n      // resolve starting and ending index to show buttons\n      const startingIndex = startDots ? newIndex - renderElements : 0\n  \n      const endingIndex = endDots\n        ? newIndex + renderElements\n        : this.buttonsRef.length - 1\n  \n      // display starting buttons\n      for (let i = startingIndex; i  Paginator disabled')\n    }\n    \n  }\n\n  private styleDefaultPagination() {\n    const nativeElement = this.elementRef.nativeElement\n    const itemsPerPage = nativeElement.querySelector(\n      '.mat-mdc-paginator-page-size'\n    )\n    const howManyDisplayedEl = nativeElement.querySelector(\n      '.mat-mdc-paginator-range-label'\n    )\n    const previousButton = nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-previous'\n    )\n    const nextButtonDefault = nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-next'\n    )\n\n    // remove 'items per page'\n    this.renderer.setStyle(itemsPerPage, 'display', 'none')\n\n    // style text of how many elements are currently displayed\n    this.renderer.setStyle(howManyDisplayedEl, 'position', 'absolute')\n    this.renderer.setStyle(howManyDisplayedEl, 'left', '0')\n    // this.renderer.setStyle(howManyDisplayedEl, 'color', '#919191')\n    // this.renderer.setStyle(howManyDisplayedEl, 'font-size', '14px')\n\n    // check whether the user wants to remove left & right default arrow\n    if (this.hideDefaultArrows) {\n      this.renderer.setStyle(previousButton, 'display', 'none')\n      this.renderer.setStyle(nextButtonDefault, 'display', 'none')\n    }\n  }\n\n  private createBubbleDivRef(): void {\n    const actionContainer = this.elementRef.nativeElement.querySelector(\n      'div.mat-mdc-paginator-range-actions'\n    )\n    const nextButtonDefault = this.elementRef.nativeElement.querySelector(\n      'button.mat-mdc-paginator-navigation-next'\n    )\n\n    // create a HTML element where all bubbles will be rendered\n    this.bubbleContainerRef = this.renderer.createElement('div') as HTMLElement\n    this.renderer.addClass(this.bubbleContainerRef, 'nxt-bubble-container')\n\n    // render element before the 'next button' is displayed\n    this.renderer.insertBefore(\n      actionContainer,\n      this.bubbleContainerRef,\n      nextButtonDefault\n    )\n  }\n\n  private buildButtons(): void {\n    const neededButtons = Math.ceil(\n      this.appCustomLength / this.matPag.pageSize\n    )\n\n    // if there is only one page, do not render buttons\n    if (neededButtons === 1) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none')\n      return\n    }\n\n    // create first button\n    this.buttonsRef = [this.createButton(0)]\n\n    // add dots (....) to UI\n    this.dotsStartRef = this.createDotsElement()\n\n    // create all buttons needed for navigation (except the first & last one)\n    for (let index = 1; index  {\n      this.renderer.removeChild(this.bubbleContainerRef, button)\n    })\n\n    // Empty state array\n    this.buttonsRef.length = 0\n  }\n\n  private createButton(i: number): HTMLElement {\n    const bubbleButton = this.renderer.createElement('div')\n    const text = this.renderer.createText(String(i + 1))\n\n    // add class & text\n    this.renderer.addClass(bubbleButton, 'nxt-bubble')\n    this.renderer.setStyle(bubbleButton, 'margin-right', '8px')\n    this.renderer.appendChild(bubbleButton, text)\n\n    // react on click\n    this.renderer.listen(bubbleButton, 'click', () => {\n      this.switchPage(i)\n    })\n\n    // render on UI\n    this.renderer.appendChild(this.bubbleContainerRef, bubbleButton)\n\n    // set style to hidden by default\n    this.renderer.setStyle(bubbleButton, 'display', 'none')\n\n    return bubbleButton\n  }\n\n  private createDotsElement(): HTMLElement {\n    const dotsEl = this.renderer.createElement('span')\n    const dotsText = this.renderer.createText('.....')\n\n    // add class\n    this.renderer.setStyle(dotsEl, 'font-size', '18px')\n    this.renderer.setStyle(dotsEl, 'margin-right', '8px')\n    this.renderer.setStyle(dotsEl, 'padding-top', '6px')\n    this.renderer.setStyle(dotsEl, 'color', '#919191')\n\n    // append text to element\n    this.renderer.appendChild(dotsEl, dotsText)\n\n    // render dots to UI\n    this.renderer.appendChild(this.bubbleContainerRef, dotsEl)\n\n    // set style none by default\n    this.renderer.setStyle(dotsEl, 'display', 'none')\n\n    return dotsEl\n  }\n\n  private switchPage(i: number): void {\n    const previousPageIndex = this.matPag.pageIndex\n    this.matPag.pageIndex = i\n    this.matPag['_emitPageEvent'](previousPageIndex)\n\n    this.pageIndexChangeEmitter.emit(i)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxDynamicTableComponent.html":{"url":"components/NgxDynamicTableComponent.html","title":"component - NgxDynamicTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NgxDynamicTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component to demonstrate Compodoc documentation.\nIt displays a greeting message.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dynamic-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DynamicPipe\n                            FormsModule\n                                IconsComponent\n                            MatMenuModule\n                            MatPaginatorModule\n                            MatSortModule\n                            MatTableModule\n                                MobilePaginationDirective\n                            ReactiveFormsModule\n                                ScrollIndicatorComponent\n                                StickyDirective\n                \n            \n\n            \n                styleUrls\n                ./ngx-dynamic-table.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./ngx-dynamic-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _changePaginator\n                            \n                            \n                                changePaginator$\n                            \n                            \n                                dataSource\n                            \n                            \n                                getRangeLabel\n                            \n                            \n                                isEditable$\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                    \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                checkAll\n                            \n                            \n                                clickAction\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                isSticky\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                textfilter\n                            \n                            \n                                updatePaginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data$\n                            \n                            \n                                isEditableInTable\n                            \n                            \n                                pageSize\n                            \n                            \n                                tableoptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _paginator\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_dynamicTableService: DynamicTableService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _dynamicTableService\n                                                  \n                                                        \n                                                                        DynamicTableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data$\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditableInTable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tableoptions\n                    \n                \n                \n                    \n                        Type :         Tableoptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:62\n                            \n                        \n                \n                    \n                        The name to be displayed in the greeting.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:66\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAll\n                        \n                    \n                \n            \n            \n                \ncheckAll()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickAction\n                        \n                    \n                \n            \n            \n                \nclickAction(id: string, action: TableActionEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:169\n                        \n                    \n\n\n            \n                \n                        This function returns to returnTableAction by using @Output().\nExample :\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe first number.\n\n\n                                            \n                                        \n                                        \n                                                action\n                                            \n                                                            TableActionEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe second number.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSticky\n                        \n                    \n                \n            \n            \n                \nisSticky(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textfilter\n                        \n                    \n                \n            \n            \n                \ntextfilter(filterText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePaginator\n                        \n                    \n                \n            \n            \n                \nupdatePaginator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _changePaginator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePaginator$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._changePaginator.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRangeLabel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditable$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._dynamicTableService.isEditable$\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1, 5, 10, 15, 20, 50, 100]\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _paginator\n                    \n                \n\n\n                \n                    \n                        set_paginator(paginator: MatPaginator)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            paginator\n                                                    \n                                                            \n                                                                        MatPaginator\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { animate, sequence, style, transition, trigger } from '@angular/animations'\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core'\nimport { Tableoptions } from './models/tableoptions.model'\nimport { BehaviorSubject, Observable, of } from 'rxjs'\nimport { TableActionReturn } from './models/tableaction.model'\nimport { MatSort, MatSortModule, MatSortable } from '@angular/material/sort'\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator'\nimport { DynamicTableService } from './services/dynamic-table.service'\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table'\nimport { TableActionEnum } from './models/tableaction.enum'\nimport { CommonModule } from '@angular/common'\nimport { DynamicPipe } from './pipes/dynamic/dynamic.pipe'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { ScrollIndicatorComponent } from './components/scroll-indicator/scroll-indicator.component'\nimport { StickyDirective } from './directives/sticky/sticky.directive'\nimport { MobilePaginationDirective } from './directives/mobile-pagination/mobile-pagination.directive'\nimport { IconsComponent } from './components/icons/icons.component'\n\nexport const rowsAnimation = trigger('rowsAnimation', [\n  transition('void => *', [\n    style({ height: '*', opacity: '0', transform: 'translateX(-550px)', 'box-shadow': 'none' }),\n    sequence([\n      animate(\".35s ease\", style({ height: '*', opacity: '.2', transform: 'translateX(0)', 'box-shadow': 'none'  })),\n      animate(\".35s ease\", style({ height: '*', opacity: 1, transform: 'translateX(0)' }))\n    ])\n  ])\n])\n\n/**\n * This component to demonstrate Compodoc documentation.\n * It displays a greeting message.\n * \n * @example\n * \n */\n@Component({\n  selector: 'dynamic-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DynamicPipe,\n    FormsModule,\n    IconsComponent,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    MobilePaginationDirective,\n    ReactiveFormsModule,\n    ScrollIndicatorComponent,\n    StickyDirective\n  ],\n  templateUrl: './ngx-dynamic-table.component.html',\n  styleUrls: ['./ngx-dynamic-table.component.sass']\n})\nexport class NgxDynamicTableComponent implements OnInit {\n  /**\n   * The name to be displayed in the greeting.\n   * @type {string}\n   */\n  @Input() tableoptions!: Tableoptions\n  @Input() data$!: Observable\n  @Input() isEditableInTable: boolean = false\n  @Input() pageSize: number = 10\n  @Output() action: EventEmitter = new EventEmitter()\n\n  /**\n   * @description default class of NgxDynamicTableComponent\n   * @memberof NgxDynamicTableComponent\n   */\n  paginator!: MatPaginator\n  @ViewChild(MatPaginator) set _paginator(paginator: MatPaginator) {\n    this.paginator = paginator\n    this.dataSource.paginator = this.paginator\n  }\n  @ViewChild(MatSort) sort!: MatSort\n\n  private readonly _changePaginator = new BehaviorSubject(false) \n  changePaginator$: Observable = this._changePaginator.asObservable()\n\n  dataSource: any\n  pageSizeOptions: number[] = [1, 5, 10, 15, 20, 50, 100]\n  isEditable$: Observable = this._dynamicTableService.isEditable$\n\n  constructor(private _dynamicTableService: DynamicTableService) {\n    this.dataSource = new MatTableDataSource([])\n  }\n  \n  ngOnInit(): void {\n    this.data$.subscribe({\n      next: (data: any[]) => {  \n        console.log('data', data)\n        if (data && data.length > 0) {\n          setTimeout(() => {\n            if (this.tableoptions.showPaginator && this.paginator) {\n              this.paginator._intl.itemsPerPageLabel = 'Elemente pro Seite'\n              this.paginator._intl.nextPageLabel = 'Nächste'\n              this.paginator._intl.previousPageLabel = 'Vorherige'\n              this.paginator._intl.getRangeLabel = this.getRangeLabel\n              this.dataSource.paginator = this.paginator\n            }\n  \n            if (this.tableoptions.sortColumn && this.tableoptions.sortStart) {\n              if (this.sort != undefined) this.sort.sort(({ id: this.tableoptions.sortColumn, start: this.tableoptions.sortStart }) as MatSortable)\n            }\n            this.dataSource.sort = this.sort\n            this.dataSource.data = data\n\n            // ToDo: date is hardcoded!\n            this.dataSource.sortingDataAccessor = (item: any, property: any) => {\n              switch (property) {\n                 case 'date': return new Date(item.date)\n                 default: return item[property]\n              }\n            }\n  \n            this.dataSource.filterPredicate = (data: any, filter: string) => {\n              let match: boolean = false\n              this.tableoptions.columnFilter.forEach((element: string) => {\n                match = (match || data[element].trim().toLowerCase().includes(filter)) // ToDo: error on filter \"tr\" in klarmeldung\n              })\n              return match\n            }\n  \n            this._dynamicTableService.textFilter$.subscribe((data) => this.textfilter(data))\n          }, 20)\n        }\n      },\n      error(err) {\n        console.log(err)\n      }\n    })\n  }\n\n  getRangeLabel = (page: number, pageSize: number, length: number): string => {\n    const of = \"von\"\n    if (length === 0 || pageSize === 0) {\n      return \"0 \" + of + \" \" + length\n    }\n    length = Math.max(length, 0)\n    const startIndex = page * pageSize > length ? (Math.ceil(length / pageSize) - 1) * pageSize : page * pageSize\n\n    const endIndex = Math.min(startIndex + pageSize, length)\n    return startIndex + 1 + \" - \" + endIndex + \" \" + of + \" \" + length\n  }\n\n  updatePaginator() {\n    this._changePaginator.next(true)\n  }\n\n  isSticky(id: string) {\n    const buttonToggleGroup: string[] = ['count', 'name']\n    return (buttonToggleGroup || []).indexOf(id) !== -1\n  }\n\n  textfilter(filterText: string) {\n    this.dataSource.filter = filterText.trim().toLowerCase()\n  }\n\n  /**\n   * This function returns to returnTableAction by using @Output().\n   * @param {string}  id - The first number.\n   * @param {enum}    action - The second number.\n   * \n   * @example:\n   * \n   */\n  clickAction(id: string, action: TableActionEnum) {\n    this.action.emit({ id, action })\n  }\n  create() {\n    this.action.emit({ id: '', action: TableActionEnum.CREATE })\n  }\n  edit(row: any) {\n    if (!this.isEditableInTable) this.action.emit({ row, action: TableActionEnum.EDIT })\n  }\n  delete(row: any) {\n    this.action.emit({ row, action: TableActionEnum.DELETE })\n  }\n  check(row: any) {\n    this.action.emit({ row, action: TableActionEnum.CHECK })\n  }\n  checkAll() {\n    this.action.emit({ action: TableActionEnum.CHECKALL })\n  }\n  refresh() {\n    this.action.emit({ action: TableActionEnum.REFRESH })\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                     Nr. \n                    {{ this.paginator!.pageIndex == 0 ? i + 1 : 1 + i + this.paginator!.pageIndex * this.paginator!.pageSize }} \n                \n                \n                    \n                        \n                            \n                        \n                    \n                    \n                        \n                            \n                        \n                    \n                \n        \n                \n                     {{ column.header }} \n                    \n                        \n                            \n                                \n                                    \n                                \n                                \n                                    \n                                    \n                                \n                                \n                                    \n                                \n                            \n                        \n                        \n                            \n                                \n                                    \n                                \n                                \n                                    {{ element[column.cell] }}\n                                    {{ element[column.cell] | dynamicPipe: column.pipe.name: column.pipe.args }}\n                                \n                                \n                                    {{ element[column.cell] }}\n                                    {{ element[column.cell] | dynamicPipe: column.pipe.name: column.pipe.args }}\n                                \n                            \n                        \n                     \n                \n            \n                \n                    \n                    \n                        \n                            \n                                \n                            \n                        \n                        \n                        \n                            \n                                \n                                    \n                                        \n                                            \n                                        \n                                        {{ action.name }}\n                                    \n                                \n                            \n                        \n                    \n                \n                \n            \n            \n        \n         -->\n         pageSize}\">\n            \n            \n        \n    \n    \n\n\n\n    \n        \n            \n                \n            \n            Loading...\n        \n        \n            \n                \n            \n            Es konnten keine Daten geladen werden.\n            \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./ngx-dynamic-table.component.sass\n                \n                *\n    @apply ring-0 ring-offset-0 outline-none\n\n.mat-column-count\n    @apply w-16 pr-4 justify-center bg-white\n\n.mat-column-actions\n    @apply w-20 justify-center\n\n    button\n        @apply mx-auto\n\n\n// .mat-mdc-table\n//     @apply bg-tertiary #{!important}\n\n.mat-mdc-header-row\n    @apply bg-tertiary text-darker #{!important}\n\n// .mat-mdc-row\n//     @apply border-t border-borderline #{!important}\n\n// .mdc-data-table__row\n//     @apply border-t border-borderline #{!important}\n\n.mat-mdc-header-cell\n    @apply border-none border-b border-2 border-borderline border-2 #{!important}\n\n.mat-column-checkbox\n    @apply m-0 p-0 w-8 #{!important}\n\n.mat-column-count\n    @apply bg-transparent #{!important}\n\n.mat-mdc-row\n    @apply bg-tertiary text-dark #{!important}\n\n.mat-mdc-cell\n    @apply border-t border-light #{!important}\n\n// paginator\n.mat-mdc-paginator\n    @apply bg-tertiary text-dark #{!important}\n\n    .mdc-text-field\n        // @apply text-dark #{!important}\n\n    .mdc-text-field--outlined\n        // @apply outline-none border-borderline #{!important}\n\n    .mat-mdc-select\n        @apply text-dark #{!important}\n\n    .mat-mdc-select-arrow\n        @apply text-dark #{!important}\n\n    .mdc-notched-outline__leading, .mdc-notched-outline__notch, .mdc-notched-outline__trailing\n        @apply border-borderline border #{!important}\n\n    // .mat-paginator-navigation-previous\n    //     display: none !important\n\n    // .mat-paginator-navigation-next\n    //     display: none !important\n\n.mat-mdc-paginator-icon\n    @apply fill-none text-dark #{!important}\n\n.mat-mdc-paginator-container\n    @apply p-0 #{!important}\n    \n// bubble-pagination\n.nxt-bubble-container\n  display: flex\n//   gap: 4px\n\n.nxt-bubble\n  background-color: #919191\n  border-radius: 50%\n  width: 34px\n  height: 34px\n  display: flex\n  align-items: center\n  justify-content: center\n  color: white !important\n  font-size: 14px\n  cursor: pointer\n  transition: 0.3s\n\n.nxt-bubble:hover\n  background-color: #b6b6b6\n  color: white\n\n.nxt-bubble__active\n    @apply bg-dark text-darker\n//   background-color: #6193a1\n//   color: white\n\n.nxt-bubble__disabled\n  cursor: default\n  opacity: 0.5\n  pointer-events: none\n  color: 919191\n\n/* TODO(mdc-migration): The following rule targets internal classes of paginator that may no longer apply for the MDC version. */\nmat-paginator\n  background: transparent !important\n\n.mat-mdc-paginator-range-actions\n  margin-right: 12px !important\n\n.paginator\n    font-family: 'Lato', sans-serif\n    font-size: 15px\n\n.paginator .ngx-pagination .current\n    background: rgb(131, 131, 131)\n    border-radius: 4px\n    padding-left: 9px\n    padding-right: 9px\n\n.paginator .ngx-pagination a:hover, .ngx-pagination button:hover\n    background: #d4d4d4\n    border-radius: 3px\n    padding-left: 9px\n    padding-right: 9px\n    text-decoration: none\n\n.paginator .ngx-pagination a:focus, .ngx-pagination button:focus\n    outline: none\n    background: #d4d4d4\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             Nr.                     {{ this.paginator!.pageIndex == 0 ? i + 1 : 1 + i + this.paginator!.pageIndex * this.paginator!.pageSize }}                                                                                                                                                                                                                                                                                                                                      {{ column.header }}{{ element[column.cell] }}                                    {{ element[column.cell] | dynamicPipe: column.pipe.name: column.pipe.args }}                                                                                                    {{ element[column.cell] }}                                    {{ element[column.cell] | dynamicPipe: column.pipe.name: column.pipe.args }}{{ action.name }}                                                                                                                                                                                                                     -->         pageSize}\">                                                                                                        Loading...                                                                    Es konnten keine Daten geladen werden.                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxDynamicTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScrollIndicatorComponent.html":{"url":"components/ScrollIndicatorComponent.html","title":"component - ScrollIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScrollIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scroll-indicator\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgStyle\n                                IconsComponent\n                \n            \n\n            \n                styleUrls\n                ./scroll-indicator.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./scroll-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScrollAtBottom\n                            \n                            \n                                isScrollIndicatorShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkScrollableContent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                    Public\n                                onResize\n                            \n                            \n                                    \n                                scroll\n                            \n                            \n                                    Public\n                                scrollToBottom\n                            \n                            \n                                    Public\n                                scrollToTop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                distance\n                            \n                            \n                                scrollableContent\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    change\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollableContent\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkScrollableContent\n                        \n                    \n                \n            \n            \n                \ncheckScrollableContent()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', undefined)\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    scroll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', undefined)\n                \n            \n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scrollToTop\n                        \n                    \n                \n            \n            \n                \n                        \n                    scrollToTop()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScrollAtBottom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScrollIndicatorShown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n\n\n                \n                    \n                        setchange(value: Observable)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        Observable\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { NgIf, NgStyle } from '@angular/common';\nimport { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IconsComponent } from '../icons/icons.component';\n\n@Component({\n  selector: 'scroll-indicator',\n  standalone: true,\n  imports: [\n    NgIf,\n    NgStyle,\n    IconsComponent\n  ],\n  templateUrl: './scroll-indicator.component.html',\n  styleUrls: ['./scroll-indicator.component.sass']\n})\nexport class ScrollIndicatorComponent implements OnInit {\n  @Input() scrollableContent: any\n  @Input() distance: number = 16\n  @Input() set change(value: Observable) {\n    value.subscribe({\n      next: () => {\n        this.checkScrollableContent()\n      }\n    })\n  }\n\n  isScrollIndicatorShown: boolean = false\n  isScrollAtBottom: boolean = false\n\n  @HostListener(\"window:resize\", []) public onResize() {\n    this.checkScrollableContent()\n  }\n\n  @HostListener('window:scroll', []) scroll() {\n    console.log('update')\n    if ((this.scrollableContent.scrollHeight - (this.scrollableContent.scrollTop + this.scrollableContent.offsetHeight))  {\n      if (this.scrollableContent.scrollHeight > this.scrollableContent.offsetHeight) {\n        this.isScrollIndicatorShown = true\n      } else {\n        this.isScrollIndicatorShown = false\n      }\n    }, 100)\n  }\n\n  checkScrollableContent() {\n    setTimeout(() => {\n      if (this.scrollableContent.scrollHeight > this.scrollableContent.offsetHeight) {\n        this.isScrollIndicatorShown = true\n      } else {\n        this.isScrollIndicatorShown = false\n      }\n    }, 100)\n  }\n\n  public scrollToTop(): void {\n    this.scrollableContent.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    })\n    this.isScrollAtBottom = false\n  }\n\n  public scrollToBottom(): void {\n    this.scrollableContent.scroll({\n      top: this.scrollableContent.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    })\n    this.isScrollAtBottom = true\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./scroll-indicator.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScrollIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n\n\n\n    \n        Description\n    \n    \n        This is an abstract class representing the spinner options.\nSubclasses should implement methods to work with.\n\n    \n\n\n\n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                enabled\n                            \n                            \n                                secondaryColor\n                            \n                            \n                                size\n                            \n                            \n                                speed\n                            \n                            \n                                still\n                            \n                            \n                                styles\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    svgStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#037bfc'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:17\n                            \n                        \n                \n                    \n                        Default color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:27\n                            \n                        \n                \n                    \n                        Default enabled of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgba(0,0,0,0.05)'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:22\n                            \n                        \n                \n                    \n                        Default secondary color of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:32\n                            \n                        \n                \n                    \n                        Default size of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speed\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:37\n                            \n                        \n                \n                    \n                        Default speed of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        still\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:42\n                            \n                        \n                \n                    \n                        Default still of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:47\n                            \n                        \n                \n                    \n                        Default style of the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:52\n                            \n                        \n                \n                    \n                        Default stroke thickness of the spinner.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n\n                \n                    \n                        getsvgStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts:58\n                                \n                            \n                    \n                        \n                                This method should be implemented by the subclass.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core'\n\nexport const normalizeSize = (size: number | string) => (parseFloat(size.toString()).toString() === size.toString() ? `${size}px` : size.toString())\n\n/**\n * This is an abstract class representing the spinner options.\n * Subclasses should implement methods to work with.\n */\n@Component({\n    template: ''\n})\nexport abstract class SpinnerComponent {\n    /**\n     * Default color of the spinner.\n     * @type {string}\n     */\n    @Input() color = '#037bfc'\n    /**\n     * Default secondary color of the spinner.\n     * @type {string}\n     */\n    @Input() secondaryColor = 'rgba(0,0,0,0.05)'\n    /**\n     * Default enabled of the spinner.\n     * @type {string}\n     */\n    @Input() enabled = true\n    /**\n     * Default size of the spinner.\n     * @type {string}\n     */\n    @Input() size: number | string = 50\n    /**\n     * Default speed of the spinner.\n     * @type {string}\n     */\n    @Input() speed = 100\n    /**\n     * Default still of the spinner.\n     * @type {string}\n     */\n    @Input() still = false\n    /**\n     * Default style of the spinner.\n     * @type {string}\n     */\n    @Input() styles = {}\n    /**\n     * Default stroke thickness of the spinner.\n     * @type {string}\n     */\n    @Input() thickness = 160\n\n    /**\n     * This method should be implemented by the subclass.\n     * @returns {Object}\n     */\n    get svgStyle() {\n        return {\n            color: this.color,\n            overflow: 'visible',\n            width: normalizeSize(this.size),\n            height: normalizeSize(this.size),\n            ...(typeof this.styles === 'string' ? JSON.parse(this.styles) : this.styles)\n        }\n    }\n}\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CircularSpinnerComponent', 'selector': 'circular-spinner'},{'name': 'IconsComponent', 'selector': 'icons'},{'name': 'NgxDynamicTableComponent', 'selector': 'dynamic-table'},{'name': 'ScrollIndicatorComponent', 'selector': 'scroll-indicator'},{'name': 'SpinnerComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'MobilePaginationDirective', 'selector': '[nxtMobilePagination]'},{'name': 'StickyDirective', 'selector': '[sticky]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StickyDirective.html":{"url":"directives/StickyDirective.html","title":"directive - StickyDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  StickyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [sticky]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _scrollContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                makeSticky\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHTMLElement\n                            \n                            \n                                    Private\n                                setStylePropertyToElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollContainer\n                            \n                            \n                                top\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scrollContainer\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, platformId: object, stickyElement: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stickyElement\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        scrollContainer\n                    \n                \n                \n                    \n                        Type :     string | ElementRef | HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        makeSticky\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeSticky()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setHTMLElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHTMLElement(prop: string, value: string | ElementRef | HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prop\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | ElementRef | HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setStylePropertyToElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStylePropertyToElement(nativeEl: HTMLElement, property, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nativeEl\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                property\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _scrollContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        scrollContainer\n                    \n                \n\n                \n                    \n                        getscrollContainer()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:11\n                                \n                            \n\n                \n                    \n                        setscrollContainer(value: string | ElementRef | HTMLElement)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string | ElementRef | HTMLElement\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, Input, Inject, PLATFORM_ID } from '@angular/core'\nimport { DOCUMENT } from '@angular/common'\n\n@Directive({\n  selector: '[sticky]',\n  standalone: true\n})\nexport class StickyDirective implements OnInit {\n\n  @Input()\n  get scrollContainer(): string | ElementRef | HTMLElement {\n    return this._scrollContainer\n  }\n  set scrollContainer(value: string | ElementRef | HTMLElement) {\n    this.setHTMLElement('_scrollContainer', value)\n  }\n  private _scrollContainer!: HTMLElement\n\n  @Input() zIndex = 10\n  @Input() top = 0\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    @Inject(PLATFORM_ID) private platformId: object,\n    private stickyElement: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.makeSticky()\n  }\n\n  private setHTMLElement(\n    prop: string,\n    value: string | ElementRef | HTMLElement\n  ): void {\n    if (typeof value === 'string') {\n      this['_scrollContainer'] = this.document.getElementById(value)!\n    } else if (value instanceof ElementRef) {\n      this['_scrollContainer'] = value.nativeElement!\n    } else {\n      this['_scrollContainer'] = value\n    }\n  }\n\n  private makeSticky() {\n    const nativeElement: HTMLElement = this.stickyElement.nativeElement\n\n    this.setStylePropertyToElement(nativeElement, 'position', '-webkit-sticky')\n    this.setStylePropertyToElement(nativeElement, 'position', 'sticky')\n    this.setStylePropertyToElement(nativeElement, 'top', `${this.top}px`)\n    this.setStylePropertyToElement(nativeElement, 'zIndex', this.zIndex.toString())\n  }\n\n  private setStylePropertyToElement(\n    nativeEl: HTMLElement,\n    property: keyof CSSStyleDeclaration,\n    value: string\n  ) {\n    nativeEl.style[property.toString() as any] = value\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableAction.html":{"url":"interfaces/TableAction.html","title":"interface - TableAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         TableActionEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableActionEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableActionEnum } from \"./tableaction.enum\";\n\nexport interface TableAction {\n    name: string,\n    icon: string,\n    action: TableActionEnum\n}\n\nexport interface TableActionReturn {\n    action: TableActionEnum,\n    id?: string\n    row?: any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableActionReturn.html":{"url":"interfaces/TableActionReturn.html","title":"interface - TableActionReturn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableActionReturn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         TableActionEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableActionEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableActionEnum } from \"./tableaction.enum\";\n\nexport interface TableAction {\n    name: string,\n    icon: string,\n    action: TableActionEnum\n}\n\nexport interface TableActionReturn {\n    action: TableActionEnum,\n    id?: string\n    row?: any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tableoptions.html":{"url":"interfaces/Tableoptions.html","title":"interface - Tableoptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tableoptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/models/tableoptions.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            columnFilter\n                                        \n                                \n                                \n                                        \n                                            columnNames\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showPaginator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortColumn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortStart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         TableAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableAction[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnFilter:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         Column[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Column[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCount:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortColumn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortStart:     \"asc\" | \"desc\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"asc\" | \"desc\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableAction } from \"./tableaction.model\"\nimport { Column } from \"./column.model\"\n\nexport interface Tableoptions {\n    actions?: TableAction[]\n    columns: Column[]\n    columnFilter: string[]\n    columnNames: string[]\n    showCheckbox?: boolean\n    showCount?: boolean\n    showPaginator?: boolean\n    sortColumn?: string\n    sortStart?: 'asc' | 'desc'\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                This Pipe truncate the value parameter and returns it!\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, limit: number, startAt: number, ellipsis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        This function returns a value, thats sliced.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nvalue to truncate\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    \nCharlimit\n\n\n                                            \n                                        \n                                        \n                                                startAt\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    \nStartingchar\n\n\n                                            \n                                        \n                                        \n                                                ellipsis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '...'\n                                            \n\n                                            \n                                                    \nendingsigns\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * This Pipe truncate the value parameter and returns it!\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * This function returns a value, thats sliced.\n   * @param {any}     value - value to truncate\n   * @param {number}  [limit=20] - Charlimit\n   * @param {number}  [startAt=0] - Startingchar\n   * @param {string}  [ellipsis='...'] - endingsigns\n   */\n  transform(value: any, limit: number = 20, startAt: number = 0, ellipsis: string = '...'): any {\n    if (value.length > 10) {\n      return value.substr(startAt, limit) + ellipsis\n    }\n    return value\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nDocumentation\nExample :{\n    \"include\": [\"src/**/*.ts\"],\n    \"exclude\": [\"src/test.ts\", \"src/**/*.spec.ts\", \"src/app/file-to-exclude.ts\"]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/demo/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/circular-spinner.component.ts\n            \n            component\n            CircularSpinnerComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n            \n            variable\n            normalizeSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/icons/icons.component.ts\n            \n            component\n            IconsComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/icons/icons.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/components/scroll-indicator/scroll-indicator.component.ts\n            \n            component\n            ScrollIndicatorComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/directives/mobile-pagination/mobile-pagination.directive.ts\n            \n            directive\n            MobilePaginationDirective\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/directives/sticky/sticky.directive.ts\n            \n            directive\n            StickyDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/column.model.ts\n            \n            interface\n            Column\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n            \n            interface\n            TableAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableaction.model.ts\n            \n            interface\n            TableActionReturn\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/models/tableoptions.model.ts\n            \n            interface\n            Tableoptions\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n            \n            component\n            NgxDynamicTableComponent\n            \n                11 %\n                (3/26)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n            \n            variable\n            rowsAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/dynamic/dynamic.pipe.ts\n            \n            pipe\n            DynamicPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/id-to-value/id-to-value.pipe.ts\n            \n            pipe\n            IdToValuePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/pipes/truncate/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-dynamic-table/src/lib/services/dynamic-table.service.ts\n            \n            injectable\n            DynamicTableService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/cdk : ^17.2.0\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/material : 17.2.0\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableActionEnum   (projects/.../tableaction.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-dynamic-table/src/lib/models/tableaction.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TableActionEnum\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 SHOW\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 CHECK\n                            \n                        \n                        \n                            \n                                 CHECKALL\n                            \n                        \n                        \n                            \n                                Value : 128\n                            \n                        \n                        \n                            \n                                 QRCODE\n                            \n                        \n                        \n                            \n                                Value : 16\n                            \n                        \n                        \n                            \n                                 TANK\n                            \n                        \n                        \n                            \n                                Value : 32\n                            \n                        \n                        \n                            \n                                 CHECKLIST\n                            \n                        \n                        \n                            \n                                Value : 64\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngxDynamicTable\nThis project was generated with Angular CLI version 17.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (projects/.../app.config.ts)\n                        \n                        \n                            icons   (projects/.../icons.ts)\n                        \n                        \n                            normalizeSize   (projects/.../spinner.ts)\n                        \n                        \n                            rowsAnimation   (projects/.../ngx-dynamic-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/demo/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideRouter(routes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/components/icons/icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    'add'                   : ``,\n    'alert-triangle'        : ``,\n    'edit'                  : ``,\n    'check'                 : ``,\n    'dot'                   : ``,\n    'dots'                  : ``,\n    'dots-horizontal'       : ``,\n    'dots-vertical'         : ``,\n    'eye'                   : ``,\n    'eye-off'               : ``,\n    'filter'                : ``,\n    'list'                  : ``,\n    'list-check'            : ``,\n    'list-details'          : ``,\n    'pdf'                   : ``,\n    'pencil'                : ``,\n    'qrcode'                : ``,\n    'refresh'               : ``,\n    'search'                : ``,\n    'settings'              : ``,\n    'share'                 : ``,\n    'sort-ascending'        : ``,\n    'sort-descending'       : ``,\n    'sort-ascending-letters': ``,\n    'sort-descending-letters': ``,\n    'spinner'               : ``,\n    // 'spinner2'              : ``,\n    'table'                 : ``,\n    'trash'                 : ``, \n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/components/circular-spinner/spinner.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalizeSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (size: number | string) => (parseFloat(size.toString()).toString() === size.toString() ? `${size}px` : size.toString())\n                    \n                \n\n\n        \n    \n\n    projects/ngx-dynamic-table/src/lib/ngx-dynamic-table.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rowsAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('rowsAnimation', [\n  transition('void => *', [\n    style({ height: '*', opacity: '0', transform: 'translateX(-550px)', 'box-shadow': 'none' }),\n    sequence([\n      animate(\".35s ease\", style({ height: '*', opacity: '.2', transform: 'translateX(0)', 'box-shadow': 'none'  })),\n      animate(\".35s ease\", style({ height: '*', opacity: 1, transform: 'translateX(0)' }))\n    ])\n  ])\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
